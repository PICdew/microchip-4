

Microchip Technology PIC LITE Macro Assembler V1.32 build 58300 
                                                                                               Fri Sep 19 20:56:43 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 58300
     1                           	processor	16F1509
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	inittext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	dabs	1,0x7E,2
    19  0000                     	;# 
    20  0001                     	;# 
    21  0002                     	;# 
    22  0003                     	;# 
    23  0004                     	;# 
    24  0005                     	;# 
    25  0006                     	;# 
    26  0007                     	;# 
    27  0008                     	;# 
    28  0009                     	;# 
    29  000A                     	;# 
    30  000B                     	;# 
    31  000C                     	;# 
    32  000D                     	;# 
    33  000E                     	;# 
    34  0011                     	;# 
    35  0012                     	;# 
    36  0013                     	;# 
    37  0015                     	;# 
    38  0016                     	;# 
    39  0016                     	;# 
    40  0017                     	;# 
    41  0018                     	;# 
    42  0019                     	;# 
    43  001A                     	;# 
    44  001B                     	;# 
    45  001C                     	;# 
    46  008C                     	;# 
    47  008D                     	;# 
    48  008E                     	;# 
    49  0091                     	;# 
    50  0092                     	;# 
    51  0093                     	;# 
    52  0095                     	;# 
    53  0096                     	;# 
    54  0097                     	;# 
    55  0099                     	;# 
    56  009A                     	;# 
    57  009B                     	;# 
    58  009B                     	;# 
    59  009C                     	;# 
    60  009D                     	;# 
    61  009E                     	;# 
    62  009F                     	;# 
    63  010C                     	;# 
    64  010D                     	;# 
    65  010E                     	;# 
    66  0111                     	;# 
    67  0112                     	;# 
    68  0113                     	;# 
    69  0114                     	;# 
    70  0115                     	;# 
    71  0116                     	;# 
    72  0117                     	;# 
    73  0118                     	;# 
    74  0119                     	;# 
    75  011D                     	;# 
    76  018C                     	;# 
    77  018D                     	;# 
    78  018E                     	;# 
    79  0191                     	;# 
    80  0191                     	;# 
    81  0192                     	;# 
    82  0193                     	;# 
    83  0193                     	;# 
    84  0194                     	;# 
    85  0195                     	;# 
    86  0196                     	;# 
    87  0197                     	;# 
    88  0199                     	;# 
    89  019A                     	;# 
    90  019B                     	;# 
    91  019B                     	;# 
    92  019C                     	;# 
    93  019D                     	;# 
    94  019E                     	;# 
    95  019F                     	;# 
    96  020C                     	;# 
    97  020D                     	;# 
    98  0211                     	;# 
    99  0211                     	;# 
   100  0212                     	;# 
   101  0212                     	;# 
   102  0213                     	;# 
   103  0213                     	;# 
   104  0214                     	;# 
   105  0214                     	;# 
   106  0215                     	;# 
   107  0215                     	;# 
   108  0215                     	;# 
   109  0216                     	;# 
   110  0216                     	;# 
   111  0217                     	;# 
   112  0217                     	;# 
   113  0391                     	;# 
   114  0392                     	;# 
   115  0393                     	;# 
   116  0394                     	;# 
   117  0395                     	;# 
   118  0396                     	;# 
   119  0498                     	;# 
   120  0498                     	;# 
   121  0499                     	;# 
   122  049A                     	;# 
   123  049B                     	;# 
   124  049B                     	;# 
   125  049C                     	;# 
   126  049E                     	;# 
   127  049F                     	;# 
   128  0611                     	;# 
   129  0612                     	;# 
   130  0613                     	;# 
   131  0613                     	;# 
   132  0614                     	;# 
   133  0615                     	;# 
   134  0616                     	;# 
   135  0616                     	;# 
   136  0617                     	;# 
   137  0618                     	;# 
   138  0619                     	;# 
   139  0619                     	;# 
   140  061A                     	;# 
   141  061B                     	;# 
   142  061C                     	;# 
   143  061C                     	;# 
   144  0691                     	;# 
   145  0692                     	;# 
   146  0693                     	;# 
   147  0694                     	;# 
   148  0695                     	;# 
   149  0F0F                     	;# 
   150  0F10                     	;# 
   151  0F11                     	;# 
   152  0F12                     	;# 
   153  0F13                     	;# 
   154  0F14                     	;# 
   155  0F15                     	;# 
   156  0F16                     	;# 
   157  0F17                     	;# 
   158  0F18                     	;# 
   159  0F19                     	;# 
   160  0F1A                     	;# 
   161  0F1B                     	;# 
   162  0F1C                     	;# 
   163  0F1D                     	;# 
   164  0F1E                     	;# 
   165  0F1F                     	;# 
   166  0F20                     	;# 
   167  0F21                     	;# 
   168  0F22                     	;# 
   169  0F23                     	;# 
   170  0F24                     	;# 
   171  0F25                     	;# 
   172  0F26                     	;# 
   173  0F27                     	;# 
   174  0F28                     	;# 
   175  0F29                     	;# 
   176  0F2A                     	;# 
   177  0F2B                     	;# 
   178  0F2C                     	;# 
   179  0F2D                     	;# 
   180  0F2E                     	;# 
   181  0F2F                     	;# 
   182  0F8C                     	;# 
   183  0F8D                     	;# 
   184  0F91                     	;# 
   185  0F95                     	;# 
   186  0F96                     	;# 
   187  0F97                     	;# 
   188  0F9C                     	;# 
   189  0F9D                     	;# 
   190  0F9E                     	;# 
   191  0FE3                     	;# 
   192  0FE4                     	;# 
   193  0FE5                     	;# 
   194  0FE6                     	;# 
   195  0FE7                     	;# 
   196  0FE8                     	;# 
   197  0FE9                     	;# 
   198  0FEA                     	;# 
   199  0FEB                     	;# 
   200  0FED                     	;# 
   201  0FEE                     	;# 
   202  0FEF                     	;# 
   203                           
   204                           	psect	idataBANK0
   205  070B                     __pidataBANK0:	
   206                           
   207                           ;initializer for _randSeq
   208  070B  3401               	retlw	1
   209  070C  3403               	retlw	3
   210  070D  3402               	retlw	2
   211  070E  3406               	retlw	6
   212  070F  3402               	retlw	2
   213  0710  3405               	retlw	5
   214  0711  3401               	retlw	1
   215  0712  3403               	retlw	3
   216  0713  3406               	retlw	6
   217  0714  3404               	retlw	4
   218  0715  3405               	retlw	5
   219  0716  3402               	retlw	2
   220  0717  3404               	retlw	4
   221  0718  3406               	retlw	6
   222  0719  3403               	retlw	3
   223  071A  3401               	retlw	1
   224  071B  3405               	retlw	5
   225  071C  3404               	retlw	4
   226                           
   227                           ;initializer for _numMap
   228  071D  3408               	retlw	8
   229  071E  3441               	retlw	65
   230  071F  341C               	retlw	28
   231  0720  3455               	retlw	85
   232  0721  345D               	retlw	93
   233  0722  3477               	retlw	119
   234  000C                     _PORTA	set	12
   235  000D                     _PORTB	set	13
   236  000D                     _PORTBbits	set	13
   237  000E                     _PORTC	set	14
   238  009D                     _ADCON0bits	set	157
   239  009E                     _ADCON1bits	set	158
   240  009F                     _ADCON2bits	set	159
   241  009C                     _ADRESH	set	156
   242  009B                     _ADRESL	set	155
   243  0099                     _OSCCONbits	set	153
   244  008C                     _TRISA	set	140
   245  008D                     _TRISB	set	141
   246  008D                     _TRISBbits	set	141
   247  008E                     _TRISC	set	142
   248  010E                     _LATC	set	270
   249  018D                     _ANSELBbits	set	397
   250                           
   251                           ; #config settings
   252  0000                     
   253                           	psect	cinit
   254  07E9                     start_initialization:	
   255  07E9                     __initialization:	
   256                           
   257                           ; Clear objects allocated to BANK0
   258  07E9  01CA               	clrf	__pbssBANK0& (0+127)
   259  07EA  01CB               	clrf	(__pbssBANK0+1)& (0+127)
   260  07EB  01CC               	clrf	(__pbssBANK0+2)& (0+127)
   261  07EC  01CD               	clrf	(__pbssBANK0+3)& (0+127)
   262  07ED  01CE               	clrf	(__pbssBANK0+4)& (0+127)
   263  07EE  01CF               	clrf	(__pbssBANK0+5)& (0+127)
   264  07EF  01D0               	clrf	(__pbssBANK0+6)& (0+127)
   265  07F0  01D1               	clrf	(__pbssBANK0+7)& (0+127)
   266                           
   267                           ; Initialize objects allocated to BANK0
   268  07F1  300B               	movlw	low __pidataBANK0
   269  07F2  0084               	movwf	4
   270  07F3  3087               	movlw	(high __pidataBANK0)| (0+128)
   271  07F4  0085               	movwf	5
   272  07F5  3020               	movlw	low __pdataBANK0
   273  07F6  0086               	movwf	6
   274  07F7  3000               	movlw	high __pdataBANK0
   275  07F8  0087               	movwf	7
   276  07F9  3018               	movlw	24
   277  07FA  3186  26CF         	fcall	init_ram
   278  07FC                     end_of_initialization:	
   279                           ;End of C runtime variable initialization code
   280                           
   281  07FC                     __end_of__initialization:	
   282  07FC  107E               	bcf	pic14e$flags,0	;clear compiler interrupt flag
   283  07FD  0020               	movlb	0
   284  07FE  3187  2F23         	ljmp	_main	;jump to C main() function
   285                           
   286                           	psect	bssBANK0
   287  004A                     __pbssBANK0:	
   288  004A                     main@F4082:	
   289  004A                     	ds	8
   290                           
   291                           	psect	dataBANK0
   292  0020                     __pdataBANK0:	
   293  0020                     _randSeq:	
   294  0020                     	ds	18
   295  0032                     _numMap:	
   296  0032                     	ds	6
   297                           
   298                           	psect	inittext
   299  06CF                     init_ram:	
   300  06CF  00FE               	movwf	126
   301  06D0                     initloop:	
   302  06D0  0012               	moviw fsr0++
   303  06D1  001E               	movwi fsr1++
   304  06D2  0BFE               	decfsz	126,f
   305  06D3  2ED0               	goto	initloop
   306  06D4  3400               	retlw	0
   307                           
   308                           	psect	cstackCOMMON
   309  0070                     __pcstackCOMMON:	
   310  0070                     ?_setup:	
   311  0070                     ??_setup:	
   312                           ; 0 bytes @ 0x0
   313                           
   314  0070                     ?_setupADC:	
   315                           ; 0 bytes @ 0x0
   316                           
   317  0070                     ??_setupADC:	
   318                           ; 0 bytes @ 0x0
   319                           
   320  0070                     ?_waitADCacquireTime:	
   321                           ; 0 bytes @ 0x0
   322                           
   323  0070                     ??_waitADCacquireTime:	
   324                           ; 0 bytes @ 0x0
   325                           
   326  0070                     ?_startADCconversion:	
   327                           ; 0 bytes @ 0x0
   328                           
   329  0070                     ??_startADCconversion:	
   330                           ; 0 bytes @ 0x0
   331                           
   332  0070                     ?_waitForADCconversion:	
   333                           ; 0 bytes @ 0x0
   334                           
   335  0070                     ??_ADCconversionDone:	
   336                           ; 0 bytes @ 0x0
   337                           
   338  0070                     ?_ADCconversionDone:	
   339                           ; 0 bytes @ 0x0
   340                           
   341  0070                     ?_main:	
   342                           ; 1 bytes @ 0x0
   343                           
   344  0070                     ADCconversionDone@adcresult:	
   345                           ; 2 bytes @ 0x0
   346                           
   347                           
   348                           ; 1 bytes @ 0x0
   349  0070                     	ds	1
   350  0071                     ??_waitForADCconversion:	
   351  0071                     waitADCacquireTime@i:	
   352                           ; 0 bytes @ 0x1
   353                           
   354  0071                     waitForADCconversion@result:	
   355                           ; 1 bytes @ 0x1
   356                           
   357                           
   358                           ; 1 bytes @ 0x1
   359  0071                     	ds	1
   360  0072                     ??_main:	
   361                           
   362                           ; 0 bytes @ 0x2
   363  0072                     	ds	2
   364                           
   365                           	psect	cstackBANK0
   366  0038                     __pcstackBANK0:	
   367  0038                     main@resultArr:	
   368                           
   369                           ; 8 bytes @ 0x0
   370  0038                     	ds	8
   371  0040                     main@diff:	
   372                           
   373                           ; 2 bytes @ 0x8
   374  0040                     	ds	2
   375  0042                     main@rolling:	
   376                           
   377                           ; 1 bytes @ 0xA
   378  0042                     	ds	1
   379  0043                     main@index:	
   380                           
   381                           ; 1 bytes @ 0xB
   382  0043                     	ds	1
   383  0044                     main@lastAverage:	
   384                           
   385                           ; 2 bytes @ 0xC
   386  0044                     	ds	2
   387  0046                     main@countDown:	
   388                           
   389                           ; 1 bytes @ 0xE
   390  0046                     	ds	1
   391  0047                     main@average:	
   392                           
   393                           ; 2 bytes @ 0xF
   394  0047                     	ds	2
   395  0049                     main@i:	
   396                           
   397                           ; 1 bytes @ 0x11
   398  0049                     	ds	1
   399                           
   400                           	psect	maintext
   401  0723                     __pmaintext:	
   402 ;;
   403 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   404 ;;
   405 ;; *************** function _main *****************
   406 ;; Defined at:
   407 ;;		line 13 in file "LEDdice.c"
   408 ;; Parameters:    Size  Location     Type
   409 ;;		None
   410 ;; Auto vars:     Size  Location     Type
   411 ;;  resultArr       8    0[BANK0 ] unsigned int [4]
   412 ;;  average         2   15[BANK0 ] unsigned int 
   413 ;;  lastAverage     2   12[BANK0 ] unsigned int 
   414 ;;  diff            2    8[BANK0 ] unsigned int 
   415 ;;  i               1   17[BANK0 ] unsigned char 
   416 ;;  countDown       1   14[BANK0 ] unsigned char 
   417 ;;  index           1   11[BANK0 ] unsigned char 
   418 ;;  rolling         1   10[BANK0 ] unsigned char 
   419 ;; Return value:  Size  Location     Type
   420 ;;                  2   50[COMMON] int 
   421 ;; Registers used:
   422 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   423 ;; Tracked objects:
   424 ;;		On entry : 17F/0
   425 ;;		On exit  : 0/0
   426 ;;		Unchanged: 0/0
   427 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   428 ;;      Params:         0       0       0       0       0       0       0
   429 ;;      Locals:         0      18       0       0       0       0       0
   430 ;;      Temps:          2       0       0       0       0       0       0
   431 ;;      Totals:         2      18       0       0       0       0       0
   432 ;;Total ram usage:       20 bytes
   433 ;; Hardware stack levels required when called:    2
   434 ;; This function calls:
   435 ;;		_setup
   436 ;;		_setupADC
   437 ;;		_startADCconversion
   438 ;;		_waitADCacquireTime
   439 ;;		_waitForADCconversion
   440 ;; This function is called by:
   441 ;;		Startup code after reset
   442 ;; This function uses a non-reentrant model
   443 ;;
   444                           
   445                           
   446                           ;psect for function _main
   447  0723                     _main:	
   448                           
   449                           ;LEDdice.c: 15: setup();
   450                           
   451                           ;incstack = 0
   452                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
   453  0723  3186  26DF  3187   	fcall	_setup
   454                           
   455                           ;LEDdice.c: 17: setupADC();
   456  0726  3186  26F9  3187   	fcall	_setupADC
   457                           
   458                           ;LEDdice.c: 19: char i = 0, countDown = 0, rolling = 0, index = 0;
   459  0729  0020               	movlb	0	; select bank0
   460  072A  01C9               	clrf	main@i
   461  072B  01C6               	clrf	main@countDown
   462  072C  01C2               	clrf	main@rolling
   463  072D  01C3               	clrf	main@index
   464                           
   465                           ;LEDdice.c: 20: unsigned int diff = 0;
   466  072E  01C0               	clrf	main@diff
   467  072F  01C1               	clrf	main@diff+1
   468                           
   469                           ;LEDdice.c: 21: unsigned int resultArr[4] = {0};
   470  0730  304A               	movlw	low main@F4082
   471  0731  0086               	movwf	6
   472  0732  3000               	movlw	high main@F4082
   473  0733  0087               	movwf	7
   474  0734  3038               	movlw	low main@resultArr
   475  0735  0084               	movwf	4
   476  0736  3000               	movlw	high main@resultArr
   477  0737  0085               	movwf	5
   478  0738  3008               	movlw	8
   479  0739  00F2               	movwf	??_main
   480  073A                     u180:	
   481  073A  0016               	moviw fsr1++
   482  073B  001A               	movwi fsr0++
   483  073C  0BF2               	decfsz	??_main,f
   484  073D  2F3A               	goto	u180
   485                           
   486                           ;LEDdice.c: 22: unsigned int average = 0, lastAverage = 0;
   487  073E  01C7               	clrf	main@average
   488  073F  01C8               	clrf	main@average+1
   489  0740  01C4               	clrf	main@lastAverage
   490  0741  01C5               	clrf	main@lastAverage+1
   491  0742                     l681:	
   492                           ;LEDdice.c: 24: while (1)
   493                           
   494                           
   495                           ;LEDdice.c: 25: {
   496                           ;LEDdice.c: 28: lastAverage = average;
   497  0742  0020               	movlb	0	; select bank0
   498  0743  0848               	movf	main@average+1,w
   499  0744  01C5               	clrf	main@lastAverage+1
   500  0745  07C5               	addwf	main@lastAverage+1,f
   501  0746  0847               	movf	main@average,w
   502  0747  01C4               	clrf	main@lastAverage
   503  0748  07C4               	addwf	main@lastAverage,f
   504                           
   505                           ;LEDdice.c: 29: average = 0;
   506  0749  01C7               	clrf	main@average
   507  074A  01C8               	clrf	main@average+1
   508                           
   509                           ;LEDdice.c: 30: for (i = 0; i < 4; i++)
   510  074B  01C9               	clrf	main@i
   511  074C  3004               	movlw	4
   512  074D  0249               	subwf	main@i,w
   513  074E  1803               	btfsc	3,0
   514  074F  2F65               	goto	l55
   515  0750                     l691:	
   516                           
   517                           ;LEDdice.c: 31: {
   518                           ;LEDdice.c: 33: waitADCacquireTime();
   519  0750  3186  26D5  3187   	fcall	_waitADCacquireTime
   520                           
   521                           ;LEDdice.c: 34: startADCconversion();
   522  0753  3186  26C7  3187   	fcall	_startADCconversion
   523                           
   524                           ;LEDdice.c: 35: waitForADCconversion(&resultArr[i]);
   525  0756  0020               	movlb	0	; select bank0
   526  0757  3549               	lslf	main@i,w
   527  0758  3E38               	addlw	main@resultArr& (0+255)
   528  0759  3186  26CA  3187   	fcall	_waitForADCconversion
   529  075C  3001               	movlw	1
   530  075D  00F2               	movwf	??_main
   531  075E  0872               	movf	??_main,w
   532  075F  0020               	movlb	0	; select bank0
   533  0760  07C9               	addwf	main@i,f
   534  0761  3004               	movlw	4
   535  0762  0249               	subwf	main@i,w
   536  0763  1C03               	skipc
   537  0764  2F50               	goto	l691
   538  0765                     l55:	
   539                           
   540                           ;LEDdice.c: 36: }
   541                           ;LEDdice.c: 37: for (i = 1; i < 4; i++)
   542  0765  01C9               	clrf	main@i
   543  0766  0AC9               	incf	main@i,f
   544  0767  3004               	movlw	4
   545  0768  0249               	subwf	main@i,w
   546  0769  1803               	btfsc	3,0
   547  076A  2F7F               	goto	l711
   548  076B                     l705:	
   549                           
   550                           ;LEDdice.c: 38: {
   551                           ;LEDdice.c: 39: resultArr[0] += resultArr[i];
   552  076B  3549               	lslf	main@i,w
   553  076C  3E38               	addlw	main@resultArr& (0+255)
   554  076D  0086               	movwf	6
   555  076E  0187               	clrf	7
   556  076F  3F40               	moviw [0]fsr1
   557  0770  00F2               	movwf	??_main
   558  0771  3F41               	moviw [1]fsr1
   559  0772  00F3               	movwf	??_main+1
   560  0773  0872               	movf	??_main,w
   561  0774  07B8               	addwf	main@resultArr,f
   562  0775  0873               	movf	??_main+1,w
   563  0776  3DB9               	addwfc	main@resultArr+1,f
   564  0777  3001               	movlw	1
   565  0778  00F2               	movwf	??_main
   566  0779  0872               	movf	??_main,w
   567  077A  07C9               	addwf	main@i,f
   568  077B  3004               	movlw	4
   569  077C  0249               	subwf	main@i,w
   570  077D  1C03               	skipc
   571  077E  2F6B               	goto	l705
   572  077F                     l711:	
   573                           
   574                           ;LEDdice.c: 41: }
   575                           ;LEDdice.c: 42: average = ((resultArr[0] >> 2));
   576  077F  0839               	movf	main@resultArr+1,w
   577  0780  00F3               	movwf	??_main+1
   578  0781  0838               	movf	main@resultArr,w
   579  0782  00F2               	movwf	??_main
   580  0783  36F3               	lsrf	??_main+1,f
   581  0784  0CF2               	rrf	??_main,f
   582  0785  36F3               	lsrf	??_main+1,f
   583  0786  0CF2               	rrf	??_main,f
   584  0787  0872               	movf	??_main,w
   585  0788  00C7               	movwf	main@average
   586  0789  0873               	movf	??_main+1,w
   587  078A  00C8               	movwf	main@average+1
   588                           
   589                           ;LEDdice.c: 44: if (average > lastAverage)
   590  078B  0848               	movf	main@average+1,w
   591  078C  0245               	subwf	main@lastAverage+1,w
   592  078D  1D03               	skipz
   593  078E  2F91               	goto	u235
   594  078F  0847               	movf	main@average,w
   595  0790  0244               	subwf	main@lastAverage,w
   596  0791                     u235:	
   597  0791  1803               	skipnc
   598  0792  2F9F               	goto	l717
   599                           
   600                           ;LEDdice.c: 45: {
   601                           ;LEDdice.c: 46: diff = average - lastAverage;
   602  0793  0944               	comf	main@lastAverage,w
   603  0794  00F2               	movwf	??_main
   604  0795  0945               	comf	main@lastAverage+1,w
   605  0796  00F3               	movwf	??_main+1
   606  0797  0AF2               	incf	??_main,f
   607  0798  1903               	skipnz
   608  0799  0AF3               	incf	??_main+1,f
   609  079A  0847               	movf	main@average,w
   610  079B  0772               	addwf	??_main,w
   611  079C  00C0               	movwf	main@diff
   612  079D  0848               	movf	main@average+1,w
   613  079E  2FAA               	goto	L1
   614  079F                     l717:	
   615                           ;LEDdice.c: 47: }
   616                           
   617                           
   618                           ;LEDdice.c: 48: else
   619                           ;LEDdice.c: 49: {
   620                           ;LEDdice.c: 50: diff = lastAverage - average;
   621  079F  0947               	comf	main@average,w
   622  07A0  00F2               	movwf	??_main
   623  07A1  0948               	comf	main@average+1,w
   624  07A2  00F3               	movwf	??_main+1
   625  07A3  0AF2               	incf	??_main,f
   626  07A4  1903               	skipnz
   627  07A5  0AF3               	incf	??_main+1,f
   628  07A6  0844               	movf	main@lastAverage,w
   629  07A7  0772               	addwf	??_main,w
   630  07A8  00C0               	movwf	main@diff
   631  07A9  0845               	movf	main@lastAverage+1,w
   632  07AA                     L1:	
   633  07AA  3D73               	addwfc	??_main+1,w
   634  07AB  00C1               	movwf	main@diff+1
   635                           
   636                           ;LEDdice.c: 51: }
   637                           ;LEDdice.c: 52: if (diff > 0x0F)
   638  07AC  3000               	movlw	0
   639  07AD  0241               	subwf	main@diff+1,w
   640  07AE  3010               	movlw	16
   641  07AF  1903               	skipnz
   642  07B0  0240               	subwf	main@diff,w
   643  07B1  1C03               	skipc
   644  07B2  2FBB               	goto	l60
   645                           
   646                           ;LEDdice.c: 53: {
   647                           ;LEDdice.c: 54: countDown = 50;
   648  07B3  3032               	movlw	50
   649  07B4  00F2               	movwf	??_main
   650  07B5  0872               	movf	??_main,w
   651  07B6  00C6               	movwf	main@countDown
   652                           
   653                           ;LEDdice.c: 55: rolling = 1;
   654  07B7  01C2               	clrf	main@rolling
   655  07B8  0AC2               	incf	main@rolling,f
   656                           
   657                           ;LEDdice.c: 56: PORTBbits.RB6 = 0b1;
   658  07B9  170D               	bsf	13,6	;volatile
   659                           
   660                           ;LEDdice.c: 59: }
   661  07BA  2FBC               	goto	l727
   662  07BB                     l60:	
   663                           
   664                           ;LEDdice.c: 60: else
   665                           ;LEDdice.c: 61: {
   666                           ;LEDdice.c: 62: PORTBbits.RB6 = 0b0;
   667  07BB  130D               	bcf	13,6	;volatile
   668  07BC                     l727:	
   669                           
   670                           ;LEDdice.c: 63: }
   671                           ;LEDdice.c: 64: if (rolling)
   672  07BC  0842               	movf	main@rolling,w
   673  07BD  1903               	btfsc	3,2
   674  07BE  2FE0               	goto	l745
   675                           
   676                           ;LEDdice.c: 65: {
   677                           ;LEDdice.c: 66: if (countDown > 0)
   678  07BF  0846               	movf	main@countDown,w
   679  07C0  1903               	btfsc	3,2
   680  07C1  2FDA               	goto	l741
   681                           
   682                           ;LEDdice.c: 67: {
   683                           ;LEDdice.c: 68: countDown--;
   684  07C2  3001               	movlw	1
   685  07C3  02C6               	subwf	main@countDown,f
   686                           
   687                           ;LEDdice.c: 69: LATC = numMap[randSeq[index++]];
   688  07C4  0843               	movf	main@index,w
   689  07C5  3E20               	addlw	_randSeq& (0+255)
   690  07C6  0086               	movwf	6
   691  07C7  0187               	clrf	7
   692  07C8  0801               	movf	1,w
   693  07C9  3E32               	addlw	_numMap& (0+255)
   694  07CA  0086               	movwf	6
   695  07CB  0187               	clrf	7
   696  07CC  0801               	movf	1,w
   697  07CD  0022               	movlb	2	; select bank2
   698  07CE  008E               	movwf	14	;volatile
   699  07CF  3001               	movlw	1
   700  07D0  00F2               	movwf	??_main
   701  07D1  0872               	movf	??_main,w
   702  07D2  0020               	movlb	0	; select bank0
   703  07D3  07C3               	addwf	main@index,f
   704                           
   705                           ;LEDdice.c: 70: if (index >= 18)
   706  07D4  3012               	movlw	18
   707  07D5  0243               	subwf	main@index,w
   708  07D6  1C03               	skipc
   709  07D7  2F42               	goto	l681
   710                           
   711                           ;LEDdice.c: 71: index = 0;
   712  07D8  01C3               	clrf	main@index
   713                           
   714                           ;LEDdice.c: 72: }
   715  07D9  2F42               	goto	l681
   716  07DA                     l741:	
   717                           
   718                           ;LEDdice.c: 73: else
   719                           ;LEDdice.c: 74: {
   720                           ;LEDdice.c: 75: rolling = 0;
   721  07DA  01C2               	clrf	main@rolling
   722                           
   723                           ;LEDdice.c: 76: countDown = 50;
   724  07DB  3032               	movlw	50
   725  07DC  00F2               	movwf	??_main
   726  07DD  0872               	movf	??_main,w
   727  07DE  00C6               	movwf	main@countDown
   728                           
   729                           ;LEDdice.c: 77: }
   730                           ;LEDdice.c: 78: }
   731  07DF  2F42               	goto	l681
   732  07E0                     l745:	
   733                           
   734                           ;LEDdice.c: 79: else
   735                           ;LEDdice.c: 80: {
   736                           ;LEDdice.c: 81: if (countDown > 0)
   737  07E0  0846               	movf	main@countDown,w
   738  07E1  1903               	btfsc	3,2
   739  07E2  2FE6               	goto	l749
   740                           
   741                           ;LEDdice.c: 82: {
   742                           ;LEDdice.c: 83: countDown--;
   743  07E3  3001               	movlw	1
   744  07E4  02C6               	subwf	main@countDown,f
   745                           
   746                           ;LEDdice.c: 84: }
   747  07E5  2F42               	goto	l681
   748  07E6                     l749:	
   749                           
   750                           ;LEDdice.c: 85: else
   751                           ;LEDdice.c: 86: {
   752                           ;LEDdice.c: 87: LATC = 0x00;
   753  07E6  0022               	movlb	2	; select bank2
   754  07E7  018E               	clrf	14	;volatile
   755  07E8  2F42               	goto	l681
   756  07E9                     __end_of_main:	
   757                           ;LEDdice.c: 88: }
   758                           ;LEDdice.c: 89: }
   759                           ;LEDdice.c: 91: }
   760                           ;LEDdice.c: 92: return;
   761                           
   762                           
   763                           	psect	text1
   764  06CA                     __ptext1:	
   765 ;; *************** function _waitForADCconversion *****************
   766 ;; Defined at:
   767 ;;		line 135 in file "LEDdice.c"
   768 ;; Parameters:    Size  Location     Type
   769 ;;  result          1    wreg     PTR unsigned int 
   770 ;;		 -> main@resultArr(8), 
   771 ;; Auto vars:     Size  Location     Type
   772 ;;  result          1    1[COMMON] PTR unsigned int 
   773 ;;		 -> main@resultArr(8), 
   774 ;; Return value:  Size  Location     Type
   775 ;;		None               void
   776 ;; Registers used:
   777 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   778 ;; Tracked objects:
   779 ;;		On entry : 0/0
   780 ;;		On exit  : 0/0
   781 ;;		Unchanged: 0/0
   782 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   783 ;;      Params:         0       0       0       0       0       0       0
   784 ;;      Locals:         1       0       0       0       0       0       0
   785 ;;      Temps:          0       0       0       0       0       0       0
   786 ;;      Totals:         1       0       0       0       0       0       0
   787 ;;Total ram usage:        1 bytes
   788 ;; Hardware stack levels used:    1
   789 ;; Hardware stack levels required when called:    1
   790 ;; This function calls:
   791 ;;		_ADCconversionDone
   792 ;; This function is called by:
   793 ;;		_main
   794 ;; This function uses a non-reentrant model
   795 ;;
   796                           
   797                           
   798                           ;psect for function _waitForADCconversion
   799  06CA                     _waitForADCconversion:	
   800                           
   801                           ;incstack = 0
   802                           ; Regs used in _waitForADCconversion: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
   803                           ;waitForADCconversion@result stored from wreg
   804  06CA  00F1               	movwf	waitForADCconversion@result
   805                           
   806                           ;LEDdice.c: 139: return;
   807                           
   808                           ;LEDdice.c: 137: while (!ADCconversionDone(result))
   809  06CB  0871               	movf	waitForADCconversion@result,w
   810  06CC  3186  26EA         	fcall	_ADCconversionDone
   811  06CE  0008               	return
   812  06CF                     __end_of_waitForADCconversion:	
   813                           
   814                           	psect	text2
   815  06EA                     __ptext2:	
   816 ;; *************** function _ADCconversionDone *****************
   817 ;; Defined at:
   818 ;;		line 143 in file "LEDdice.c"
   819 ;; Parameters:    Size  Location     Type
   820 ;;  adcresult       1    wreg     PTR unsigned int 
   821 ;;		 -> main@resultArr(8), 
   822 ;; Auto vars:     Size  Location     Type
   823 ;;  adcresult       1    0[COMMON] PTR unsigned int 
   824 ;;		 -> main@resultArr(8), 
   825 ;; Return value:  Size  Location     Type
   826 ;;                  1    wreg      unsigned char 
   827 ;; Registers used:
   828 ;;		wreg, fsr1l, fsr1h
   829 ;; Tracked objects:
   830 ;;		On entry : 0/0
   831 ;;		On exit  : 0/0
   832 ;;		Unchanged: 0/0
   833 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   834 ;;      Params:         0       0       0       0       0       0       0
   835 ;;      Locals:         1       0       0       0       0       0       0
   836 ;;      Temps:          0       0       0       0       0       0       0
   837 ;;      Totals:         1       0       0       0       0       0       0
   838 ;;Total ram usage:        1 bytes
   839 ;; Hardware stack levels used:    1
   840 ;; This function calls:
   841 ;;		Nothing
   842 ;; This function is called by:
   843 ;;		_waitForADCconversion
   844 ;; This function uses a non-reentrant model
   845 ;;
   846                           
   847                           
   848                           ;psect for function _ADCconversionDone
   849  06EA                     _ADCconversionDone:	
   850                           
   851                           ;incstack = 0
   852                           ; Regs used in _ADCconversionDone: [wregfsr1]
   853                           ;ADCconversionDone@adcresult stored from wreg
   854  06EA  00F0               	movwf	ADCconversionDone@adcresult
   855                           
   856                           ;LEDdice.c: 145: if (!ADCON0bits.GO)
   857  06EB  0021               	movlb	1	; select bank1
   858  06EC  189D               	btfsc	29,1	;volatile
   859  06ED  2EF7               	goto	l621
   860                           
   861                           ;LEDdice.c: 146: {
   862                           ;LEDdice.c: 147: *adcresult = (ADRESH << 8) + ADRESL;
   863  06EE  0870               	movf	ADCconversionDone@adcresult,w
   864  06EF  0086               	movwf	6
   865  06F0  0187               	clrf	7
   866  06F1  081B               	movf	27,w	;volatile
   867  06F2  3FC0               	movwi [0]fsr1
   868  06F3  081C               	movf	28,w	;volatile
   869  06F4  3FC1               	movwi [1]fsr1
   870                           
   871                           ;LEDdice.c: 148: return 1;
   872  06F5  3001               	movlw	1
   873  06F6  0008               	return
   874  06F7                     l621:	
   875                           
   876                           ;LEDdice.c: 149: }
   877                           ;LEDdice.c: 150: return 0;
   878  06F7  3000               	movlw	0
   879  06F8  0008               	return
   880  06F9                     __end_of_ADCconversionDone:	
   881                           
   882                           	psect	text3
   883  06D5                     __ptext3:	
   884 ;; *************** function _waitADCacquireTime *****************
   885 ;; Defined at:
   886 ;;		line 122 in file "LEDdice.c"
   887 ;; Parameters:    Size  Location     Type
   888 ;;		None
   889 ;; Auto vars:     Size  Location     Type
   890 ;;  i               1    1[COMMON] unsigned char 
   891 ;; Return value:  Size  Location     Type
   892 ;;		None               void
   893 ;; Registers used:
   894 ;;		wreg, status,2, status,0
   895 ;; Tracked objects:
   896 ;;		On entry : 0/0
   897 ;;		On exit  : 0/0
   898 ;;		Unchanged: 0/0
   899 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   900 ;;      Params:         0       0       0       0       0       0       0
   901 ;;      Locals:         1       0       0       0       0       0       0
   902 ;;      Temps:          1       0       0       0       0       0       0
   903 ;;      Totals:         2       0       0       0       0       0       0
   904 ;;Total ram usage:        2 bytes
   905 ;; Hardware stack levels used:    1
   906 ;; This function calls:
   907 ;;		Nothing
   908 ;; This function is called by:
   909 ;;		_main
   910 ;; This function uses a non-reentrant model
   911 ;;
   912                           
   913                           
   914                           ;psect for function _waitADCacquireTime
   915  06D5                     _waitADCacquireTime:	
   916                           
   917                           ;LEDdice.c: 124: char i;
   918                           ;LEDdice.c: 125: for (i = 0; i < 10; i++);
   919                           
   920                           ;incstack = 0
   921                           ; Regs used in _waitADCacquireTime: [wreg+status,2+status,0]
   922  06D5  01F1               	clrf	waitADCacquireTime@i
   923  06D6                     L2:	
   924  06D6  300A               	movlw	10
   925  06D7  0271               	subwf	waitADCacquireTime@i,w
   926  06D8  1803               	btfsc	3,0
   927  06D9  0008               	return
   928  06DA  3001               	movlw	1
   929  06DB  00F0               	movwf	??_waitADCacquireTime
   930  06DC  0870               	movf	??_waitADCacquireTime,w
   931  06DD  07F1               	addwf	waitADCacquireTime@i,f
   932  06DE  2ED6               	goto	L2
   933  06DF                     __end_of_waitADCacquireTime:	
   934                           ;LEDdice.c: 126: return;
   935                           
   936                           
   937                           	psect	text4
   938  06C7                     __ptext4:	
   939 ;; *************** function _startADCconversion *****************
   940 ;; Defined at:
   941 ;;		line 129 in file "LEDdice.c"
   942 ;; Parameters:    Size  Location     Type
   943 ;;		None
   944 ;; Auto vars:     Size  Location     Type
   945 ;;		None
   946 ;; Return value:  Size  Location     Type
   947 ;;		None               void
   948 ;; Registers used:
   949 ;;		None
   950 ;; Tracked objects:
   951 ;;		On entry : 0/0
   952 ;;		On exit  : 0/0
   953 ;;		Unchanged: 0/0
   954 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   955 ;;      Params:         0       0       0       0       0       0       0
   956 ;;      Locals:         0       0       0       0       0       0       0
   957 ;;      Temps:          0       0       0       0       0       0       0
   958 ;;      Totals:         0       0       0       0       0       0       0
   959 ;;Total ram usage:        0 bytes
   960 ;; Hardware stack levels used:    1
   961 ;; This function calls:
   962 ;;		Nothing
   963 ;; This function is called by:
   964 ;;		_main
   965 ;; This function uses a non-reentrant model
   966 ;;
   967                           
   968                           
   969                           ;psect for function _startADCconversion
   970  06C7                     _startADCconversion:	
   971                           
   972                           ;LEDdice.c: 131: ADCON0bits.GO = 0b1;
   973                           
   974                           ;incstack = 0
   975                           ; Regs used in _startADCconversion: []
   976  06C7  0021               	movlb	1	; select bank1
   977  06C8  149D               	bsf	29,1	;volatile
   978                           
   979                           ;LEDdice.c: 132: return;
   980  06C9  0008               	return
   981  06CA                     __end_of_startADCconversion:	
   982                           
   983                           	psect	text5
   984  06F9                     __ptext5:	
   985 ;; *************** function _setupADC *****************
   986 ;; Defined at:
   987 ;;		line 109 in file "LEDdice.c"
   988 ;; Parameters:    Size  Location     Type
   989 ;;		None
   990 ;; Auto vars:     Size  Location     Type
   991 ;;		None
   992 ;; Return value:  Size  Location     Type
   993 ;;		None               void
   994 ;; Registers used:
   995 ;;		wreg, status,2, status,0
   996 ;; Tracked objects:
   997 ;;		On entry : 0/0
   998 ;;		On exit  : 0/0
   999 ;;		Unchanged: 0/0
  1000 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1001 ;;      Params:         0       0       0       0       0       0       0
  1002 ;;      Locals:         0       0       0       0       0       0       0
  1003 ;;      Temps:          0       0       0       0       0       0       0
  1004 ;;      Totals:         0       0       0       0       0       0       0
  1005 ;;Total ram usage:        0 bytes
  1006 ;; Hardware stack levels used:    1
  1007 ;; This function calls:
  1008 ;;		Nothing
  1009 ;; This function is called by:
  1010 ;;		_main
  1011 ;; This function uses a non-reentrant model
  1012 ;;
  1013                           
  1014                           
  1015                           ;psect for function _setupADC
  1016  06F9                     _setupADC:	
  1017                           
  1018                           ;LEDdice.c: 111: TRISBbits.TRISB5 = 0b1;
  1019                           
  1020                           ;incstack = 0
  1021                           ; Regs used in _setupADC: [wreg+status,2+status,0]
  1022  06F9  0021               	movlb	1	; select bank1
  1023  06FA  168D               	bsf	13,5	;volatile
  1024                           
  1025                           ;LEDdice.c: 112: ANSELBbits.ANSB5 = 0b1;
  1026  06FB  0023               	movlb	3	; select bank3
  1027  06FC  168D               	bsf	13,5	;volatile
  1028                           
  1029                           ;LEDdice.c: 113: ADCON0bits.CHS = 0b01011;
  1030  06FD  0021               	movlb	1	; select bank1
  1031  06FE  081D               	movf	29,w	;volatile
  1032  06FF  3983               	andlw	-125
  1033  0700  382C               	iorlw	44
  1034  0701  009D               	movwf	29	;volatile
  1035                           
  1036                           ;LEDdice.c: 114: ADCON1bits.ADFM = 0b1;
  1037  0702  179E               	bsf	30,7	;volatile
  1038                           
  1039                           ;LEDdice.c: 115: ADCON1bits.ADCS = 0b111;
  1040  0703  3070               	movlw	112
  1041  0704  049E               	iorwf	30,f	;volatile
  1042                           
  1043                           ;LEDdice.c: 116: ADCON1bits.ADPREF = 0b00;
  1044  0705  30FC               	movlw	-4
  1045  0706  059E               	andwf	30,f	;volatile
  1046                           
  1047                           ;LEDdice.c: 117: ADCON2bits.TRIGSEL = 0b0000;
  1048  0707  300F               	movlw	-241
  1049  0708  059F               	andwf	31,f	;volatile
  1050                           
  1051                           ;LEDdice.c: 118: ADCON0bits.ADON = 0b1;
  1052  0709  141D               	bsf	29,0	;volatile
  1053  070A  0008               	return
  1054  070B                     __end_of_setupADC:	
  1055                           
  1056                           	psect	text6
  1057  06DF                     __ptext6:	
  1058 ;; *************** function _setup *****************
  1059 ;; Defined at:
  1060 ;;		line 95 in file "LEDdice.c"
  1061 ;; Parameters:    Size  Location     Type
  1062 ;;		None
  1063 ;; Auto vars:     Size  Location     Type
  1064 ;;		None
  1065 ;; Return value:  Size  Location     Type
  1066 ;;		None               void
  1067 ;; Registers used:
  1068 ;;		wreg, status,2, status,0
  1069 ;; Tracked objects:
  1070 ;;		On entry : 0/0
  1071 ;;		On exit  : 0/0
  1072 ;;		Unchanged: 0/0
  1073 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1074 ;;      Params:         0       0       0       0       0       0       0
  1075 ;;      Locals:         0       0       0       0       0       0       0
  1076 ;;      Temps:          0       0       0       0       0       0       0
  1077 ;;      Totals:         0       0       0       0       0       0       0
  1078 ;;Total ram usage:        0 bytes
  1079 ;; Hardware stack levels used:    1
  1080 ;; This function calls:
  1081 ;;		Nothing
  1082 ;; This function is called by:
  1083 ;;		_main
  1084 ;; This function uses a non-reentrant model
  1085 ;;
  1086                           
  1087                           
  1088                           ;psect for function _setup
  1089  06DF                     _setup:	
  1090                           
  1091                           ;LEDdice.c: 97: OSCCONbits.IRCF = 0b0000;
  1092                           
  1093                           ;incstack = 0
  1094                           ; Regs used in _setup: [wreg+status,2+status,0]
  1095  06DF  3087               	movlw	-121
  1096  06E0  0021               	movlb	1	; select bank1
  1097  06E1  0599               	andwf	25,f	;volatile
  1098                           
  1099                           ;LEDdice.c: 98: TRISA = 0x00;
  1100  06E2  018C               	clrf	12	;volatile
  1101                           
  1102                           ;LEDdice.c: 99: TRISB = 0x00;
  1103  06E3  018D               	clrf	13	;volatile
  1104                           
  1105                           ;LEDdice.c: 100: TRISC = 0x00;
  1106  06E4  018E               	clrf	14	;volatile
  1107                           
  1108                           ;LEDdice.c: 101: PORTA = 0x00;
  1109  06E5  0020               	movlb	0	; select bank0
  1110  06E6  018C               	clrf	12	;volatile
  1111                           
  1112                           ;LEDdice.c: 102: PORTB = 0x00;
  1113  06E7  018D               	clrf	13	;volatile
  1114                           
  1115                           ;LEDdice.c: 103: PORTC = 0x00;
  1116  06E8  018E               	clrf	14	;volatile
  1117  06E9  0008               	return
  1118  06EA                     __end_of_setup:	
  1119  007E                     btemp	set	126	;btemp
  1120  007E                     pic14e$flags	set	126
  1121  007E                     wtemp	set	126
  1122  007E                     wtemp0	set	126
  1123  0080                     wtemp1	set	128
  1124  0082                     wtemp2	set	130
  1125  0084                     wtemp3	set	132
  1126  0086                     wtemp4	set	134
  1127  0088                     wtemp5	set	136
  1128  007F                     wtemp6	set	127
  1129  007E                     ttemp	set	126
  1130  007E                     ttemp0	set	126
  1131  0081                     ttemp1	set	129
  1132  0084                     ttemp2	set	132
  1133  0087                     ttemp3	set	135
  1134  007F                     ttemp4	set	127
  1135  007E                     ltemp	set	126
  1136  007E                     ltemp0	set	126
  1137  0082                     ltemp1	set	130
  1138  0086                     ltemp2	set	134
  1139  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    0
    Data        24
    BSS         8
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      4       4
    BANK0            80     18      50
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0

Pointer List with Targets:

    ADCconversionDone@adcresult	PTR unsigned int  size(1) Largest target is 8
		 -> main@resultArr(BANK0[8]), 

    waitForADCconversion@result	PTR unsigned int  size(1) Largest target is 8
		 -> main@resultArr(BANK0[8]), 


Critical Paths under _main in COMMON

    _main->_waitADCacquireTime
    _main->_waitForADCconversion
    _waitForADCconversion->_ADCconversionDone

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                20    20      0     657
                                              2 COMMON     2     2      0
                                              0 BANK0     18    18      0
                              _setup
                           _setupADC
                 _startADCconversion
                 _waitADCacquireTime
               _waitForADCconversion
 ---------------------------------------------------------------------------------
 (1) _waitForADCconversion                                 1     1      0      98
                                              1 COMMON     1     1      0
                  _ADCconversionDone
 ---------------------------------------------------------------------------------
 (2) _ADCconversionDone                                    1     1      0      49
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _waitADCacquireTime                                   2     2      0      46
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _startADCconversion                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setupADC                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _setup
   _setupADC
   _startADCconversion
   _waitADCacquireTime
   _waitForADCconversion
     _ADCconversionDone

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1E0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      4       4       2       28.6%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      36       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     12      32       6       62.5%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
DATA                 0      0      36      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.32 build 58300 
Symbol Table                                                                                   Fri Sep 19 20:56:43 2014

           _waitADCacquireTime 06D5                    __CFG_CP$OFF 0000                             l60 07BB  
                           l55 0765                    __CFG_LVP$ON 0000            ?_waitADCacquireTime 0070  
                          l621 06F7                            l711 077F                            l705 076B  
                          l741 07DA                            l717 079F                            l727 07BC  
                          l745 07E0                            l681 0742                            l691 0750  
                          l749 07E6                            u235 0791                            u180 073A  
                 __CFG_BORV$LO 0000                    main@average 0047                           _LATC 010E  
                 __CFG_WRT$OFF 0000           ??_waitADCacquireTime 0070                           _main 0723  
                         fsr0h 0005                           fsr1h 0007                           fsr0l 0004  
                         indf1 0001                           fsr1l 0006                           btemp 007E  
                __CFG_BOREN$ON 0000                           ltemp 007E                    main@rolling 0042  
                         start 0003                           ttemp 007E                           wtemp 007E  
                __CFG_IESO$OFF 0000                  __CFG_MCLRE$ON 0000                          ?_main 0070  
                __CFG_WDTE$OFF 0000                          _PORTA 000C                          _PORTB 000D  
                        _PORTC 000E                          _TRISA 008C                          _TRISB 008D  
                        _TRISC 008E                 __CFG_FCMEN$OFF 0000                          _setup 06DF  
                        main@i 0049                          ltemp0 007E                          ltemp1 0082  
                        ltemp2 0086                          ltemp3 0080                          ttemp0 007E  
                        ttemp1 0081                          ttemp2 0084                          ttemp3 0087  
                        ttemp4 007F                          wtemp0 007E                          wtemp1 0080  
                        wtemp2 0082                          wtemp3 0084                          wtemp4 0086  
                        wtemp5 0088                          wtemp6 007F                __initialization 07E9  
                 __end_of_main 07E9                 __CFG_LPBOR$OFF 0000                         ??_main 0072  
__size_of_waitForADCconversion 0005                         _ADRESH 009C                         _ADRESL 009B  
                       ?_setup 0070                  main@countDown 0046                 __CFG_PWRTE$OFF 0000  
               __CFG_STVREN$ON 0000                         _numMap 0032                  main@resultArr 0038  
             __end_of_setupADC 070B        __end_of__initialization 07FC             _startADCconversion 06C7  
               __pcstackCOMMON 0070                   __pidataBANK0 070B                  __end_of_setup 06EA  
          ?_startADCconversion 0070            waitADCacquireTime@i 0071                        ??_setup 0070  
                   __pbssBANK0 004A           ??_startADCconversion 0070                     __pmaintext 0723  
  __size_of_waitADCacquireTime 000A                      ?_setupADC 0070                        __ptext1 06CA  
                      __ptext2 06EA                        __ptext3 06D5                        __ptext4 06C7  
                      __ptext5 06F9                        __ptext6 06DF                        _randSeq 0020  
         end_of_initialization 07FC                        init_ram 06CF                        initloop 06D0  
             __CFG_CLKOUTEN$ON 0000   __end_of_waitForADCconversion 06CF                     ??_setupADC 0070  
                    _PORTBbits 000D               __CFG_FOSC$INTOSC 0000     ADCconversionDone@adcresult 0070  
                    _TRISBbits 008D            start_initialization 07E9     waitForADCconversion@result 0071  
                  __pdataBANK0 0020                      ___latbits 0002                  __pcstackBANK0 0038  
         _waitForADCconversion 06CA    __size_of_startADCconversion 0003              __size_of_setupADC 0012  
            _ADCconversionDone 06EA             ?_ADCconversionDone 0070          ?_waitForADCconversion 0070  
          ??_ADCconversionDone 0070                 __size_of_setup 000B     __end_of_waitADCacquireTime 06DF  
              main@lastAverage 0044                      main@F4082 004A      __end_of_ADCconversionDone 06F9  
                   _ADCON0bits 009D                     _ADCON1bits 009E                     _ADCON2bits 009F  
                    main@index 0043                     _ANSELBbits 018D         ??_waitForADCconversion 0071  
                __size_of_main 00C6                       _setupADC 06F9     __size_of_ADCconversionDone 000F  
                     main@diff 0040                    pic14e$flags 007E                     _OSCCONbits 0099  
   __end_of_startADCconversion 06CA  
