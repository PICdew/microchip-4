

Microchip Technology PIC LITE Macro Assembler V1.32 build 58300 
                                                                                               Mon Dec 29 10:23:40 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 58300
     1                           	processor	16F1509
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	inittext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	dabs	1,0x7E,2
    19  0000                     	;# 
    20  0001                     	;# 
    21  0002                     	;# 
    22  0003                     	;# 
    23  0004                     	;# 
    24  0005                     	;# 
    25  0006                     	;# 
    26  0007                     	;# 
    27  0008                     	;# 
    28  0009                     	;# 
    29  000A                     	;# 
    30  000B                     	;# 
    31  000C                     	;# 
    32  000D                     	;# 
    33  000E                     	;# 
    34  0011                     	;# 
    35  0012                     	;# 
    36  0013                     	;# 
    37  0015                     	;# 
    38  0016                     	;# 
    39  0016                     	;# 
    40  0017                     	;# 
    41  0018                     	;# 
    42  0019                     	;# 
    43  001A                     	;# 
    44  001B                     	;# 
    45  001C                     	;# 
    46  008C                     	;# 
    47  008D                     	;# 
    48  008E                     	;# 
    49  0091                     	;# 
    50  0092                     	;# 
    51  0093                     	;# 
    52  0095                     	;# 
    53  0096                     	;# 
    54  0097                     	;# 
    55  0099                     	;# 
    56  009A                     	;# 
    57  009B                     	;# 
    58  009B                     	;# 
    59  009C                     	;# 
    60  009D                     	;# 
    61  009E                     	;# 
    62  009F                     	;# 
    63  010C                     	;# 
    64  010D                     	;# 
    65  010E                     	;# 
    66  0111                     	;# 
    67  0112                     	;# 
    68  0113                     	;# 
    69  0114                     	;# 
    70  0115                     	;# 
    71  0116                     	;# 
    72  0117                     	;# 
    73  0118                     	;# 
    74  0119                     	;# 
    75  011D                     	;# 
    76  018C                     	;# 
    77  018D                     	;# 
    78  018E                     	;# 
    79  0191                     	;# 
    80  0191                     	;# 
    81  0192                     	;# 
    82  0193                     	;# 
    83  0193                     	;# 
    84  0194                     	;# 
    85  0195                     	;# 
    86  0196                     	;# 
    87  0197                     	;# 
    88  0199                     	;# 
    89  019A                     	;# 
    90  019B                     	;# 
    91  019B                     	;# 
    92  019C                     	;# 
    93  019D                     	;# 
    94  019E                     	;# 
    95  019F                     	;# 
    96  020C                     	;# 
    97  020D                     	;# 
    98  0211                     	;# 
    99  0211                     	;# 
   100  0212                     	;# 
   101  0212                     	;# 
   102  0213                     	;# 
   103  0213                     	;# 
   104  0214                     	;# 
   105  0214                     	;# 
   106  0215                     	;# 
   107  0215                     	;# 
   108  0215                     	;# 
   109  0216                     	;# 
   110  0216                     	;# 
   111  0217                     	;# 
   112  0217                     	;# 
   113  0391                     	;# 
   114  0392                     	;# 
   115  0393                     	;# 
   116  0394                     	;# 
   117  0395                     	;# 
   118  0396                     	;# 
   119  0498                     	;# 
   120  0498                     	;# 
   121  0499                     	;# 
   122  049A                     	;# 
   123  049B                     	;# 
   124  049B                     	;# 
   125  049C                     	;# 
   126  049E                     	;# 
   127  049F                     	;# 
   128  0611                     	;# 
   129  0612                     	;# 
   130  0613                     	;# 
   131  0613                     	;# 
   132  0614                     	;# 
   133  0615                     	;# 
   134  0616                     	;# 
   135  0616                     	;# 
   136  0617                     	;# 
   137  0618                     	;# 
   138  0619                     	;# 
   139  0619                     	;# 
   140  061A                     	;# 
   141  061B                     	;# 
   142  061C                     	;# 
   143  061C                     	;# 
   144  0691                     	;# 
   145  0692                     	;# 
   146  0693                     	;# 
   147  0694                     	;# 
   148  0695                     	;# 
   149  0F0F                     	;# 
   150  0F10                     	;# 
   151  0F11                     	;# 
   152  0F12                     	;# 
   153  0F13                     	;# 
   154  0F14                     	;# 
   155  0F15                     	;# 
   156  0F16                     	;# 
   157  0F17                     	;# 
   158  0F18                     	;# 
   159  0F19                     	;# 
   160  0F1A                     	;# 
   161  0F1B                     	;# 
   162  0F1C                     	;# 
   163  0F1D                     	;# 
   164  0F1E                     	;# 
   165  0F1F                     	;# 
   166  0F20                     	;# 
   167  0F21                     	;# 
   168  0F22                     	;# 
   169  0F23                     	;# 
   170  0F24                     	;# 
   171  0F25                     	;# 
   172  0F26                     	;# 
   173  0F27                     	;# 
   174  0F28                     	;# 
   175  0F29                     	;# 
   176  0F2A                     	;# 
   177  0F2B                     	;# 
   178  0F2C                     	;# 
   179  0F2D                     	;# 
   180  0F2E                     	;# 
   181  0F2F                     	;# 
   182  0F8C                     	;# 
   183  0F8D                     	;# 
   184  0F91                     	;# 
   185  0F95                     	;# 
   186  0F96                     	;# 
   187  0F97                     	;# 
   188  0F9C                     	;# 
   189  0F9D                     	;# 
   190  0F9E                     	;# 
   191  0FE3                     	;# 
   192  0FE4                     	;# 
   193  0FE5                     	;# 
   194  0FE6                     	;# 
   195  0FE7                     	;# 
   196  0FE8                     	;# 
   197  0FE9                     	;# 
   198  0FEA                     	;# 
   199  0FEB                     	;# 
   200  0FED                     	;# 
   201  0FEE                     	;# 
   202  0FEF                     	;# 
   203                           
   204                           	psect	idataBANK0
   205  070A                     __pidataBANK0:	
   206                           
   207                           ;initializer for _randSeq
   208  070A  3401               	retlw	1
   209  070B  3403               	retlw	3
   210  070C  3402               	retlw	2
   211  070D  3406               	retlw	6
   212  070E  3402               	retlw	2
   213  070F  3405               	retlw	5
   214  0710  3401               	retlw	1
   215  0711  3403               	retlw	3
   216  0712  3406               	retlw	6
   217  0713  3404               	retlw	4
   218  0714  3405               	retlw	5
   219  0715  3402               	retlw	2
   220  0716  3404               	retlw	4
   221  0717  3406               	retlw	6
   222  0718  3403               	retlw	3
   223  0719  3401               	retlw	1
   224  071A  3405               	retlw	5
   225  071B  3404               	retlw	4
   226                           
   227                           ;initializer for _numMap
   228  071C  3408               	retlw	8
   229  071D  3441               	retlw	65
   230  071E  341C               	retlw	28
   231  071F  3455               	retlw	85
   232  0720  345D               	retlw	93
   233  0721  3477               	retlw	119
   234  000C                     _PORTA	set	12
   235  000D                     _PORTB	set	13
   236  000D                     _PORTBbits	set	13
   237  000E                     _PORTC	set	14
   238  009D                     _ADCON0bits	set	157
   239  009E                     _ADCON1bits	set	158
   240  009F                     _ADCON2bits	set	159
   241  009C                     _ADRESH	set	156
   242  009B                     _ADRESL	set	155
   243  0099                     _OSCCONbits	set	153
   244  008C                     _TRISA	set	140
   245  008D                     _TRISB	set	141
   246  008D                     _TRISBbits	set	141
   247  008E                     _TRISC	set	142
   248  010E                     _LATC	set	270
   249  018D                     _ANSELBbits	set	397
   250                           
   251                           ; #config settings
   252  0000                     
   253                           	psect	cinit
   254  07E9                     start_initialization:	
   255  07E9                     __initialization:	
   256                           
   257                           ; Clear objects allocated to BANK0
   258  07E9  01CA               	clrf	__pbssBANK0& (0+127)
   259  07EA  01CB               	clrf	(__pbssBANK0+1)& (0+127)
   260  07EB  01CC               	clrf	(__pbssBANK0+2)& (0+127)
   261  07EC  01CD               	clrf	(__pbssBANK0+3)& (0+127)
   262  07ED  01CE               	clrf	(__pbssBANK0+4)& (0+127)
   263  07EE  01CF               	clrf	(__pbssBANK0+5)& (0+127)
   264  07EF  01D0               	clrf	(__pbssBANK0+6)& (0+127)
   265  07F0  01D1               	clrf	(__pbssBANK0+7)& (0+127)
   266                           
   267                           ; Initialize objects allocated to BANK0
   268  07F1  300A               	movlw	low __pidataBANK0
   269  07F2  0084               	movwf	4
   270  07F3  3087               	movlw	(high __pidataBANK0)| (0+128)
   271  07F4  0085               	movwf	5
   272  07F5  3020               	movlw	low __pdataBANK0
   273  07F6  0086               	movwf	6
   274  07F7  3000               	movlw	high __pdataBANK0
   275  07F8  0087               	movwf	7
   276  07F9  3018               	movlw	24
   277  07FA  3186  26CE         	fcall	init_ram
   278  07FC                     end_of_initialization:	
   279                           ;End of C runtime variable initialization code
   280                           
   281  07FC                     __end_of__initialization:	
   282  07FC  107E               	bcf	pic14e$flags,0	;clear compiler interrupt flag
   283  07FD  0020               	movlb	0
   284  07FE  3187  2F22         	ljmp	_main	;jump to C main() function
   285                           
   286                           	psect	bssBANK0
   287  004A                     __pbssBANK0:	
   288  004A                     main@F4082:	
   289  004A                     	ds	8
   290                           
   291                           	psect	dataBANK0
   292  0020                     __pdataBANK0:	
   293  0020                     _randSeq:	
   294  0020                     	ds	18
   295  0032                     _numMap:	
   296  0032                     	ds	6
   297                           
   298                           	psect	inittext
   299  06CE                     init_ram:	
   300  06CE  00FE               	movwf	126
   301  06CF                     initloop:	
   302  06CF  0012               	moviw fsr0++
   303  06D0  001E               	movwi fsr1++
   304  06D1  0BFE               	decfsz	126,f
   305  06D2  2ECF               	goto	initloop
   306  06D3  3400               	retlw	0
   307                           
   308                           	psect	cstackCOMMON
   309  0070                     __pcstackCOMMON:	
   310  0070                     ?_setup:	
   311  0070                     ??_setup:	
   312                           ; 0 bytes @ 0x0
   313                           
   314  0070                     ?_setupADC:	
   315                           ; 0 bytes @ 0x0
   316                           
   317  0070                     ??_setupADC:	
   318                           ; 0 bytes @ 0x0
   319                           
   320  0070                     ?_waitADCacquireTime:	
   321                           ; 0 bytes @ 0x0
   322                           
   323  0070                     ??_waitADCacquireTime:	
   324                           ; 0 bytes @ 0x0
   325                           
   326  0070                     ?_startADCconversion:	
   327                           ; 0 bytes @ 0x0
   328                           
   329  0070                     ??_startADCconversion:	
   330                           ; 0 bytes @ 0x0
   331                           
   332  0070                     ?_waitForADCconversion:	
   333                           ; 0 bytes @ 0x0
   334                           
   335  0070                     ??_ADCconversionDone:	
   336                           ; 0 bytes @ 0x0
   337                           
   338  0070                     ?_ADCconversionDone:	
   339                           ; 0 bytes @ 0x0
   340                           
   341  0070                     ?_main:	
   342                           ; 1 bytes @ 0x0
   343                           
   344  0070                     ADCconversionDone@adcresult:	
   345                           ; 2 bytes @ 0x0
   346                           
   347                           
   348                           ; 1 bytes @ 0x0
   349  0070                     	ds	1
   350  0071                     ??_waitForADCconversion:	
   351  0071                     waitADCacquireTime@i:	
   352                           ; 0 bytes @ 0x1
   353                           
   354  0071                     waitForADCconversion@result:	
   355                           ; 1 bytes @ 0x1
   356                           
   357                           
   358                           ; 1 bytes @ 0x1
   359  0071                     	ds	1
   360  0072                     ??_main:	
   361                           
   362                           ; 0 bytes @ 0x2
   363  0072                     	ds	2
   364                           
   365                           	psect	cstackBANK0
   366  0038                     __pcstackBANK0:	
   367  0038                     main@resultArr:	
   368                           
   369                           ; 8 bytes @ 0x0
   370  0038                     	ds	8
   371  0040                     main@diff:	
   372                           
   373                           ; 2 bytes @ 0x8
   374  0040                     	ds	2
   375  0042                     main@rolling:	
   376                           
   377                           ; 1 bytes @ 0xA
   378  0042                     	ds	1
   379  0043                     main@index:	
   380                           
   381                           ; 1 bytes @ 0xB
   382  0043                     	ds	1
   383  0044                     main@lastAverage:	
   384                           
   385                           ; 2 bytes @ 0xC
   386  0044                     	ds	2
   387  0046                     main@countDown:	
   388                           
   389                           ; 1 bytes @ 0xE
   390  0046                     	ds	1
   391  0047                     main@average:	
   392                           
   393                           ; 2 bytes @ 0xF
   394  0047                     	ds	2
   395  0049                     main@i:	
   396                           
   397                           ; 1 bytes @ 0x11
   398  0049                     	ds	1
   399                           
   400                           	psect	maintext
   401  0722                     __pmaintext:	
   402 ;;
   403 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   404 ;;
   405 ;; *************** function _main *****************
   406 ;; Defined at:
   407 ;;		line 13 in file "LEDdice.c"
   408 ;; Parameters:    Size  Location     Type
   409 ;;		None
   410 ;; Auto vars:     Size  Location     Type
   411 ;;  resultArr       8    0[BANK0 ] unsigned int [4]
   412 ;;  average         2   15[BANK0 ] unsigned int 
   413 ;;  lastAverage     2   12[BANK0 ] unsigned int 
   414 ;;  diff            2    8[BANK0 ] unsigned int 
   415 ;;  i               1   17[BANK0 ] unsigned char 
   416 ;;  countDown       1   14[BANK0 ] unsigned char 
   417 ;;  index           1   11[BANK0 ] unsigned char 
   418 ;;  rolling         1   10[BANK0 ] unsigned char 
   419 ;; Return value:  Size  Location     Type
   420 ;;                  2   50[COMMON] int 
   421 ;; Registers used:
   422 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   423 ;; Tracked objects:
   424 ;;		On entry : 17F/0
   425 ;;		On exit  : 0/0
   426 ;;		Unchanged: 0/0
   427 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
   428 ;;      Params:         0       0       0       0       0       0       0       0
   429 ;;      Locals:         0      18       0       0       0       0       0       0
   430 ;;      Temps:          2       0       0       0       0       0       0       0
   431 ;;      Totals:         2      18       0       0       0       0       0       0
   432 ;;Total ram usage:       20 bytes
   433 ;; Hardware stack levels required when called:    2
   434 ;; This function calls:
   435 ;;		_setup
   436 ;;		_setupADC
   437 ;;		_startADCconversion
   438 ;;		_waitADCacquireTime
   439 ;;		_waitForADCconversion
   440 ;; This function is called by:
   441 ;;		Startup code after reset
   442 ;; This function uses a non-reentrant model
   443 ;;
   444                           
   445                           
   446                           ;psect for function _main
   447  0722                     _main:	
   448                           
   449                           ;LEDdice.c: 15: setup();
   450                           
   451                           ;incstack = 0
   452                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
   453  0722  3186  26DE  3187   	fcall	_setup
   454                           
   455                           ;LEDdice.c: 17: setupADC();
   456  0725  3186  26F8  3187   	fcall	_setupADC
   457                           
   458                           ;LEDdice.c: 19: char i = 0, countDown = 0, rolling = 0, index = 0;
   459  0728  0020               	movlb	0	; select bank0
   460  0729  01C9               	clrf	main@i
   461  072A  01C6               	clrf	main@countDown
   462  072B  01C2               	clrf	main@rolling
   463  072C  01C3               	clrf	main@index
   464                           
   465                           ;LEDdice.c: 20: unsigned int diff = 0;
   466  072D  01C0               	clrf	main@diff
   467  072E  01C1               	clrf	main@diff+1
   468                           
   469                           ;LEDdice.c: 21: unsigned int resultArr[4] = {0};
   470  072F  304A               	movlw	low main@F4082
   471  0730  0086               	movwf	6
   472  0731  3000               	movlw	high main@F4082
   473  0732  0087               	movwf	7
   474  0733  3038               	movlw	low main@resultArr
   475  0734  0084               	movwf	4
   476  0735  3000               	movlw	high main@resultArr
   477  0736  0085               	movwf	5
   478  0737  3008               	movlw	8
   479  0738  00F2               	movwf	??_main
   480  0739                     u180:	
   481  0739  0016               	moviw fsr1++
   482  073A  001A               	movwi fsr0++
   483  073B  0BF2               	decfsz	??_main,f
   484  073C  2F39               	goto	u180
   485                           
   486                           ;LEDdice.c: 22: unsigned int average = 0, lastAverage = 0;
   487  073D  01C7               	clrf	main@average
   488  073E  01C8               	clrf	main@average+1
   489  073F  01C4               	clrf	main@lastAverage
   490  0740  01C5               	clrf	main@lastAverage+1
   491  0741                     l681:	
   492                           ;LEDdice.c: 24: while (1)
   493                           
   494                           
   495                           ;LEDdice.c: 25: {
   496                           ;LEDdice.c: 28: lastAverage = average;
   497  0741  0020               	movlb	0	; select bank0
   498  0742  0848               	movf	main@average+1,w
   499  0743  01C5               	clrf	main@lastAverage+1
   500  0744  07C5               	addwf	main@lastAverage+1,f
   501  0745  0847               	movf	main@average,w
   502  0746  01C4               	clrf	main@lastAverage
   503  0747  07C4               	addwf	main@lastAverage,f
   504                           
   505                           ;LEDdice.c: 29: average = 0;
   506  0748  01C7               	clrf	main@average
   507  0749  01C8               	clrf	main@average+1
   508                           
   509                           ;LEDdice.c: 30: for (i = 0; i < 4; i++)
   510  074A  01C9               	clrf	main@i
   511  074B  3004               	movlw	4
   512  074C  0249               	subwf	main@i,w
   513  074D  1803               	btfsc	3,0
   514  074E  2F64               	goto	l55
   515  074F                     l691:	
   516                           
   517                           ;LEDdice.c: 31: {
   518                           ;LEDdice.c: 33: waitADCacquireTime();
   519  074F  3186  26D4  3187   	fcall	_waitADCacquireTime
   520                           
   521                           ;LEDdice.c: 34: startADCconversion();
   522  0752  3186  26C6  3187   	fcall	_startADCconversion
   523                           
   524                           ;LEDdice.c: 35: waitForADCconversion(&resultArr[i]);
   525  0755  0020               	movlb	0	; select bank0
   526  0756  3549               	lslf	main@i,w
   527  0757  3E38               	addlw	main@resultArr& (0+255)
   528  0758  3186  26C9  3187   	fcall	_waitForADCconversion
   529  075B  3001               	movlw	1
   530  075C  00F2               	movwf	??_main
   531  075D  0872               	movf	??_main,w
   532  075E  0020               	movlb	0	; select bank0
   533  075F  07C9               	addwf	main@i,f
   534  0760  3004               	movlw	4
   535  0761  0249               	subwf	main@i,w
   536  0762  1C03               	skipc
   537  0763  2F4F               	goto	l691
   538  0764                     l55:	
   539                           
   540                           ;LEDdice.c: 36: }
   541                           ;LEDdice.c: 37: for (i = 1; i < 4; i++)
   542  0764  01C9               	clrf	main@i
   543  0765  0AC9               	incf	main@i,f
   544  0766  3004               	movlw	4
   545  0767  0249               	subwf	main@i,w
   546  0768  1803               	btfsc	3,0
   547  0769  2F7E               	goto	l711
   548  076A                     l705:	
   549                           
   550                           ;LEDdice.c: 38: {
   551                           ;LEDdice.c: 39: resultArr[0] += resultArr[i];
   552  076A  3549               	lslf	main@i,w
   553  076B  3E38               	addlw	main@resultArr& (0+255)
   554  076C  0086               	movwf	6
   555  076D  0187               	clrf	7
   556  076E  3F40               	moviw [0]fsr1
   557  076F  00F2               	movwf	??_main
   558  0770  3F41               	moviw [1]fsr1
   559  0771  00F3               	movwf	??_main+1
   560  0772  0872               	movf	??_main,w
   561  0773  07B8               	addwf	main@resultArr,f
   562  0774  0873               	movf	??_main+1,w
   563  0775  3DB9               	addwfc	main@resultArr+1,f
   564  0776  3001               	movlw	1
   565  0777  00F2               	movwf	??_main
   566  0778  0872               	movf	??_main,w
   567  0779  07C9               	addwf	main@i,f
   568  077A  3004               	movlw	4
   569  077B  0249               	subwf	main@i,w
   570  077C  1C03               	skipc
   571  077D  2F6A               	goto	l705
   572  077E                     l711:	
   573                           
   574                           ;LEDdice.c: 41: }
   575                           ;LEDdice.c: 42: average = ((resultArr[0] >> 2));
   576  077E  0839               	movf	main@resultArr+1,w
   577  077F  00F3               	movwf	??_main+1
   578  0780  0838               	movf	main@resultArr,w
   579  0781  00F2               	movwf	??_main
   580  0782  36F3               	lsrf	??_main+1,f
   581  0783  0CF2               	rrf	??_main,f
   582  0784  36F3               	lsrf	??_main+1,f
   583  0785  0CF2               	rrf	??_main,f
   584  0786  0872               	movf	??_main,w
   585  0787  00C7               	movwf	main@average
   586  0788  0873               	movf	??_main+1,w
   587  0789  00C8               	movwf	main@average+1
   588                           
   589                           ;LEDdice.c: 44: if (average > lastAverage)
   590  078A  0848               	movf	main@average+1,w
   591  078B  0245               	subwf	main@lastAverage+1,w
   592  078C  1D03               	skipz
   593  078D  2F90               	goto	u235
   594  078E  0847               	movf	main@average,w
   595  078F  0244               	subwf	main@lastAverage,w
   596  0790                     u235:	
   597  0790  1803               	skipnc
   598  0791  2F9E               	goto	l717
   599                           
   600                           ;LEDdice.c: 45: {
   601                           ;LEDdice.c: 46: diff = average - lastAverage;
   602  0792  0944               	comf	main@lastAverage,w
   603  0793  00F2               	movwf	??_main
   604  0794  0945               	comf	main@lastAverage+1,w
   605  0795  00F3               	movwf	??_main+1
   606  0796  0AF2               	incf	??_main,f
   607  0797  1903               	skipnz
   608  0798  0AF3               	incf	??_main+1,f
   609  0799  0847               	movf	main@average,w
   610  079A  0772               	addwf	??_main,w
   611  079B  00C0               	movwf	main@diff
   612  079C  0848               	movf	main@average+1,w
   613  079D  2FA9               	goto	L1
   614  079E                     l717:	
   615                           ;LEDdice.c: 47: }
   616                           
   617                           
   618                           ;LEDdice.c: 48: else
   619                           ;LEDdice.c: 49: {
   620                           ;LEDdice.c: 50: diff = lastAverage - average;
   621  079E  0947               	comf	main@average,w
   622  079F  00F2               	movwf	??_main
   623  07A0  0948               	comf	main@average+1,w
   624  07A1  00F3               	movwf	??_main+1
   625  07A2  0AF2               	incf	??_main,f
   626  07A3  1903               	skipnz
   627  07A4  0AF3               	incf	??_main+1,f
   628  07A5  0844               	movf	main@lastAverage,w
   629  07A6  0772               	addwf	??_main,w
   630  07A7  00C0               	movwf	main@diff
   631  07A8  0845               	movf	main@lastAverage+1,w
   632  07A9                     L1:	
   633  07A9  3D73               	addwfc	??_main+1,w
   634  07AA  00C1               	movwf	main@diff+1
   635                           
   636                           ;LEDdice.c: 51: }
   637                           ;LEDdice.c: 52: if (diff > 0x0F)
   638  07AB  3000               	movlw	0
   639  07AC  0241               	subwf	main@diff+1,w
   640  07AD  3010               	movlw	16
   641  07AE  1903               	skipnz
   642  07AF  0240               	subwf	main@diff,w
   643  07B0  1C03               	skipc
   644  07B1  2FBA               	goto	l60
   645                           
   646                           ;LEDdice.c: 53: {
   647                           ;LEDdice.c: 54: countDown = 50;
   648  07B2  3032               	movlw	50
   649  07B3  00F2               	movwf	??_main
   650  07B4  0872               	movf	??_main,w
   651  07B5  00C6               	movwf	main@countDown
   652                           
   653                           ;LEDdice.c: 55: rolling = 1;
   654  07B6  01C2               	clrf	main@rolling
   655  07B7  0AC2               	incf	main@rolling,f
   656                           
   657                           ;LEDdice.c: 56: PORTBbits.RB6 = 0b1;
   658  07B8  170D               	bsf	13,6	;volatile
   659                           
   660                           ;LEDdice.c: 59: }
   661  07B9  2FBB               	goto	l727
   662  07BA                     l60:	
   663                           
   664                           ;LEDdice.c: 60: else
   665                           ;LEDdice.c: 61: {
   666                           ;LEDdice.c: 62: PORTBbits.RB6 = 0b0;
   667  07BA  130D               	bcf	13,6	;volatile
   668  07BB                     l727:	
   669                           
   670                           ;LEDdice.c: 63: }
   671                           ;LEDdice.c: 64: if (rolling)
   672  07BB  0842               	movf	main@rolling,w
   673  07BC  1903               	btfsc	3,2
   674  07BD  2FE0               	goto	l745
   675                           
   676                           ;LEDdice.c: 65: {
   677                           ;LEDdice.c: 66: if (countDown > 0)
   678  07BE  0846               	movf	main@countDown,w
   679  07BF  1903               	btfsc	3,2
   680  07C0  2FDA               	goto	l741
   681                           
   682                           ;LEDdice.c: 67: {
   683                           ;LEDdice.c: 68: countDown--;
   684  07C1  3001               	movlw	1
   685  07C2  02C6               	subwf	main@countDown,f
   686                           
   687                           ;LEDdice.c: 69: LATC = numMap[randSeq[index++] - 1];
   688  07C3  0843               	movf	main@index,w
   689  07C4  3E20               	addlw	_randSeq& (0+255)
   690  07C5  0086               	movwf	6
   691  07C6  0187               	clrf	7
   692  07C7  0801               	movf	1,w
   693  07C8  3EFF               	addlw	255
   694  07C9  3E32               	addlw	_numMap& (0+255)
   695  07CA  0086               	movwf	6
   696  07CB  0187               	clrf	7
   697  07CC  0801               	movf	1,w
   698  07CD  0022               	movlb	2	; select bank2
   699  07CE  008E               	movwf	14	;volatile
   700  07CF  3001               	movlw	1
   701  07D0  00F2               	movwf	??_main
   702  07D1  0872               	movf	??_main,w
   703  07D2  0020               	movlb	0	; select bank0
   704  07D3  07C3               	addwf	main@index,f
   705                           
   706                           ;LEDdice.c: 70: if (index >= 18)
   707  07D4  3012               	movlw	18
   708  07D5  0243               	subwf	main@index,w
   709  07D6  1C03               	skipc
   710  07D7  2F41               	goto	l681
   711                           
   712                           ;LEDdice.c: 71: index = 0;
   713  07D8  01C3               	clrf	main@index
   714                           
   715                           ;LEDdice.c: 72: }
   716  07D9  2F41               	goto	l681
   717  07DA                     l741:	
   718                           
   719                           ;LEDdice.c: 73: else
   720                           ;LEDdice.c: 74: {
   721                           ;LEDdice.c: 75: rolling = 0;
   722  07DA  01C2               	clrf	main@rolling
   723                           
   724                           ;LEDdice.c: 76: countDown = 50;
   725  07DB  3032               	movlw	50
   726  07DC  00F2               	movwf	??_main
   727  07DD  0872               	movf	??_main,w
   728  07DE  00C6               	movwf	main@countDown
   729                           
   730                           ;LEDdice.c: 77: }
   731                           ;LEDdice.c: 78: }
   732  07DF  2F41               	goto	l681
   733  07E0                     l745:	
   734                           
   735                           ;LEDdice.c: 79: else
   736                           ;LEDdice.c: 80: {
   737                           ;LEDdice.c: 81: if (countDown > 0)
   738  07E0  0846               	movf	main@countDown,w
   739  07E1  1903               	btfsc	3,2
   740  07E2  2FE6               	goto	l749
   741                           
   742                           ;LEDdice.c: 82: {
   743                           ;LEDdice.c: 83: countDown--;
   744  07E3  3001               	movlw	1
   745  07E4  02C6               	subwf	main@countDown,f
   746                           
   747                           ;LEDdice.c: 84: }
   748  07E5  2F41               	goto	l681
   749  07E6                     l749:	
   750                           
   751                           ;LEDdice.c: 85: else
   752                           ;LEDdice.c: 86: {
   753                           ;LEDdice.c: 87: LATC = 0x00;
   754  07E6  0022               	movlb	2	; select bank2
   755  07E7  018E               	clrf	14	;volatile
   756  07E8  2F41               	goto	l681
   757  07E9                     __end_of_main:	
   758                           ;LEDdice.c: 88: }
   759                           ;LEDdice.c: 89: }
   760                           ;LEDdice.c: 91: }
   761                           ;LEDdice.c: 92: return;
   762                           
   763                           
   764                           	psect	text1
   765  06C9                     __ptext1:	
   766 ;; *************** function _waitForADCconversion *****************
   767 ;; Defined at:
   768 ;;		line 135 in file "LEDdice.c"
   769 ;; Parameters:    Size  Location     Type
   770 ;;  result          1    wreg     PTR unsigned int 
   771 ;;		 -> main@resultArr(8), 
   772 ;; Auto vars:     Size  Location     Type
   773 ;;  result          1    1[COMMON] PTR unsigned int 
   774 ;;		 -> main@resultArr(8), 
   775 ;; Return value:  Size  Location     Type
   776 ;;		None               void
   777 ;; Registers used:
   778 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   779 ;; Tracked objects:
   780 ;;		On entry : 0/0
   781 ;;		On exit  : 0/0
   782 ;;		Unchanged: 0/0
   783 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
   784 ;;      Params:         0       0       0       0       0       0       0       0
   785 ;;      Locals:         1       0       0       0       0       0       0       0
   786 ;;      Temps:          0       0       0       0       0       0       0       0
   787 ;;      Totals:         1       0       0       0       0       0       0       0
   788 ;;Total ram usage:        1 bytes
   789 ;; Hardware stack levels used:    1
   790 ;; Hardware stack levels required when called:    1
   791 ;; This function calls:
   792 ;;		_ADCconversionDone
   793 ;; This function is called by:
   794 ;;		_main
   795 ;; This function uses a non-reentrant model
   796 ;;
   797                           
   798                           
   799                           ;psect for function _waitForADCconversion
   800  06C9                     _waitForADCconversion:	
   801                           
   802                           ;incstack = 0
   803                           ; Regs used in _waitForADCconversion: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
   804                           ;waitForADCconversion@result stored from wreg
   805  06C9  00F1               	movwf	waitForADCconversion@result
   806                           
   807                           ;LEDdice.c: 139: return;
   808                           
   809                           ;LEDdice.c: 137: while (!ADCconversionDone(result))
   810  06CA  0871               	movf	waitForADCconversion@result,w
   811  06CB  3186  26E9         	fcall	_ADCconversionDone
   812  06CD  0008               	return
   813  06CE                     __end_of_waitForADCconversion:	
   814                           
   815                           	psect	text2
   816  06E9                     __ptext2:	
   817 ;; *************** function _ADCconversionDone *****************
   818 ;; Defined at:
   819 ;;		line 143 in file "LEDdice.c"
   820 ;; Parameters:    Size  Location     Type
   821 ;;  adcresult       1    wreg     PTR unsigned int 
   822 ;;		 -> main@resultArr(8), 
   823 ;; Auto vars:     Size  Location     Type
   824 ;;  adcresult       1    0[COMMON] PTR unsigned int 
   825 ;;		 -> main@resultArr(8), 
   826 ;; Return value:  Size  Location     Type
   827 ;;                  1    wreg      unsigned char 
   828 ;; Registers used:
   829 ;;		wreg, fsr1l, fsr1h
   830 ;; Tracked objects:
   831 ;;		On entry : 0/0
   832 ;;		On exit  : 0/0
   833 ;;		Unchanged: 0/0
   834 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
   835 ;;      Params:         0       0       0       0       0       0       0       0
   836 ;;      Locals:         1       0       0       0       0       0       0       0
   837 ;;      Temps:          0       0       0       0       0       0       0       0
   838 ;;      Totals:         1       0       0       0       0       0       0       0
   839 ;;Total ram usage:        1 bytes
   840 ;; Hardware stack levels used:    1
   841 ;; This function calls:
   842 ;;		Nothing
   843 ;; This function is called by:
   844 ;;		_waitForADCconversion
   845 ;; This function uses a non-reentrant model
   846 ;;
   847                           
   848                           
   849                           ;psect for function _ADCconversionDone
   850  06E9                     _ADCconversionDone:	
   851                           
   852                           ;incstack = 0
   853                           ; Regs used in _ADCconversionDone: [wregfsr1]
   854                           ;ADCconversionDone@adcresult stored from wreg
   855  06E9  00F0               	movwf	ADCconversionDone@adcresult
   856                           
   857                           ;LEDdice.c: 145: if (!ADCON0bits.GO)
   858  06EA  0021               	movlb	1	; select bank1
   859  06EB  189D               	btfsc	29,1	;volatile
   860  06EC  2EF6               	goto	l621
   861                           
   862                           ;LEDdice.c: 146: {
   863                           ;LEDdice.c: 147: *adcresult = (ADRESH << 8) + ADRESL;
   864  06ED  0870               	movf	ADCconversionDone@adcresult,w
   865  06EE  0086               	movwf	6
   866  06EF  0187               	clrf	7
   867  06F0  081B               	movf	27,w	;volatile
   868  06F1  3FC0               	movwi [0]fsr1
   869  06F2  081C               	movf	28,w	;volatile
   870  06F3  3FC1               	movwi [1]fsr1
   871                           
   872                           ;LEDdice.c: 148: return 1;
   873  06F4  3001               	movlw	1
   874  06F5  0008               	return
   875  06F6                     l621:	
   876                           
   877                           ;LEDdice.c: 149: }
   878                           ;LEDdice.c: 150: return 0;
   879  06F6  3000               	movlw	0
   880  06F7  0008               	return
   881  06F8                     __end_of_ADCconversionDone:	
   882                           
   883                           	psect	text3
   884  06D4                     __ptext3:	
   885 ;; *************** function _waitADCacquireTime *****************
   886 ;; Defined at:
   887 ;;		line 122 in file "LEDdice.c"
   888 ;; Parameters:    Size  Location     Type
   889 ;;		None
   890 ;; Auto vars:     Size  Location     Type
   891 ;;  i               1    1[COMMON] unsigned char 
   892 ;; Return value:  Size  Location     Type
   893 ;;		None               void
   894 ;; Registers used:
   895 ;;		wreg, status,2, status,0
   896 ;; Tracked objects:
   897 ;;		On entry : 0/0
   898 ;;		On exit  : 0/0
   899 ;;		Unchanged: 0/0
   900 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
   901 ;;      Params:         0       0       0       0       0       0       0       0
   902 ;;      Locals:         1       0       0       0       0       0       0       0
   903 ;;      Temps:          1       0       0       0       0       0       0       0
   904 ;;      Totals:         2       0       0       0       0       0       0       0
   905 ;;Total ram usage:        2 bytes
   906 ;; Hardware stack levels used:    1
   907 ;; This function calls:
   908 ;;		Nothing
   909 ;; This function is called by:
   910 ;;		_main
   911 ;; This function uses a non-reentrant model
   912 ;;
   913                           
   914                           
   915                           ;psect for function _waitADCacquireTime
   916  06D4                     _waitADCacquireTime:	
   917                           
   918                           ;LEDdice.c: 124: char i;
   919                           ;LEDdice.c: 125: for (i = 0; i < 10; i++);
   920                           
   921                           ;incstack = 0
   922                           ; Regs used in _waitADCacquireTime: [wreg+status,2+status,0]
   923  06D4  01F1               	clrf	waitADCacquireTime@i
   924  06D5                     L2:	
   925  06D5  300A               	movlw	10
   926  06D6  0271               	subwf	waitADCacquireTime@i,w
   927  06D7  1803               	btfsc	3,0
   928  06D8  0008               	return
   929  06D9  3001               	movlw	1
   930  06DA  00F0               	movwf	??_waitADCacquireTime
   931  06DB  0870               	movf	??_waitADCacquireTime,w
   932  06DC  07F1               	addwf	waitADCacquireTime@i,f
   933  06DD  2ED5               	goto	L2
   934  06DE                     __end_of_waitADCacquireTime:	
   935                           ;LEDdice.c: 126: return;
   936                           
   937                           
   938                           	psect	text4
   939  06C6                     __ptext4:	
   940 ;; *************** function _startADCconversion *****************
   941 ;; Defined at:
   942 ;;		line 129 in file "LEDdice.c"
   943 ;; Parameters:    Size  Location     Type
   944 ;;		None
   945 ;; Auto vars:     Size  Location     Type
   946 ;;		None
   947 ;; Return value:  Size  Location     Type
   948 ;;		None               void
   949 ;; Registers used:
   950 ;;		None
   951 ;; Tracked objects:
   952 ;;		On entry : 0/0
   953 ;;		On exit  : 0/0
   954 ;;		Unchanged: 0/0
   955 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
   956 ;;      Params:         0       0       0       0       0       0       0       0
   957 ;;      Locals:         0       0       0       0       0       0       0       0
   958 ;;      Temps:          0       0       0       0       0       0       0       0
   959 ;;      Totals:         0       0       0       0       0       0       0       0
   960 ;;Total ram usage:        0 bytes
   961 ;; Hardware stack levels used:    1
   962 ;; This function calls:
   963 ;;		Nothing
   964 ;; This function is called by:
   965 ;;		_main
   966 ;; This function uses a non-reentrant model
   967 ;;
   968                           
   969                           
   970                           ;psect for function _startADCconversion
   971  06C6                     _startADCconversion:	
   972                           
   973                           ;LEDdice.c: 131: ADCON0bits.GO = 0b1;
   974                           
   975                           ;incstack = 0
   976                           ; Regs used in _startADCconversion: []
   977  06C6  0021               	movlb	1	; select bank1
   978  06C7  149D               	bsf	29,1	;volatile
   979                           
   980                           ;LEDdice.c: 132: return;
   981  06C8  0008               	return
   982  06C9                     __end_of_startADCconversion:	
   983                           
   984                           	psect	text5
   985  06F8                     __ptext5:	
   986 ;; *************** function _setupADC *****************
   987 ;; Defined at:
   988 ;;		line 109 in file "LEDdice.c"
   989 ;; Parameters:    Size  Location     Type
   990 ;;		None
   991 ;; Auto vars:     Size  Location     Type
   992 ;;		None
   993 ;; Return value:  Size  Location     Type
   994 ;;		None               void
   995 ;; Registers used:
   996 ;;		wreg, status,2, status,0
   997 ;; Tracked objects:
   998 ;;		On entry : 0/0
   999 ;;		On exit  : 0/0
  1000 ;;		Unchanged: 0/0
  1001 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1002 ;;      Params:         0       0       0       0       0       0       0       0
  1003 ;;      Locals:         0       0       0       0       0       0       0       0
  1004 ;;      Temps:          0       0       0       0       0       0       0       0
  1005 ;;      Totals:         0       0       0       0       0       0       0       0
  1006 ;;Total ram usage:        0 bytes
  1007 ;; Hardware stack levels used:    1
  1008 ;; This function calls:
  1009 ;;		Nothing
  1010 ;; This function is called by:
  1011 ;;		_main
  1012 ;; This function uses a non-reentrant model
  1013 ;;
  1014                           
  1015                           
  1016                           ;psect for function _setupADC
  1017  06F8                     _setupADC:	
  1018                           
  1019                           ;LEDdice.c: 111: TRISBbits.TRISB5 = 0b1;
  1020                           
  1021                           ;incstack = 0
  1022                           ; Regs used in _setupADC: [wreg+status,2+status,0]
  1023  06F8  0021               	movlb	1	; select bank1
  1024  06F9  168D               	bsf	13,5	;volatile
  1025                           
  1026                           ;LEDdice.c: 112: ANSELBbits.ANSB5 = 0b1;
  1027  06FA  0023               	movlb	3	; select bank3
  1028  06FB  168D               	bsf	13,5	;volatile
  1029                           
  1030                           ;LEDdice.c: 113: ADCON0bits.CHS = 0b01011;
  1031  06FC  0021               	movlb	1	; select bank1
  1032  06FD  081D               	movf	29,w	;volatile
  1033  06FE  3983               	andlw	-125
  1034  06FF  382C               	iorlw	44
  1035  0700  009D               	movwf	29	;volatile
  1036                           
  1037                           ;LEDdice.c: 114: ADCON1bits.ADFM = 0b1;
  1038  0701  179E               	bsf	30,7	;volatile
  1039                           
  1040                           ;LEDdice.c: 115: ADCON1bits.ADCS = 0b111;
  1041  0702  3070               	movlw	112
  1042  0703  049E               	iorwf	30,f	;volatile
  1043                           
  1044                           ;LEDdice.c: 116: ADCON1bits.ADPREF = 0b00;
  1045  0704  30FC               	movlw	-4
  1046  0705  059E               	andwf	30,f	;volatile
  1047                           
  1048                           ;LEDdice.c: 117: ADCON2bits.TRIGSEL = 0b0000;
  1049  0706  300F               	movlw	-241
  1050  0707  059F               	andwf	31,f	;volatile
  1051                           
  1052                           ;LEDdice.c: 118: ADCON0bits.ADON = 0b1;
  1053  0708  141D               	bsf	29,0	;volatile
  1054  0709  0008               	return
  1055  070A                     __end_of_setupADC:	
  1056                           
  1057                           	psect	text6
  1058  06DE                     __ptext6:	
  1059 ;; *************** function _setup *****************
  1060 ;; Defined at:
  1061 ;;		line 95 in file "LEDdice.c"
  1062 ;; Parameters:    Size  Location     Type
  1063 ;;		None
  1064 ;; Auto vars:     Size  Location     Type
  1065 ;;		None
  1066 ;; Return value:  Size  Location     Type
  1067 ;;		None               void
  1068 ;; Registers used:
  1069 ;;		wreg, status,2, status,0
  1070 ;; Tracked objects:
  1071 ;;		On entry : 0/0
  1072 ;;		On exit  : 0/0
  1073 ;;		Unchanged: 0/0
  1074 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1075 ;;      Params:         0       0       0       0       0       0       0       0
  1076 ;;      Locals:         0       0       0       0       0       0       0       0
  1077 ;;      Temps:          0       0       0       0       0       0       0       0
  1078 ;;      Totals:         0       0       0       0       0       0       0       0
  1079 ;;Total ram usage:        0 bytes
  1080 ;; Hardware stack levels used:    1
  1081 ;; This function calls:
  1082 ;;		Nothing
  1083 ;; This function is called by:
  1084 ;;		_main
  1085 ;; This function uses a non-reentrant model
  1086 ;;
  1087                           
  1088                           
  1089                           ;psect for function _setup
  1090  06DE                     _setup:	
  1091                           
  1092                           ;LEDdice.c: 97: OSCCONbits.IRCF = 0b0000;
  1093                           
  1094                           ;incstack = 0
  1095                           ; Regs used in _setup: [wreg+status,2+status,0]
  1096  06DE  3087               	movlw	-121
  1097  06DF  0021               	movlb	1	; select bank1
  1098  06E0  0599               	andwf	25,f	;volatile
  1099                           
  1100                           ;LEDdice.c: 98: TRISA = 0x00;
  1101  06E1  018C               	clrf	12	;volatile
  1102                           
  1103                           ;LEDdice.c: 99: TRISB = 0x00;
  1104  06E2  018D               	clrf	13	;volatile
  1105                           
  1106                           ;LEDdice.c: 100: TRISC = 0x00;
  1107  06E3  018E               	clrf	14	;volatile
  1108                           
  1109                           ;LEDdice.c: 101: PORTA = 0x00;
  1110  06E4  0020               	movlb	0	; select bank0
  1111  06E5  018C               	clrf	12	;volatile
  1112                           
  1113                           ;LEDdice.c: 102: PORTB = 0x00;
  1114  06E6  018D               	clrf	13	;volatile
  1115                           
  1116                           ;LEDdice.c: 103: PORTC = 0x00;
  1117  06E7  018E               	clrf	14	;volatile
  1118  06E8  0008               	return
  1119  06E9                     __end_of_setup:	
  1120  007E                     btemp	set	126	;btemp
  1121  007E                     pic14e$flags	set	126
  1122  007E                     wtemp	set	126
  1123  007E                     wtemp0	set	126
  1124  0080                     wtemp1	set	128
  1125  0082                     wtemp2	set	130
  1126  0084                     wtemp3	set	132
  1127  0086                     wtemp4	set	134
  1128  0088                     wtemp5	set	136
  1129  007F                     wtemp6	set	127
  1130  007E                     ttemp	set	126
  1131  007E                     ttemp0	set	126
  1132  0081                     ttemp1	set	129
  1133  0084                     ttemp2	set	132
  1134  0087                     ttemp3	set	135
  1135  007F                     ttemp4	set	127
  1136  007E                     ltemp	set	126
  1137  007E                     ltemp0	set	126
  1138  0082                     ltemp1	set	130
  1139  0086                     ltemp2	set	134
  1140  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    0
    Data        24
    BSS         8
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      4       4
    BANK0            80     18      50
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            16      0       0

Pointer List with Targets:

    ADCconversionDone@adcresult	PTR unsigned int  size(1) Largest target is 8
		 -> main@resultArr(BANK0[8]), 

    waitForADCconversion@result	PTR unsigned int  size(1) Largest target is 8
		 -> main@resultArr(BANK0[8]), 


Critical Paths under _main in COMMON

    _main->_waitADCacquireTime
    _main->_waitForADCconversion
    _waitForADCconversion->_ADCconversionDone

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                20    20      0     657
                                              2 COMMON     2     2      0
                                              0 BANK0     18    18      0
                              _setup
                           _setupADC
                 _startADCconversion
                 _waitADCacquireTime
               _waitForADCconversion
 ---------------------------------------------------------------------------------
 (1) _waitForADCconversion                                 1     1      0      98
                                              1 COMMON     1     1      0
                  _ADCconversionDone
 ---------------------------------------------------------------------------------
 (2) _ADCconversionDone                                    1     1      0      49
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _waitADCacquireTime                                   2     2      0      46
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _startADCconversion                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setupADC                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _setup
   _setupADC
   _startADCconversion
   _waitADCacquireTime
   _waitForADCconversion
     _ADCconversionDone

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      4       4       2       28.6%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      36       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     12      32       6       62.5%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            10      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               10      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
DATA                 0      0      36      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.32 build 58300 
Symbol Table                                                                                   Mon Dec 29 10:23:40 2014

           _waitADCacquireTime 06D4                    __CFG_CP$OFF 0000                             l60 07BA  
                           l55 0764                    __CFG_LVP$ON 0000            ?_waitADCacquireTime 0070  
                          l621 06F6                            l711 077E                            l705 076A  
                          l741 07DA                            l717 079E                            l727 07BB  
                          l745 07E0                            l681 0741                            l691 074F  
                          l749 07E6                            u235 0790                            u180 0739  
                 __CFG_BORV$LO 0000                    main@average 0047                           _LATC 010E  
                 __CFG_WRT$OFF 0000           ??_waitADCacquireTime 0070                           _main 0722  
                         fsr0h 0005                           fsr1h 0007                           fsr0l 0004  
                         indf1 0001                           fsr1l 0006                           btemp 007E  
                __CFG_BOREN$ON 0000                           ltemp 007E                    main@rolling 0042  
                         start 0002                           ttemp 007E                           wtemp 007E  
                __CFG_IESO$OFF 0000                  __CFG_MCLRE$ON 0000                          ?_main 0070  
                __CFG_WDTE$OFF 0000                          _PORTA 000C                          _PORTB 000D  
                        _PORTC 000E                          _TRISA 008C                          _TRISB 008D  
                        _TRISC 008E                 __CFG_FCMEN$OFF 0000                          _setup 06DE  
                        main@i 0049                          ltemp0 007E                          ltemp1 0082  
                        ltemp2 0086                          ltemp3 0080                          ttemp0 007E  
                        ttemp1 0081                          ttemp2 0084                          ttemp3 0087  
                        ttemp4 007F                          wtemp0 007E                          wtemp1 0080  
                        wtemp2 0082                          wtemp3 0084                          wtemp4 0086  
                        wtemp5 0088                          wtemp6 007F                __initialization 07E9  
                 __end_of_main 07E9                 __CFG_LPBOR$OFF 0000                         ??_main 0072  
__size_of_waitForADCconversion 0005                         _ADRESH 009C                         _ADRESL 009B  
                       ?_setup 0070                  main@countDown 0046                 __CFG_PWRTE$OFF 0000  
               __CFG_STVREN$ON 0000                         _numMap 0032                  main@resultArr 0038  
             __end_of_setupADC 070A        __end_of__initialization 07FC             _startADCconversion 06C6  
               __pcstackCOMMON 0070                   __pidataBANK0 070A                  __end_of_setup 06E9  
          ?_startADCconversion 0070            waitADCacquireTime@i 0071                        ??_setup 0070  
                   __pbssBANK0 004A           ??_startADCconversion 0070                     __pmaintext 0722  
  __size_of_waitADCacquireTime 000A                      ?_setupADC 0070                        __ptext1 06C9  
                      __ptext2 06E9                        __ptext3 06D4                        __ptext4 06C6  
                      __ptext5 06F8                        __ptext6 06DE                        _randSeq 0020  
         end_of_initialization 07FC                        init_ram 06CE                        initloop 06CF  
             __CFG_CLKOUTEN$ON 0000   __end_of_waitForADCconversion 06CE                     ??_setupADC 0070  
                    _PORTBbits 000D               __CFG_FOSC$INTOSC 0000     ADCconversionDone@adcresult 0070  
                    _TRISBbits 008D            start_initialization 07E9     waitForADCconversion@result 0071  
                  __pdataBANK0 0020                      ___latbits 0002                  __pcstackBANK0 0038  
         _waitForADCconversion 06C9    __size_of_startADCconversion 0003              __size_of_setupADC 0012  
            _ADCconversionDone 06E9             ?_ADCconversionDone 0070          ?_waitForADCconversion 0070  
          ??_ADCconversionDone 0070                 __size_of_setup 000B     __end_of_waitADCacquireTime 06DE  
              main@lastAverage 0044                      main@F4082 004A      __end_of_ADCconversionDone 06F8  
                   _ADCON0bits 009D                     _ADCON1bits 009E                     _ADCON2bits 009F  
                    main@index 0043                     _ANSELBbits 018D         ??_waitForADCconversion 0071  
                __size_of_main 00C7                       _setupADC 06F8     __size_of_ADCconversionDone 000F  
                     main@diff 0040                    pic14e$flags 007E                     _OSCCONbits 0099  
   __end_of_startADCconversion 06C9  
