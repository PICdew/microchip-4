

Microchip Technology PIC LITE Macro Assembler V1.33 build 59893 
                                                                                               Tue Feb 17 23:36:40 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	16F1619
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	inittext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    11                           	psect	swtext1,local,class=CONST,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	dabs	1,0x7E,2
    17  0000                     	;# 
    18  0001                     	;# 
    19  0002                     	;# 
    20  0003                     	;# 
    21  0004                     	;# 
    22  0005                     	;# 
    23  0006                     	;# 
    24  0007                     	;# 
    25  0008                     	;# 
    26  0009                     	;# 
    27  000A                     	;# 
    28  000B                     	;# 
    29  000C                     	;# 
    30  000D                     	;# 
    31  000E                     	;# 
    32  0010                     	;# 
    33  0011                     	;# 
    34  0012                     	;# 
    35  0013                     	;# 
    36  0014                     	;# 
    37  0015                     	;# 
    38  0016                     	;# 
    39  0016                     	;# 
    40  0017                     	;# 
    41  0018                     	;# 
    42  0019                     	;# 
    43  001A                     	;# 
    44  001A                     	;# 
    45  001B                     	;# 
    46  001B                     	;# 
    47  001C                     	;# 
    48  001D                     	;# 
    49  001E                     	;# 
    50  001F                     	;# 
    51  008C                     	;# 
    52  008D                     	;# 
    53  008E                     	;# 
    54  0090                     	;# 
    55  0091                     	;# 
    56  0092                     	;# 
    57  0093                     	;# 
    58  0094                     	;# 
    59  0095                     	;# 
    60  0096                     	;# 
    61  0098                     	;# 
    62  0099                     	;# 
    63  009A                     	;# 
    64  009B                     	;# 
    65  009B                     	;# 
    66  009C                     	;# 
    67  009D                     	;# 
    68  009E                     	;# 
    69  009F                     	;# 
    70  010C                     	;# 
    71  010D                     	;# 
    72  010E                     	;# 
    73  0111                     	;# 
    74  0112                     	;# 
    75  0113                     	;# 
    76  0114                     	;# 
    77  0115                     	;# 
    78  0116                     	;# 
    79  0117                     	;# 
    80  0118                     	;# 
    81  0119                     	;# 
    82  011C                     	;# 
    83  018C                     	;# 
    84  018D                     	;# 
    85  018E                     	;# 
    86  0191                     	;# 
    87  0191                     	;# 
    88  0192                     	;# 
    89  0193                     	;# 
    90  0193                     	;# 
    91  0194                     	;# 
    92  0195                     	;# 
    93  0196                     	;# 
    94  0197                     	;# 
    95  0199                     	;# 
    96  0199                     	;# 
    97  0199                     	;# 
    98  019A                     	;# 
    99  019A                     	;# 
   100  019A                     	;# 
   101  019B                     	;# 
   102  019B                     	;# 
   103  019B                     	;# 
   104  019B                     	;# 
   105  019B                     	;# 
   106  019C                     	;# 
   107  019C                     	;# 
   108  019C                     	;# 
   109  019D                     	;# 
   110  019D                     	;# 
   111  019D                     	;# 
   112  019E                     	;# 
   113  019E                     	;# 
   114  019E                     	;# 
   115  019F                     	;# 
   116  019F                     	;# 
   117  019F                     	;# 
   118  019F                     	;# 
   119  019F                     	;# 
   120  020C                     	;# 
   121  020D                     	;# 
   122  020E                     	;# 
   123  0211                     	;# 
   124  0211                     	;# 
   125  0212                     	;# 
   126  0212                     	;# 
   127  0213                     	;# 
   128  0213                     	;# 
   129  0214                     	;# 
   130  0214                     	;# 
   131  0215                     	;# 
   132  0215                     	;# 
   133  0215                     	;# 
   134  0215                     	;# 
   135  0216                     	;# 
   136  0216                     	;# 
   137  0217                     	;# 
   138  0217                     	;# 
   139  028C                     	;# 
   140  028D                     	;# 
   141  028E                     	;# 
   142  0291                     	;# 
   143  0291                     	;# 
   144  0291                     	;# 
   145  0292                     	;# 
   146  0292                     	;# 
   147  0293                     	;# 
   148  0294                     	;# 
   149  0298                     	;# 
   150  0298                     	;# 
   151  0298                     	;# 
   152  0299                     	;# 
   153  0299                     	;# 
   154  029A                     	;# 
   155  029B                     	;# 
   156  029E                     	;# 
   157  030C                     	;# 
   158  030D                     	;# 
   159  030E                     	;# 
   160  038C                     	;# 
   161  038D                     	;# 
   162  038E                     	;# 
   163  0391                     	;# 
   164  0392                     	;# 
   165  0393                     	;# 
   166  0394                     	;# 
   167  0395                     	;# 
   168  0396                     	;# 
   169  0397                     	;# 
   170  0398                     	;# 
   171  0399                     	;# 
   172  040E                     	;# 
   173  0413                     	;# 
   174  0413                     	;# 
   175  0414                     	;# 
   176  0414                     	;# 
   177  0415                     	;# 
   178  0416                     	;# 
   179  0417                     	;# 
   180  0418                     	;# 
   181  041A                     	;# 
   182  041A                     	;# 
   183  041B                     	;# 
   184  041B                     	;# 
   185  041C                     	;# 
   186  041D                     	;# 
   187  041E                     	;# 
   188  041F                     	;# 
   189  0493                     	;# 
   190  0494                     	;# 
   191  0495                     	;# 
   192  0496                     	;# 
   193  049A                     	;# 
   194  049B                     	;# 
   195  049C                     	;# 
   196  049D                     	;# 
   197  058C                     	;# 
   198  058C                     	;# 
   199  058D                     	;# 
   200  058E                     	;# 
   201  058E                     	;# 
   202  058F                     	;# 
   203  0590                     	;# 
   204  0590                     	;# 
   205  0591                     	;# 
   206  0592                     	;# 
   207  0592                     	;# 
   208  0593                     	;# 
   209  0594                     	;# 
   210  0594                     	;# 
   211  0595                     	;# 
   212  0596                     	;# 
   213  0596                     	;# 
   214  0597                     	;# 
   215  0598                     	;# 
   216  0599                     	;# 
   217  059A                     	;# 
   218  059B                     	;# 
   219  059B                     	;# 
   220  059C                     	;# 
   221  059D                     	;# 
   222  060C                     	;# 
   223  060C                     	;# 
   224  060D                     	;# 
   225  060E                     	;# 
   226  060F                     	;# 
   227  060F                     	;# 
   228  0610                     	;# 
   229  0611                     	;# 
   230  0612                     	;# 
   231  0613                     	;# 
   232  0614                     	;# 
   233  0617                     	;# 
   234  0618                     	;# 
   235  0619                     	;# 
   236  061A                     	;# 
   237  061B                     	;# 
   238  061C                     	;# 
   239  0691                     	;# 
   240  0692                     	;# 
   241  0693                     	;# 
   242  0694                     	;# 
   243  0695                     	;# 
   244  0696                     	;# 
   245  0697                     	;# 
   246  0699                     	;# 
   247  069A                     	;# 
   248  0711                     	;# 
   249  0712                     	;# 
   250  0713                     	;# 
   251  0714                     	;# 
   252  0715                     	;# 
   253  0718                     	;# 
   254  0718                     	;# 
   255  0719                     	;# 
   256  071A                     	;# 
   257  071A                     	;# 
   258  071B                     	;# 
   259  071C                     	;# 
   260  071D                     	;# 
   261  0791                     	;# 
   262  0791                     	;# 
   263  0792                     	;# 
   264  0793                     	;# 
   265  0793                     	;# 
   266  0794                     	;# 
   267  0795                     	;# 
   268  0795                     	;# 
   269  0796                     	;# 
   270  0797                     	;# 
   271  0797                     	;# 
   272  0798                     	;# 
   273  0799                     	;# 
   274  079A                     	;# 
   275  080C                     	;# 
   276  080C                     	;# 
   277  080D                     	;# 
   278  080E                     	;# 
   279  080E                     	;# 
   280  080F                     	;# 
   281  0810                     	;# 
   282  0810                     	;# 
   283  0811                     	;# 
   284  0812                     	;# 
   285  0812                     	;# 
   286  0813                     	;# 
   287  0814                     	;# 
   288  0815                     	;# 
   289  0816                     	;# 
   290  0817                     	;# 
   291  0818                     	;# 
   292  0819                     	;# 
   293  081A                     	;# 
   294  081A                     	;# 
   295  081B                     	;# 
   296  081C                     	;# 
   297  081C                     	;# 
   298  081D                     	;# 
   299  088C                     	;# 
   300  088D                     	;# 
   301  088E                     	;# 
   302  088F                     	;# 
   303  088F                     	;# 
   304  0890                     	;# 
   305  0891                     	;# 
   306  0892                     	;# 
   307  0893                     	;# 
   308  0893                     	;# 
   309  0894                     	;# 
   310  0895                     	;# 
   311  0896                     	;# 
   312  0897                     	;# 
   313  0897                     	;# 
   314  0898                     	;# 
   315  0899                     	;# 
   316  0D8C                     	;# 
   317  0D8C                     	;# 
   318  0D8D                     	;# 
   319  0D8E                     	;# 
   320  0D8F                     	;# 
   321  0D8F                     	;# 
   322  0D90                     	;# 
   323  0D91                     	;# 
   324  0D92                     	;# 
   325  0D92                     	;# 
   326  0D93                     	;# 
   327  0D94                     	;# 
   328  0D95                     	;# 
   329  0D95                     	;# 
   330  0D96                     	;# 
   331  0D97                     	;# 
   332  0D98                     	;# 
   333  0D99                     	;# 
   334  0D9A                     	;# 
   335  0D9B                     	;# 
   336  0D9C                     	;# 
   337  0D9D                     	;# 
   338  0D9E                     	;# 
   339  0D9E                     	;# 
   340  0D9F                     	;# 
   341  0DA0                     	;# 
   342  0DA1                     	;# 
   343  0DA1                     	;# 
   344  0DA2                     	;# 
   345  0DA3                     	;# 
   346  0DA4                     	;# 
   347  0DA4                     	;# 
   348  0DA5                     	;# 
   349  0DA6                     	;# 
   350  0DA7                     	;# 
   351  0DA7                     	;# 
   352  0DA8                     	;# 
   353  0DA9                     	;# 
   354  0DAA                     	;# 
   355  0DAB                     	;# 
   356  0DAC                     	;# 
   357  0DAD                     	;# 
   358  0DAE                     	;# 
   359  0DAF                     	;# 
   360  0E0F                     	;# 
   361  0E10                     	;# 
   362  0E11                     	;# 
   363  0E12                     	;# 
   364  0E13                     	;# 
   365  0E14                     	;# 
   366  0E15                     	;# 
   367  0E16                     	;# 
   368  0E17                     	;# 
   369  0E18                     	;# 
   370  0E19                     	;# 
   371  0E1A                     	;# 
   372  0E1B                     	;# 
   373  0E1C                     	;# 
   374  0E1D                     	;# 
   375  0E1E                     	;# 
   376  0E1F                     	;# 
   377  0E20                     	;# 
   378  0E21                     	;# 
   379  0E22                     	;# 
   380  0E23                     	;# 
   381  0E24                     	;# 
   382  0E25                     	;# 
   383  0E26                     	;# 
   384  0E27                     	;# 
   385  0E28                     	;# 
   386  0E29                     	;# 
   387  0E2A                     	;# 
   388  0E2B                     	;# 
   389  0E2C                     	;# 
   390  0E2D                     	;# 
   391  0E2E                     	;# 
   392  0E90                     	;# 
   393  0E91                     	;# 
   394  0E92                     	;# 
   395  0E94                     	;# 
   396  0E95                     	;# 
   397  0E9C                     	;# 
   398  0E9D                     	;# 
   399  0E9E                     	;# 
   400  0E9F                     	;# 
   401  0EA0                     	;# 
   402  0EA1                     	;# 
   403  0EA2                     	;# 
   404  0EA3                     	;# 
   405  0EA4                     	;# 
   406  0EA5                     	;# 
   407  0EA6                     	;# 
   408  0EA7                     	;# 
   409  0F0F                     	;# 
   410  0F10                     	;# 
   411  0F11                     	;# 
   412  0F12                     	;# 
   413  0F13                     	;# 
   414  0F14                     	;# 
   415  0F15                     	;# 
   416  0F16                     	;# 
   417  0F17                     	;# 
   418  0F18                     	;# 
   419  0F19                     	;# 
   420  0F1A                     	;# 
   421  0F1B                     	;# 
   422  0F1C                     	;# 
   423  0F1D                     	;# 
   424  0F1E                     	;# 
   425  0F1F                     	;# 
   426  0F20                     	;# 
   427  0F21                     	;# 
   428  0F22                     	;# 
   429  0F23                     	;# 
   430  0F24                     	;# 
   431  0F25                     	;# 
   432  0F26                     	;# 
   433  0F27                     	;# 
   434  0F28                     	;# 
   435  0F29                     	;# 
   436  0F2A                     	;# 
   437  0F2B                     	;# 
   438  0F2C                     	;# 
   439  0F2D                     	;# 
   440  0F2E                     	;# 
   441  0F2F                     	;# 
   442  0F30                     	;# 
   443  0F31                     	;# 
   444  0F32                     	;# 
   445  0F33                     	;# 
   446  0F34                     	;# 
   447  0F35                     	;# 
   448  0F36                     	;# 
   449  0F37                     	;# 
   450  0FE4                     	;# 
   451  0FE5                     	;# 
   452  0FE6                     	;# 
   453  0FE7                     	;# 
   454  0FE8                     	;# 
   455  0FE9                     	;# 
   456  0FEA                     	;# 
   457  0FEB                     	;# 
   458  0FED                     	;# 
   459  0FEE                     	;# 
   460  0FEF                     	;# 
   461                           
   462                           	psect	idataBANK0
   463  0649                     __pidataBANK0:	
   464                           
   465                           ;initializer for _NUMS
   466  0649  3400               	retlw	0
   467  064A  34E0               	retlw	224
   468  064B  3400               	retlw	0
   469  064C  34FF               	retlw	255
   470  064D  34FF               	retlw	255
   471  064E  3400               	retlw	0
   472  064F  3480               	retlw	128
   473  0650  34A0               	retlw	160
   474  0651  3420               	retlw	32
   475  0652  34E0               	retlw	224
   476  0653  34A0               	retlw	160
   477  0654  3400               	retlw	0
   478  0655  3430               	retlw	48
   479  0656  34BF               	retlw	191
   480  0657  3400               	retlw	0
   481  0658  3420               	retlw	32
   482  0659  34A0               	retlw	160
   483  065A  3480               	retlw	128
   484  065B  3400               	retlw	0
   485  065C  34A0               	retlw	160
   486  065D  3480               	retlw	128
   487  065E  34F0               	retlw	240
   488  065F  34F0               	retlw	240
   489  0660  3400               	retlw	0
   490  0661  3400               	retlw	0
   491  0662  34A0               	retlw	160
   492  0663  3400               	retlw	0
   493  0664  3430               	retlw	48
   494  0665  34B0               	retlw	176
   495  0666  3400               	retlw	0
   496  0099                     _OSCCONbits	set	153
   497  008C                     _TRISAbits	set	140
   498  008D                     _TRISB	set	141
   499  008E                     _TRISC	set	142
   500  010C                     _LATA	set	268
   501  010C                     _LATAbits	set	268
   502  010D                     _LATB	set	269
   503  010E                     _LATC	set	270
   504                           
   505                           ; #config settings
   506  0000                     
   507                           	psect	cinit
   508  07F1                     start_initialization:	
   509  07F1                     __initialization:	
   510                           
   511                           ; Initialize objects allocated to BANK0
   512  07F1  3049               	movlw	low __pidataBANK0
   513  07F2  0084               	movwf	4
   514  07F3  3086               	movlw	(high __pidataBANK0)| (0+128)
   515  07F4  0085               	movwf	5
   516  07F5  3020               	movlw	low __pdataBANK0
   517  07F6  0086               	movwf	6
   518  07F7  3000               	movlw	high __pdataBANK0
   519  07F8  0087               	movwf	7
   520  07F9  301E               	movlw	30
   521  07FA  3186  2621         	fcall	init_ram
   522  07FC                     end_of_initialization:	
   523                           ;End of C runtime variable initialization code
   524                           
   525  07FC                     __end_of__initialization:	
   526  07FC  107E               	bcf	pic14e$flags,0	;clear compiler interrupt flag
   527  07FD  0020               	movlb	0
   528  07FE  3187  2F01         	ljmp	_main	;jump to C main() function
   529                           
   530                           	psect	dataBANK0
   531  0020                     __pdataBANK0:	
   532  0020                     _NUMS:	
   533  0020                     	ds	30
   534                           
   535                           	psect	inittext
   536  0621                     init_ram:	
   537  0621  00FE               	movwf	126
   538  0622                     initloop:	
   539  0622  0012               	moviw fsr0++
   540  0623  001E               	movwi fsr1++
   541  0624  0BFE               	decfsz	126,f
   542  0625  2E22               	goto	initloop
   543  0626  3400               	retlw	0
   544                           
   545                           	psect	cstackCOMMON
   546  0070                     __pcstackCOMMON:	
   547  0070                     ?_setup:	
   548  0070                     ??_setup:	
   549                           ; 0 bytes @ 0x0
   550                           
   551  0070                     ?_main:	
   552                           ; 0 bytes @ 0x0
   553                           
   554  0070                     ?___awdiv:	
   555                           ; 2 bytes @ 0x0
   556                           
   557  0070                     ?___awmod:	
   558                           ; 2 bytes @ 0x0
   559                           
   560  0070                     ___awdiv@divisor:	
   561                           ; 2 bytes @ 0x0
   562                           
   563  0070                     ___awmod@divisor:	
   564                           ; 2 bytes @ 0x0
   565                           
   566                           
   567                           ; 2 bytes @ 0x0
   568  0070                     	ds	2
   569  0072                     ___awdiv@dividend:	
   570  0072                     ___awmod@dividend:	
   571                           ; 2 bytes @ 0x2
   572                           
   573                           
   574                           ; 2 bytes @ 0x2
   575  0072                     	ds	2
   576  0074                     ??___awdiv:	
   577  0074                     ??___awmod:	
   578                           ; 0 bytes @ 0x4
   579                           
   580                           
   581                           ; 0 bytes @ 0x4
   582  0074                     	ds	1
   583  0075                     ___awdiv@counter:	
   584  0075                     ___awmod@counter:	
   585                           ; 1 bytes @ 0x5
   586                           
   587                           
   588                           ; 1 bytes @ 0x5
   589  0075                     	ds	1
   590  0076                     ___awdiv@sign:	
   591  0076                     ___awmod@sign:	
   592                           ; 1 bytes @ 0x6
   593                           
   594                           
   595                           ; 1 bytes @ 0x6
   596  0076                     	ds	1
   597  0077                     ___awdiv@quotient:	
   598                           
   599                           ; 2 bytes @ 0x7
   600  0077                     	ds	2
   601  0079                     ?___bmul:	
   602  0079                     ___bmul@multiplicand:	
   603                           ; 1 bytes @ 0x9
   604                           
   605                           
   606                           ; 1 bytes @ 0x9
   607  0079                     	ds	1
   608  007A                     ??___bmul:	
   609                           
   610                           ; 0 bytes @ 0xA
   611  007A                     	ds	1
   612  007B                     ___bmul@product:	
   613                           
   614                           ; 1 bytes @ 0xB
   615  007B                     	ds	1
   616  007C                     ___bmul@multiplier:	
   617                           
   618                           ; 1 bytes @ 0xC
   619  007C                     	ds	1
   620                           
   621                           	psect	cstackBANK0
   622  003E                     __pcstackBANK0:	
   623  003E                     ??_main:	
   624                           
   625                           ; 0 bytes @ 0x0
   626  003E                     	ds	2
   627  0040                     main@count2:	
   628                           
   629                           ; 2 bytes @ 0x2
   630  0040                     	ds	2
   631  0042                     main@count:	
   632                           
   633                           ; 2 bytes @ 0x4
   634  0042                     	ds	2
   635  0044                     main@var1:	
   636                           
   637                           ; 1 bytes @ 0x6
   638  0044                     	ds	1
   639  0045                     main@var2:	
   640                           
   641                           ; 1 bytes @ 0x7
   642  0045                     	ds	1
   643  0046                     main@num1:	
   644                           
   645                           ; 1 bytes @ 0x8
   646  0046                     	ds	1
   647  0047                     main@num2:	
   648                           
   649                           ; 1 bytes @ 0x9
   650  0047                     	ds	1
   651                           
   652                           	psect	maintext
   653  0701                     __pmaintext:	
   654 ;;
   655 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   656 ;;
   657 ;; *************** function _main *****************
   658 ;; Defined at:
   659 ;;		line 14 in file "timer.c"
   660 ;; Parameters:    Size  Location     Type
   661 ;;		None
   662 ;; Auto vars:     Size  Location     Type
   663 ;;  count           2    4[BANK0 ] int 
   664 ;;  count2          2    2[BANK0 ] int 
   665 ;;  num2            1    9[BANK0 ] PTR unsigned char 
   666 ;;		 -> NUMS(30), 
   667 ;;  num1            1    8[BANK0 ] PTR unsigned char 
   668 ;;		 -> NUMS(30), 
   669 ;;  var2            1    7[BANK0 ] char 
   670 ;;  var1            1    6[BANK0 ] unsigned char 
   671 ;; Return value:  Size  Location     Type
   672 ;;                  2   22[COMMON] int 
   673 ;; Registers used:
   674 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   675 ;; Tracked objects:
   676 ;;		On entry : 17F/0
   677 ;;		On exit  : 0/0
   678 ;;		Unchanged: 0/0
   679 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   680 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   681 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
   682 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
   683 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
   684 ;;Total ram usage:       10 bytes
   685 ;; Hardware stack levels required when called:    1
   686 ;; This function calls:
   687 ;;		___awdiv
   688 ;;		___awmod
   689 ;;		___bmul
   690 ;;		_setup
   691 ;; This function is called by:
   692 ;;		Startup code after reset
   693 ;; This function uses a non-reentrant model
   694 ;;
   695                           
   696                           
   697                           ;psect for function _main
   698  0701                     _main:	
   699                           
   700                           ;timer.c: 17: setup();
   701                           
   702                           ;incstack = 0
   703                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
   704  0701  3186  2638  3187   	fcall	_setup
   705                           
   706                           ;timer.c: 18: char *num1 = NUMS, *num2 = NUMS;
   707  0704  3020               	movlw	_NUMS& (0+255)
   708  0705  0020               	movlb	0	; select bank0
   709  0706  00BE               	movwf	??_main
   710  0707  083E               	movf	??_main,w
   711  0708  00C6               	movwf	main@num1
   712  0709  3020               	movlw	_NUMS& (0+255)
   713  070A  00BE               	movwf	??_main
   714  070B  083E               	movf	??_main,w
   715  070C  00C7               	movwf	main@num2
   716                           
   717                           ;timer.c: 19: char var1 = 1;
   718  070D  01C4               	clrf	main@var1
   719  070E  0AC4               	incf	main@var1,f
   720                           
   721                           ;timer.c: 20: signed char var2 = 0;
   722  070F  01C5               	clrf	main@var2
   723                           
   724                           ;timer.c: 21: int count = 0, count2 = 0;
   725  0710  01C2               	clrf	main@count
   726  0711  01C3               	clrf	main@count+1
   727  0712  01C0               	clrf	main@count2
   728  0713  01C1               	clrf	main@count2+1
   729  0714                     l767:	
   730                           ;timer.c: 22: while (1)
   731                           
   732                           
   733                           ;timer.c: 23: {
   734                           ;timer.c: 26: LATAbits.LATA2 = 1;
   735  0714  0022               	movlb	2	; select bank2
   736  0715  150C               	bsf	12,2	;volatile
   737                           
   738                           ;timer.c: 27: LATB = 0xFF;
   739  0716  30FF               	movlw	255
   740  0717  008D               	movwf	13	;volatile
   741                           
   742                           ;timer.c: 28: LATC = 1 << count;
   743  0718  3001               	movlw	1
   744  0719  0020               	movlb	0	; select bank0
   745  071A  00BE               	movwf	??_main
   746  071B  0A42               	incf	main@count,w
   747  071C  2F1E               	goto	u474
   748  071D                     u475:	
   749  071D  35BE               	lslf	??_main,f
   750  071E                     u474:	
   751  071E  0B89               	decfsz	9,f
   752  071F  2F1D               	goto	u475
   753  0720  083E               	movf	??_main,w
   754  0721  0022               	movlb	2	; select bank2
   755  0722  008E               	movwf	14	;volatile
   756                           
   757                           ;timer.c: 32: switch (count++)
   758  0723  2F7B               	goto	l791
   759  0724                     l773:	
   760                           ;timer.c: 33: {
   761                           ;timer.c: 34: case 0x00:
   762                           
   763                           
   764                           ;timer.c: 35: LATB = *(num1);
   765  0724  0020               	movlb	0	; select bank0
   766  0725  0846               	movf	main@num1,w
   767  0726  0086               	movwf	6
   768  0727  0187               	clrf	7
   769  0728  0801               	movf	1,w
   770  0729  0022               	movlb	2	; select bank2
   771  072A  008D               	movwf	13	;volatile
   772                           
   773                           ;timer.c: 36: LATA = *(num1);
   774  072B  0020               	movlb	0	; select bank0
   775  072C  0846               	movf	main@num1,w
   776  072D  2F56               	goto	L7
   777  072E                     l775:	
   778                           ;timer.c: 38: case 0x01:
   779                           
   780                           ;timer.c: 37: break;
   781                           
   782                           
   783                           ;timer.c: 39: LATB = *(num1+1);
   784  072E  0020               	movlb	0	; select bank0
   785  072F  0846               	movf	main@num1,w
   786  0730  0086               	movwf	6
   787  0731  0187               	clrf	7
   788  0732  3F41               	moviw [1]fsr1
   789  0733  0022               	movlb	2	; select bank2
   790  0734  008D               	movwf	13	;volatile
   791                           
   792                           ;timer.c: 40: LATA = *(num1+1);
   793  0735  0020               	movlb	0	; select bank0
   794  0736  0846               	movf	main@num1,w
   795  0737  0086               	movwf	6
   796  0738  0187               	clrf	7
   797  0739  3F41               	moviw [1]fsr1
   798  073A  2F66               	goto	L6
   799  073B                     l777:	
   800                           ;timer.c: 42: case 0x02:
   801                           
   802                           ;timer.c: 41: break;
   803                           
   804                           
   805                           ;timer.c: 43: LATB = *(num1+2);
   806  073B  0020               	movlb	0	; select bank0
   807  073C  0846               	movf	main@num1,w
   808  073D  0086               	movwf	6
   809  073E  0187               	clrf	7
   810  073F  3F42               	moviw [2]fsr1
   811  0740  0022               	movlb	2	; select bank2
   812  0741  008D               	movwf	13	;volatile
   813                           
   814                           ;timer.c: 44: LATA = *(num1+2);
   815  0742  0020               	movlb	0	; select bank0
   816  0743  0846               	movf	main@num1,w
   817  0744  0086               	movwf	6
   818  0745  0187               	clrf	7
   819  0746  3F42               	moviw [2]fsr1
   820  0747  2F66               	goto	L6
   821  0748                     l779:	
   822                           ;timer.c: 46: case 0x03:
   823                           
   824                           ;timer.c: 45: break;
   825                           
   826                           
   827                           ;timer.c: 47: LATB = 0xFF;
   828  0748  30FF               	movlw	255
   829  0749  0022               	movlb	2	; select bank2
   830  074A  008D               	movwf	13	;volatile
   831                           
   832                           ;timer.c: 48: LATA = 0xFF;
   833  074B  30FF               	movlw	255
   834  074C  2F67               	goto	L5
   835  074D                     l781:	
   836                           ;timer.c: 50: case 0x4:
   837                           
   838                           ;timer.c: 49: break;
   839                           
   840                           
   841                           ;timer.c: 51: LATB = *(num2);
   842  074D  0020               	movlb	0	; select bank0
   843  074E  0847               	movf	main@num2,w
   844  074F  0086               	movwf	6
   845  0750  0187               	clrf	7
   846  0751  0801               	movf	1,w
   847  0752  0022               	movlb	2	; select bank2
   848  0753  008D               	movwf	13	;volatile
   849                           
   850                           ;timer.c: 52: LATA = *(num2);
   851  0754  0020               	movlb	0	; select bank0
   852  0755  0847               	movf	main@num2,w
   853  0756                     L7:	
   854  0756  0086               	movwf	6
   855  0757  0187               	clrf	7
   856  0758  0801               	movf	1,w
   857  0759  2F66               	goto	L6
   858  075A                     l783:	
   859                           ;timer.c: 54: case 0x05:
   860                           
   861                           ;timer.c: 53: break;
   862                           
   863                           
   864                           ;timer.c: 55: LATB = *(num2+1);
   865  075A  0020               	movlb	0	; select bank0
   866  075B  0847               	movf	main@num2,w
   867  075C  0086               	movwf	6
   868  075D  0187               	clrf	7
   869  075E  3F41               	moviw [1]fsr1
   870  075F  0022               	movlb	2	; select bank2
   871  0760  008D               	movwf	13	;volatile
   872                           
   873                           ;timer.c: 56: LATA = *(num2+1);
   874  0761  0020               	movlb	0	; select bank0
   875  0762  0847               	movf	main@num2,w
   876  0763  0086               	movwf	6
   877  0764  0187               	clrf	7
   878  0765  3F41               	moviw [1]fsr1
   879  0766                     L6:	
   880  0766  0022               	movlb	2	; select bank2
   881  0767                     L5:	
   882  0767  008C               	movwf	12	;volatile
   883                           
   884                           ;timer.c: 57: break;
   885  0768  2F92               	goto	l793
   886  0769                     l785:	
   887                           ;timer.c: 58: case 0x06:
   888                           
   889                           
   890                           ;timer.c: 59: LATB = *(num2+2);
   891  0769  0020               	movlb	0	; select bank0
   892  076A  0847               	movf	main@num2,w
   893  076B  0086               	movwf	6
   894  076C  0187               	clrf	7
   895  076D  3F42               	moviw [2]fsr1
   896  076E  0022               	movlb	2	; select bank2
   897  076F  008D               	movwf	13	;volatile
   898                           
   899                           ;timer.c: 60: LATA = *(num2+2);
   900  0770  0020               	movlb	0	; select bank0
   901  0771  0847               	movf	main@num2,w
   902  0772  0086               	movwf	6
   903  0773  0187               	clrf	7
   904  0774  3F42               	moviw [2]fsr1
   905  0775  0022               	movlb	2	; select bank2
   906  0776  008C               	movwf	12	;volatile
   907                           
   908                           ;timer.c: 61: count = 0;
   909  0777  0020               	movlb	0	; select bank0
   910  0778                     l789:	
   911                           ;timer.c: 64: default:
   912                           
   913                           ;timer.c: 62: break;
   914                           
   915                           
   916                           ;timer.c: 65: count = 0;
   917  0778  01C2               	clrf	main@count
   918  0779  01C3               	clrf	main@count+1
   919                           
   920                           ;timer.c: 66: }
   921  077A  2F92               	goto	l793
   922  077B                     l791:	
   923  077B  0020               	movlb	0	; select bank0
   924  077C  0843               	movf	main@count+1,w
   925  077D  00BF               	movwf	??_main+1
   926  077E  0842               	movf	main@count,w
   927  077F  00BE               	movwf	??_main
   928  0780  0AC2               	incf	main@count,f
   929  0781  1903               	skipnz
   930  0782  0AC3               	incf	main@count+1,f
   931                           
   932                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   933                           ; Switch size 1, requested type "space"
   934                           ; Number of cases is 1, Range of values is 0 to 0
   935                           ; switch strategies available:
   936                           ; Name         Instructions Cycles
   937                           ; simple_byte            4     3 (average)
   938                           ; direct_byte            8     6 (fixed)
   939                           ; jumptable            260     6 (fixed)
   940                           ;	Chosen strategy is simple_byte
   941  0783  083F               	movf	??_main+1,w
   942  0784  3A00               	xorlw	0	; case 0
   943  0785  1903               	skipnz
   944  0786  2F88               	goto	l863
   945  0787  2F78               	goto	l789
   946  0788                     l863:	
   947                           
   948                           ; Switch size 1, requested type "space"
   949                           ; Number of cases is 7, Range of values is 0 to 6
   950                           ; switch strategies available:
   951                           ; Name         Instructions Cycles
   952                           ; direct_byte           20     6 (fixed)
   953                           ; simple_byte           22    12 (average)
   954                           ; jumptable            260     6 (fixed)
   955                           ;	Chosen strategy is direct_byte
   956  0788  083E               	movf	??_main,w
   957  0789  0084               	movwf	4
   958  078A  3007               	movlw	7
   959  078B  0204               	subwf	4,w
   960  078C  1803               	skipnc
   961  078D  2F78               	goto	l789
   962  078E  3180               	movlp	high S865
   963  078F  3504               	lslf	4,w
   964  0790  3E04               	addlw	low S865
   965  0791  0082               	movwf	2
   966  0792                     l793:	
   967                           
   968                           ;timer.c: 68: if (count2++ >= 700)
   969  0792  3001               	movlw	1
   970  0793  0020               	movlb	0	; select bank0
   971  0794  07C0               	addwf	main@count2,f
   972  0795  3000               	movlw	0
   973  0796  3DC1               	addwfc	main@count2+1,f
   974  0797  0841               	movf	main@count2+1,w
   975  0798  3A80               	xorlw	128
   976  0799  00BE               	movwf	??_main
   977  079A  3082               	movlw	130
   978  079B  023E               	subwf	??_main,w
   979  079C  1D03               	skipz
   980  079D  2FA0               	goto	u485
   981  079E  30BD               	movlw	189
   982  079F  0240               	subwf	main@count2,w
   983  07A0                     u485:	
   984  07A0  1C03               	skipc
   985  07A1  2FE5               	goto	l809
   986                           
   987                           ;timer.c: 69: {
   988                           ;timer.c: 70: LATAbits.LATA2 = 1;
   989  07A2  0022               	movlb	2	; select bank2
   990  07A3  150C               	bsf	12,2	;volatile
   991                           
   992                           ;timer.c: 71: LATB = 0xFF;
   993  07A4  30FF               	movlw	255
   994  07A5  008D               	movwf	13	;volatile
   995                           
   996                           ;timer.c: 73: num1 = NUMS + (3 * (var2 / 10));
   997  07A6  3003               	movlw	3
   998  07A7  0020               	movlb	0	; select bank0
   999  07A8  00BE               	movwf	??_main
  1000  07A9  083E               	movf	??_main,w
  1001  07AA  00F9               	movwf	___bmul@multiplicand
  1002  07AB  0845               	movf	main@var2,w
  1003  07AC  00F2               	movwf	___awdiv@dividend
  1004  07AD  01F3               	clrf	___awdiv@dividend+1
  1005  07AE  1BF2               	btfsc	___awdiv@dividend,7
  1006  07AF  03F3               	decf	___awdiv@dividend+1,f
  1007  07B0  300A               	movlw	10
  1008  07B1  00F0               	movwf	___awdiv@divisor
  1009  07B2  3000               	movlw	0
  1010  07B3  00F1               	movwf	___awdiv@divisor+1
  1011  07B4  3186  26AE  3187   	fcall	___awdiv
  1012  07B7  0870               	movf	?___awdiv,w
  1013  07B8  3186  2627  3187   	fcall	___bmul
  1014  07BB  3E20               	addlw	_NUMS& (0+255)
  1015  07BC  0020               	movlb	0	; select bank0
  1016  07BD  00BF               	movwf	??_main+1
  1017  07BE  083F               	movf	??_main+1,w
  1018  07BF  00C6               	movwf	main@num1
  1019                           
  1020                           ;timer.c: 74: num2 = NUMS + (3 * (var2 % 10));
  1021  07C0  3003               	movlw	3
  1022  07C1  00BE               	movwf	??_main
  1023  07C2  083E               	movf	??_main,w
  1024  07C3  00F9               	movwf	___bmul@multiplicand
  1025  07C4  0845               	movf	main@var2,w
  1026  07C5  00F2               	movwf	___awmod@dividend
  1027  07C6  01F3               	clrf	___awmod@dividend+1
  1028  07C7  1BF2               	btfsc	___awmod@dividend,7
  1029  07C8  03F3               	decf	___awmod@dividend+1,f
  1030  07C9  300A               	movlw	10
  1031  07CA  00F0               	movwf	___awmod@divisor
  1032  07CB  3000               	movlw	0
  1033  07CC  00F1               	movwf	___awmod@divisor+1
  1034  07CD  3186  2667  3187   	fcall	___awmod
  1035  07D0  0870               	movf	?___awmod,w
  1036  07D1  3186  2627  3187   	fcall	___bmul
  1037  07D4  3E20               	addlw	_NUMS& (0+255)
  1038  07D5  0020               	movlb	0	; select bank0
  1039  07D6  00BF               	movwf	??_main+1
  1040  07D7  083F               	movf	??_main+1,w
  1041  07D8  00C7               	movwf	main@num2
  1042                           
  1043                           ;timer.c: 76: if (var2-- <= 0)
  1044  07D9  30FF               	movlw	-1
  1045  07DA  00BE               	movwf	??_main
  1046  07DB  083E               	movf	??_main,w
  1047  07DC  07C5               	addwf	main@var2,f
  1048  07DD  1FC5               	btfss	main@var2,7
  1049  07DE  2FE3               	goto	l807
  1050                           
  1051                           ;timer.c: 77: {
  1052                           ;timer.c: 79: var2 = 59;
  1053  07DF  303B               	movlw	59
  1054  07E0  00BE               	movwf	??_main
  1055  07E1  083E               	movf	??_main,w
  1056  07E2  00C5               	movwf	main@var2
  1057  07E3                     l807:	
  1058                           
  1059                           ;timer.c: 80: }
  1060                           ;timer.c: 81: count2 = 0;
  1061  07E3  01C0               	clrf	main@count2
  1062  07E4  01C1               	clrf	main@count2+1
  1063  07E5                     l809:	
  1064                           
  1065                           ;timer.c: 82: }
  1066                           ;timer.c: 84: var1 = (var1 << 1);
  1067  07E5  0020               	movlb	0	; select bank0
  1068  07E6  3544               	lslf	main@var1,w
  1069  07E7  00BE               	movwf	??_main
  1070  07E8  083E               	movf	??_main,w
  1071  07E9  00C4               	movwf	main@var1
  1072                           
  1073                           ;timer.c: 85: if (var1 == 0b10000000)
  1074  07EA  0844               	movf	main@var1,w
  1075  07EB  3A80               	xorlw	128
  1076  07EC  1D03               	skipz
  1077  07ED  2F14               	goto	l767
  1078                           
  1079                           ;timer.c: 86: {
  1080                           ;timer.c: 87: var1 = 1;
  1081  07EE  01C4               	clrf	main@var1
  1082  07EF  0AC4               	incf	main@var1,f
  1083  07F0  2F14               	goto	l767
  1084  07F1                     __end_of_main:	
  1085                           ;timer.c: 88: }
  1086                           ;timer.c: 90: }
  1087                           ;timer.c: 93: return 0;
  1088                           ;	Return value of _main is never used
  1089                           
  1090                           
  1091                           	psect	swtext1
  1092  0004                     __pswtext1:	
  1093  0004                     S865:	
  1094  0004  3187  2F24         	ljmp	l773
  1095  0006  3187  2F2E         	ljmp	l775
  1096  0008  3187  2F3B         	ljmp	l777
  1097  000A  3187  2F48         	ljmp	l779
  1098  000C  3187  2F4D         	ljmp	l781
  1099  000E  3187  2F5A         	ljmp	l783
  1100  0010  3187  2F69         	ljmp	l785
  1101                           
  1102                           	psect	text1
  1103  0638                     __ptext1:	
  1104 ;; *************** function _setup *****************
  1105 ;; Defined at:
  1106 ;;		line 96 in file "timer.c"
  1107 ;; Parameters:    Size  Location     Type
  1108 ;;		None
  1109 ;; Auto vars:     Size  Location     Type
  1110 ;;		None
  1111 ;; Return value:  Size  Location     Type
  1112 ;;		None               void
  1113 ;; Registers used:
  1114 ;;		wreg, status,2, status,0
  1115 ;; Tracked objects:
  1116 ;;		On entry : 0/0
  1117 ;;		On exit  : 0/0
  1118 ;;		Unchanged: 0/0
  1119 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1120 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1121 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1122 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1123 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1124 ;;Total ram usage:        0 bytes
  1125 ;; Hardware stack levels used:    1
  1126 ;; This function calls:
  1127 ;;		Nothing
  1128 ;; This function is called by:
  1129 ;;		_main
  1130 ;; This function uses a non-reentrant model
  1131 ;;
  1132                           
  1133                           
  1134                           ;psect for function _setup
  1135  0638                     _setup:	
  1136                           
  1137                           ;timer.c: 98: OSCCONbits.SPLLEN = 1;
  1138                           
  1139                           ;incstack = 0
  1140                           ; Regs used in _setup: [wreg+status,2+status,0]
  1141  0638  0021               	movlb	1	; select bank1
  1142  0639  1799               	bsf	25,7	;volatile
  1143                           
  1144                           ;timer.c: 99: OSCCONbits.SCS = 0b10;
  1145  063A  0819               	movf	25,w	;volatile
  1146  063B  39FC               	andlw	-4
  1147  063C  3802               	iorlw	2
  1148  063D  0099               	movwf	25	;volatile
  1149                           
  1150                           ;timer.c: 100: OSCCONbits.IRCF = 0b0111;
  1151  063E  0819               	movf	25,w	;volatile
  1152  063F  3987               	andlw	-121
  1153  0640  3838               	iorlw	56
  1154  0641  0099               	movwf	25	;volatile
  1155                           
  1156                           ;timer.c: 102: TRISC = 0x00;
  1157  0642  018E               	clrf	14	;volatile
  1158                           
  1159                           ;timer.c: 103: TRISAbits.TRISA2 = 0;
  1160  0643  110C               	bcf	12,2	;volatile
  1161                           
  1162                           ;timer.c: 104: TRISB = 0x00;
  1163  0644  018D               	clrf	13	;volatile
  1164                           
  1165                           ;timer.c: 105: LATB = 0x00;
  1166  0645  0022               	movlb	2	; select bank2
  1167  0646  018D               	clrf	13	;volatile
  1168                           
  1169                           ;timer.c: 106: LATAbits.LATA2 = 0;
  1170  0647  110C               	bcf	12,2	;volatile
  1171  0648  0008               	return
  1172  0649                     __end_of_setup:	
  1173                           
  1174                           	psect	text2
  1175  0627                     __ptext2:	
  1176 ;; *************** function ___bmul *****************
  1177 ;; Defined at:
  1178 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\Umul8.c"
  1179 ;; Parameters:    Size  Location     Type
  1180 ;;  multiplier      1    wreg     unsigned char 
  1181 ;;  multiplicand    1    9[COMMON] unsigned char 
  1182 ;; Auto vars:     Size  Location     Type
  1183 ;;  multiplier      1   12[COMMON] unsigned char 
  1184 ;;  product         1   11[COMMON] unsigned char 
  1185 ;; Return value:  Size  Location     Type
  1186 ;;                  1    wreg      unsigned char 
  1187 ;; Registers used:
  1188 ;;		wreg, status,2, status,0
  1189 ;; Tracked objects:
  1190 ;;		On entry : 0/0
  1191 ;;		On exit  : 0/0
  1192 ;;		Unchanged: 0/0
  1193 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1194 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1195 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1196 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1197 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1198 ;;Total ram usage:        4 bytes
  1199 ;; Hardware stack levels used:    1
  1200 ;; This function calls:
  1201 ;;		Nothing
  1202 ;; This function is called by:
  1203 ;;		_main
  1204 ;; This function uses a non-reentrant model
  1205 ;;
  1206                           
  1207                           
  1208                           ;psect for function ___bmul
  1209  0627                     ___bmul:	
  1210                           
  1211                           ;incstack = 0
  1212                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  1213                           ;___bmul@multiplier stored from wreg
  1214  0627  00FC               	movwf	___bmul@multiplier
  1215  0628  01FB               	clrf	___bmul@product
  1216  0629                     l657:	
  1217  0629  1C7C               	btfss	___bmul@multiplier,0
  1218  062A  2E2F               	goto	l661
  1219  062B  0879               	movf	___bmul@multiplicand,w
  1220  062C  00FA               	movwf	??___bmul
  1221  062D  087A               	movf	??___bmul,w
  1222  062E  07FB               	addwf	___bmul@product,f
  1223  062F                     l661:	
  1224  062F  1003               	clrc
  1225  0630  0DF9               	rlf	___bmul@multiplicand,f
  1226  0631  1003               	clrc
  1227  0632  0CFC               	rrf	___bmul@multiplier,f
  1228  0633  08FC               	movf	___bmul@multiplier,f
  1229  0634  1D03               	skipz
  1230  0635  2E29               	goto	l657
  1231  0636  087B               	movf	___bmul@product,w
  1232  0637  0008               	return
  1233  0638                     __end_of___bmul:	
  1234                           
  1235                           	psect	text3
  1236  0667                     __ptext3:	
  1237 ;; *************** function ___awmod *****************
  1238 ;; Defined at:
  1239 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\awmod.c"
  1240 ;; Parameters:    Size  Location     Type
  1241 ;;  divisor         2    0[COMMON] int 
  1242 ;;  dividend        2    2[COMMON] int 
  1243 ;; Auto vars:     Size  Location     Type
  1244 ;;  sign            1    6[COMMON] unsigned char 
  1245 ;;  counter         1    5[COMMON] unsigned char 
  1246 ;; Return value:  Size  Location     Type
  1247 ;;                  2    0[COMMON] int 
  1248 ;; Registers used:
  1249 ;;		wreg, status,2, status,0
  1250 ;; Tracked objects:
  1251 ;;		On entry : 0/0
  1252 ;;		On exit  : 0/0
  1253 ;;		Unchanged: 0/0
  1254 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1255 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1256 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1257 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1258 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1259 ;;Total ram usage:        7 bytes
  1260 ;; Hardware stack levels used:    1
  1261 ;; This function calls:
  1262 ;;		Nothing
  1263 ;; This function is called by:
  1264 ;;		_main
  1265 ;; This function uses a non-reentrant model
  1266 ;;
  1267                           
  1268                           
  1269                           ;psect for function ___awmod
  1270  0667                     ___awmod:	
  1271                           
  1272                           ;incstack = 0
  1273                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  1274  0667  01F6               	clrf	___awmod@sign
  1275  0668  1FF3               	btfss	___awmod@dividend+1,7
  1276  0669  2E71               	goto	l723
  1277  066A  09F2               	comf	___awmod@dividend,f
  1278  066B  09F3               	comf	___awmod@dividend+1,f
  1279  066C  0AF2               	incf	___awmod@dividend,f
  1280  066D  1903               	skipnz
  1281  066E  0AF3               	incf	___awmod@dividend+1,f
  1282  066F  01F6               	clrf	___awmod@sign
  1283  0670  0AF6               	incf	___awmod@sign,f
  1284  0671                     l723:	
  1285  0671  1FF1               	btfss	___awmod@divisor+1,7
  1286  0672  2E78               	goto	l727
  1287  0673  09F0               	comf	___awmod@divisor,f
  1288  0674  09F1               	comf	___awmod@divisor+1,f
  1289  0675  0AF0               	incf	___awmod@divisor,f
  1290  0676  1903               	skipnz
  1291  0677  0AF1               	incf	___awmod@divisor+1,f
  1292  0678                     l727:	
  1293  0678  0871               	movf	___awmod@divisor+1,w
  1294  0679  0470               	iorwf	___awmod@divisor,w
  1295  067A  1903               	skipnz
  1296  067B  2E9F               	goto	l745
  1297  067C  01F5               	clrf	___awmod@counter
  1298  067D  0AF5               	incf	___awmod@counter,f
  1299  067E                     l735:	
  1300  067E  1BF1               	btfsc	___awmod@divisor+1,7
  1301  067F  2E8A               	goto	l737
  1302  0680  3001               	movlw	1
  1303  0681                     u415:	
  1304  0681  35F0               	lslf	___awmod@divisor,f
  1305  0682  0DF1               	rlf	___awmod@divisor+1,f
  1306  0683  0B89               	decfsz	9,f
  1307  0684  2E81               	goto	u415
  1308  0685  3001               	movlw	1
  1309  0686  00F4               	movwf	??___awmod
  1310  0687  0874               	movf	??___awmod,w
  1311  0688  07F5               	addwf	___awmod@counter,f
  1312  0689  2E7E               	goto	l735
  1313  068A                     l737:	
  1314  068A  0871               	movf	___awmod@divisor+1,w
  1315  068B  0273               	subwf	___awmod@dividend+1,w
  1316  068C  1D03               	skipz
  1317  068D  2E90               	goto	u435
  1318  068E  0870               	movf	___awmod@divisor,w
  1319  068F  0272               	subwf	___awmod@dividend,w
  1320  0690                     u435:	
  1321  0690  1C03               	skipc
  1322  0691  2E96               	goto	l741
  1323  0692  0870               	movf	___awmod@divisor,w
  1324  0693  02F2               	subwf	___awmod@dividend,f
  1325  0694  0871               	movf	___awmod@divisor+1,w
  1326  0695  3BF3               	subwfb	___awmod@dividend+1,f
  1327  0696                     l741:	
  1328  0696  3001               	movlw	1
  1329  0697                     u445:	
  1330  0697  36F1               	lsrf	___awmod@divisor+1,f
  1331  0698  0CF0               	rrf	___awmod@divisor,f
  1332  0699  0B89               	decfsz	9,f
  1333  069A  2E97               	goto	u445
  1334  069B  3001               	movlw	1
  1335  069C  02F5               	subwf	___awmod@counter,f
  1336  069D  1D03               	btfss	3,2
  1337  069E  2E8A               	goto	l737
  1338  069F                     l745:	
  1339  069F  0876               	movf	___awmod@sign,w
  1340  06A0  1903               	btfsc	3,2
  1341  06A1  2EA7               	goto	l749
  1342  06A2  09F2               	comf	___awmod@dividend,f
  1343  06A3  09F3               	comf	___awmod@dividend+1,f
  1344  06A4  0AF2               	incf	___awmod@dividend,f
  1345  06A5  1903               	skipnz
  1346  06A6  0AF3               	incf	___awmod@dividend+1,f
  1347  06A7                     l749:	
  1348  06A7  0873               	movf	___awmod@dividend+1,w
  1349  06A8  01F1               	clrf	?___awmod+1
  1350  06A9  07F1               	addwf	?___awmod+1,f
  1351  06AA  0872               	movf	___awmod@dividend,w
  1352  06AB  01F0               	clrf	?___awmod
  1353  06AC  07F0               	addwf	?___awmod,f
  1354  06AD  0008               	return
  1355  06AE                     __end_of___awmod:	
  1356                           
  1357                           	psect	text4
  1358  06AE                     __ptext4:	
  1359 ;; *************** function ___awdiv *****************
  1360 ;; Defined at:
  1361 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\awdiv.c"
  1362 ;; Parameters:    Size  Location     Type
  1363 ;;  divisor         2    0[COMMON] int 
  1364 ;;  dividend        2    2[COMMON] int 
  1365 ;; Auto vars:     Size  Location     Type
  1366 ;;  quotient        2    7[COMMON] int 
  1367 ;;  sign            1    6[COMMON] unsigned char 
  1368 ;;  counter         1    5[COMMON] unsigned char 
  1369 ;; Return value:  Size  Location     Type
  1370 ;;                  2    0[COMMON] int 
  1371 ;; Registers used:
  1372 ;;		wreg, status,2, status,0
  1373 ;; Tracked objects:
  1374 ;;		On entry : 0/0
  1375 ;;		On exit  : 0/0
  1376 ;;		Unchanged: 0/0
  1377 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1378 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1379 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1380 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1381 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1382 ;;Total ram usage:        9 bytes
  1383 ;; Hardware stack levels used:    1
  1384 ;; This function calls:
  1385 ;;		Nothing
  1386 ;; This function is called by:
  1387 ;;		_main
  1388 ;; This function uses a non-reentrant model
  1389 ;;
  1390                           
  1391                           
  1392                           ;psect for function ___awdiv
  1393  06AE                     ___awdiv:	
  1394                           
  1395                           ;incstack = 0
  1396                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1397  06AE  01F6               	clrf	___awdiv@sign
  1398  06AF  1FF1               	btfss	___awdiv@divisor+1,7
  1399  06B0  2EB8               	goto	l679
  1400  06B1  09F0               	comf	___awdiv@divisor,f
  1401  06B2  09F1               	comf	___awdiv@divisor+1,f
  1402  06B3  0AF0               	incf	___awdiv@divisor,f
  1403  06B4  1903               	skipnz
  1404  06B5  0AF1               	incf	___awdiv@divisor+1,f
  1405  06B6  01F6               	clrf	___awdiv@sign
  1406  06B7  0AF6               	incf	___awdiv@sign,f
  1407  06B8                     l679:	
  1408  06B8  1FF3               	btfss	___awdiv@dividend+1,7
  1409  06B9  2EC3               	goto	l685
  1410  06BA  09F2               	comf	___awdiv@dividend,f
  1411  06BB  09F3               	comf	___awdiv@dividend+1,f
  1412  06BC  0AF2               	incf	___awdiv@dividend,f
  1413  06BD  1903               	skipnz
  1414  06BE  0AF3               	incf	___awdiv@dividend+1,f
  1415  06BF  3001               	movlw	1
  1416  06C0  00F4               	movwf	??___awdiv
  1417  06C1  0874               	movf	??___awdiv,w
  1418  06C2  06F6               	xorwf	___awdiv@sign,f
  1419  06C3                     l685:	
  1420  06C3  01F7               	clrf	___awdiv@quotient
  1421  06C4  01F8               	clrf	___awdiv@quotient+1
  1422  06C5  0871               	movf	___awdiv@divisor+1,w
  1423  06C6  0470               	iorwf	___awdiv@divisor,w
  1424  06C7  1903               	skipnz
  1425  06C8  2EF2               	goto	l707
  1426  06C9  01F5               	clrf	___awdiv@counter
  1427  06CA  0AF5               	incf	___awdiv@counter,f
  1428  06CB                     l695:	
  1429  06CB  1BF1               	btfsc	___awdiv@divisor+1,7
  1430  06CC  2ED7               	goto	l697
  1431  06CD  3001               	movlw	1
  1432  06CE                     u315:	
  1433  06CE  35F0               	lslf	___awdiv@divisor,f
  1434  06CF  0DF1               	rlf	___awdiv@divisor+1,f
  1435  06D0  0B89               	decfsz	9,f
  1436  06D1  2ECE               	goto	u315
  1437  06D2  3001               	movlw	1
  1438  06D3  00F4               	movwf	??___awdiv
  1439  06D4  0874               	movf	??___awdiv,w
  1440  06D5  07F5               	addwf	___awdiv@counter,f
  1441  06D6  2ECB               	goto	l695
  1442  06D7                     l697:	
  1443  06D7  3001               	movlw	1
  1444  06D8                     u335:	
  1445  06D8  35F7               	lslf	___awdiv@quotient,f
  1446  06D9  0DF8               	rlf	___awdiv@quotient+1,f
  1447  06DA  0B89               	decfsz	9,f
  1448  06DB  2ED8               	goto	u335
  1449  06DC  0871               	movf	___awdiv@divisor+1,w
  1450  06DD  0273               	subwf	___awdiv@dividend+1,w
  1451  06DE  1D03               	skipz
  1452  06DF  2EE2               	goto	u345
  1453  06E0  0870               	movf	___awdiv@divisor,w
  1454  06E1  0272               	subwf	___awdiv@dividend,w
  1455  06E2                     u345:	
  1456  06E2  1C03               	skipc
  1457  06E3  2EE9               	goto	l703
  1458  06E4  0870               	movf	___awdiv@divisor,w
  1459  06E5  02F2               	subwf	___awdiv@dividend,f
  1460  06E6  0871               	movf	___awdiv@divisor+1,w
  1461  06E7  3BF3               	subwfb	___awdiv@dividend+1,f
  1462  06E8  1477               	bsf	___awdiv@quotient,0
  1463  06E9                     l703:	
  1464  06E9  3001               	movlw	1
  1465  06EA                     u355:	
  1466  06EA  36F1               	lsrf	___awdiv@divisor+1,f
  1467  06EB  0CF0               	rrf	___awdiv@divisor,f
  1468  06EC  0B89               	decfsz	9,f
  1469  06ED  2EEA               	goto	u355
  1470  06EE  3001               	movlw	1
  1471  06EF  02F5               	subwf	___awdiv@counter,f
  1472  06F0  1D03               	btfss	3,2
  1473  06F1  2ED7               	goto	l697
  1474  06F2                     l707:	
  1475  06F2  0876               	movf	___awdiv@sign,w
  1476  06F3  1903               	btfsc	3,2
  1477  06F4  2EFA               	goto	l711
  1478  06F5  09F7               	comf	___awdiv@quotient,f
  1479  06F6  09F8               	comf	___awdiv@quotient+1,f
  1480  06F7  0AF7               	incf	___awdiv@quotient,f
  1481  06F8  1903               	skipnz
  1482  06F9  0AF8               	incf	___awdiv@quotient+1,f
  1483  06FA                     l711:	
  1484  06FA  0878               	movf	___awdiv@quotient+1,w
  1485  06FB  01F1               	clrf	?___awdiv+1
  1486  06FC  07F1               	addwf	?___awdiv+1,f
  1487  06FD  0877               	movf	___awdiv@quotient,w
  1488  06FE  01F0               	clrf	?___awdiv
  1489  06FF  07F0               	addwf	?___awdiv,f
  1490  0700  0008               	return
  1491  0701                     __end_of___awdiv:	
  1492  007E                     btemp	set	126	;btemp
  1493  007E                     pic14e$flags	set	126
  1494  007E                     wtemp	set	126
  1495  007E                     wtemp0	set	126
  1496  0080                     wtemp1	set	128
  1497  0082                     wtemp2	set	130
  1498  0084                     wtemp3	set	132
  1499  0086                     wtemp4	set	134
  1500  0088                     wtemp5	set	136
  1501  007F                     wtemp6	set	127
  1502  007E                     ttemp	set	126
  1503  007E                     ttemp0	set	126
  1504  0081                     ttemp1	set	129
  1505  0084                     ttemp2	set	132
  1506  0087                     ttemp3	set	135
  1507  007F                     ttemp4	set	127
  1508  007E                     ltemp	set	126
  1509  007E                     ltemp0	set	126
  1510  0082                     ltemp1	set	130
  1511  0086                     ltemp2	set	134
  1512  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    0
    Data        30
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      13
    BANK0            80     10      40
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           32      0       0

Pointer List with Targets:

    main@num2	PTR unsigned char  size(1) Largest target is 30
		 -> NUMS(BANK0[30]), 

    main@num1	PTR unsigned char  size(1) Largest target is 30
		 -> NUMS(BANK0[30]), 


Critical Paths under _main in COMMON

    _main->___bmul
    ___bmul->___awdiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                10    10      0    1406
                                              0 BANK0     10    10      0
                            ___awdiv
                            ___awmod
                             ___bmul
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___bmul                                               4     3      1     144
                                              9 COMMON     4     3      1
                            ___awdiv (ARG)
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              7     3      4     402
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              9     5      4     406
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___awdiv
   ___awmod
   ___bmul
     ___awdiv (ARG)
     ___awmod (ARG)
   _setup

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3E0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      D       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      A      28       5       50.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      35      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           20      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              20      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      35      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Tue Feb 17 23:36:40 2015

                      pc 0002           ___bmul@product 007B              __CFG_CP$OFF 0000  
           ___awdiv@sign 0076                      S865 0004              __CFG_LVP$ON 0000  
                    l711 06FA                      l703 06E9                      l707 06F2  
                    l723 0671                      l741 0696                      l661 062F  
                    l735 067E                      l727 0678                      l807 07E3  
                    l737 068A                      l745 069F                      l657 0629  
                    l809 07E5                      l685 06C3                      l749 06A7  
                    l781 074D                      l773 0724                      l695 06CB  
                    l679 06B8                      l863 0788                      l783 075A  
                    l775 072E                      l791 077B                      l767 0714  
                    l697 06D7                      l785 0769                      l777 073B  
                    l793 0792                      l779 0748                      l789 0778  
                    u315 06CE                      u335 06D8                      u415 0681  
                    u345 06E2                      u355 06EA                      u435 0690  
                    u445 0697                      u474 071E                      u475 071D  
                    u485 07A0             ___awmod@sign 0076             __CFG_BORV$LO 0000  
                    wreg 0009                     _LATA 010C                     _LATB 010D  
                   _LATC 010E                     _NUMS 0020             __CFG_WRT$OFF 0000  
                   _main 0701                     fsr0h 0005                     fsr1h 0007  
                   fsr0l 0004                     indf1 0001                     fsr1l 0006  
                   btemp 007E            __CFG_BOREN$ON 0000                     ltemp 007E  
                   start 0002                     ttemp 007E                     wtemp 007E  
          __CFG_IESO$OFF 0000        ___bmul@multiplier 007C            __CFG_MCLRE$ON 0000  
          __CFG_PLLEN$ON 0000                    ?_main 0070          __end_of___awdiv 0701  
          __CFG_WDTE$OFF 0000          __end_of___awmod 06AE          ___awdiv@divisor 0070  
        ___awdiv@counter 0075                    _TRISB 008D                    _TRISC 008E  
         __CFG_FCMEN$OFF 0000                    _setup 0638                    ltemp0 007E  
                  ltemp1 0082                    ltemp2 0086                    ltemp3 0080  
                  ttemp0 007E                    ttemp1 0081                    ttemp2 0084  
                  ttemp3 0087                    ttemp4 007F                    status 0003  
                  wtemp0 007E                    wtemp1 0080                    wtemp2 0082  
                  wtemp3 0084                    wtemp4 0086                    wtemp5 0088  
                  wtemp6 007F          __initialization 07F1             __end_of_main 07F1  
         __CFG_LPBOR$OFF 0000            __CFG_nZCD$OFF 0000                   ??_main 003E  
       ___awdiv@dividend 0072                   ?_setup 0070           __CFG_PWRTE$OFF 0000  
                 ___bmul 0627                ??___awdiv 0074           __CFG_STVREN$ON 0000  
              ??___awmod 0074         ___awdiv@quotient 0077          ___awmod@divisor 0070  
        ___awmod@counter 0075  __end_of__initialization 07FC      ___bmul@multiplicand 0079  
         __pcstackCOMMON 0070             __pidataBANK0 0649            __end_of_setup 0649  
                ??_setup 0070               __pmaintext 0701                  ?___bmul 0079  
        __CFG_PPS1WAY$ON 0000          __CFG_WDTCCS$SWC 0000          __size_of___bmul 0011  
                ___awdiv 06AE                  ___awmod 0667                  __ptext1 0638  
                __ptext2 0627                  __ptext3 0667                  __ptext4 06AE  
       ___awmod@dividend 0072     end_of_initialization 07FC                  init_ram 0621  
                initloop 0622         __CFG_CLKOUTEN$ON 0000         __CFG_FOSC$INTOSC 0000  
              _TRISAbits 008C               main@count2 0040           __end_of___bmul 0638  
    start_initialization 07F1                 ??___bmul 007A              __pdataBANK0 0020  
              ___latbits 0002            __pcstackBANK0 003E                 ?___awdiv 0070  
               ?___awmod 0070                __pswtext1 0004           __size_of_setup 0011  
               _LATAbits 010C     __CFG_WDTCPS$WDTCPS1F 0000                main@count 0042  
       __size_of___awdiv 0053         __size_of___awmod 0047            __size_of_main 00F0  
   __CFG_WDTCWS$WDTCWSSW 0000                 main@var1 0044                 main@var2 0045  
               main@num1 0046                 main@num2 0047              pic14e$flags 007E  
             _OSCCONbits 0099  
