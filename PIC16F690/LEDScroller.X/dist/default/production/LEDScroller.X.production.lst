

Microchip Technology PIC LITE Macro Assembler V1.32 build 58300 
                                                                                               Wed Dec 10 21:11:14 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 58300
     1                           	processor	16F690
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	idataBANK1,global,class=CODE,delta=2
     6                           	psect	strings,global,class=STRING,delta=2
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	clrtext,global,class=CODE,delta=2
    13                           	psect	inittext,global,class=CODE,delta=2
    14                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	maintext,global,class=CODE,split=1,delta=2
    17                           	psect	text1,local,class=CODE,merge=1,delta=2
    18                           	psect	text2,local,class=CODE,merge=1,delta=2
    19                           	psect	text3,local,class=CODE,merge=1,delta=2
    20                           	psect	text4,local,class=CODE,merge=1,delta=2
    21                           	psect	text5,local,class=CODE,merge=1,delta=2
    22                           	psect	text6,local,class=CODE,merge=1,delta=2
    23                           	psect	text7,local,class=CODE,merge=1,delta=2
    24                           	psect	text8,local,class=CODE,merge=1,delta=2
    25                           	psect	intentry,global,class=CODE,delta=2
    26                           	psect	text9,local,class=CODE,merge=1,delta=2
    27                           	psect	text10,local,class=CODE,merge=1,delta=2
    28                           	psect	text11,local,class=CODE,merge=1,delta=2
    29                           	dabs	1,0x7E,2
    30  0000                     	;# 
    31  0001                     	;# 
    32  0002                     	;# 
    33  0003                     	;# 
    34  0004                     	;# 
    35  0005                     	;# 
    36  0006                     	;# 
    37  0007                     	;# 
    38  000A                     	;# 
    39  000B                     	;# 
    40  000C                     	;# 
    41  000D                     	;# 
    42  000E                     	;# 
    43  000E                     	;# 
    44  000F                     	;# 
    45  0010                     	;# 
    46  0011                     	;# 
    47  0012                     	;# 
    48  0013                     	;# 
    49  0014                     	;# 
    50  0015                     	;# 
    51  0015                     	;# 
    52  0016                     	;# 
    53  0017                     	;# 
    54  0018                     	;# 
    55  0019                     	;# 
    56  001A                     	;# 
    57  001C                     	;# 
    58  001D                     	;# 
    59  001E                     	;# 
    60  001F                     	;# 
    61  0081                     	;# 
    62  0085                     	;# 
    63  0086                     	;# 
    64  0087                     	;# 
    65  008C                     	;# 
    66  008D                     	;# 
    67  008E                     	;# 
    68  008F                     	;# 
    69  0090                     	;# 
    70  0092                     	;# 
    71  0093                     	;# 
    72  0093                     	;# 
    73  0093                     	;# 
    74  0094                     	;# 
    75  0095                     	;# 
    76  0095                     	;# 
    77  0096                     	;# 
    78  0096                     	;# 
    79  0097                     	;# 
    80  0098                     	;# 
    81  0099                     	;# 
    82  009A                     	;# 
    83  009B                     	;# 
    84  009E                     	;# 
    85  009F                     	;# 
    86  010C                     	;# 
    87  010C                     	;# 
    88  010D                     	;# 
    89  010E                     	;# 
    90  010F                     	;# 
    91  0115                     	;# 
    92  0116                     	;# 
    93  0118                     	;# 
    94  0119                     	;# 
    95  011A                     	;# 
    96  011B                     	;# 
    97  011E                     	;# 
    98  011F                     	;# 
    99  018C                     	;# 
   100  018D                     	;# 
   101  019D                     	;# 
   102  019E                     	;# 
   103  0000                     	;# 
   104  0001                     	;# 
   105  0002                     	;# 
   106  0003                     	;# 
   107  0004                     	;# 
   108  0005                     	;# 
   109  0006                     	;# 
   110  0007                     	;# 
   111  000A                     	;# 
   112  000B                     	;# 
   113  000C                     	;# 
   114  000D                     	;# 
   115  000E                     	;# 
   116  000E                     	;# 
   117  000F                     	;# 
   118  0010                     	;# 
   119  0011                     	;# 
   120  0012                     	;# 
   121  0013                     	;# 
   122  0014                     	;# 
   123  0015                     	;# 
   124  0015                     	;# 
   125  0016                     	;# 
   126  0017                     	;# 
   127  0018                     	;# 
   128  0019                     	;# 
   129  001A                     	;# 
   130  001C                     	;# 
   131  001D                     	;# 
   132  001E                     	;# 
   133  001F                     	;# 
   134  0081                     	;# 
   135  0085                     	;# 
   136  0086                     	;# 
   137  0087                     	;# 
   138  008C                     	;# 
   139  008D                     	;# 
   140  008E                     	;# 
   141  008F                     	;# 
   142  0090                     	;# 
   143  0092                     	;# 
   144  0093                     	;# 
   145  0093                     	;# 
   146  0093                     	;# 
   147  0094                     	;# 
   148  0095                     	;# 
   149  0095                     	;# 
   150  0096                     	;# 
   151  0096                     	;# 
   152  0097                     	;# 
   153  0098                     	;# 
   154  0099                     	;# 
   155  009A                     	;# 
   156  009B                     	;# 
   157  009E                     	;# 
   158  009F                     	;# 
   159  010C                     	;# 
   160  010C                     	;# 
   161  010D                     	;# 
   162  010E                     	;# 
   163  010F                     	;# 
   164  0115                     	;# 
   165  0116                     	;# 
   166  0118                     	;# 
   167  0119                     	;# 
   168  011A                     	;# 
   169  011B                     	;# 
   170  011E                     	;# 
   171  011F                     	;# 
   172  018C                     	;# 
   173  018D                     	;# 
   174  019D                     	;# 
   175  019E                     	;# 
   176                           
   177                           	psect	idataBANK0
   178  02E7                     __pidataBANK0:	
   179                           
   180                           ;initializer for _currentLedArray
   181  02E7  342F               	retlw	_ledArray0& (0+255)
   182                           
   183                           ;initializer for _nextLedArray
   184  02E8  3444               	retlw	_ledArray1& (0+255)
   185                           
   186                           	psect	idataBANK1
   187  0234                     __pidataBANK1:	
   188                           
   189                           ;initializer for _L_LIST
   190  0234  3426               	retlw	(_L_A-__stringbase)& (0+255)
   191  0235  342A               	retlw	(_L_B-__stringbase)& (0+255)
   192  0236  342E               	retlw	(_L_C-__stringbase)& (0+255)
   193  0237  3432               	retlw	(_L_D-__stringbase)& (0+255)
   194  0238  3436               	retlw	(_L_E-__stringbase)& (0+255)
   195  0239  343A               	retlw	(_L_F-__stringbase)& (0+255)
   196  023A  340D               	retlw	(_L_G-__stringbase)& (0+255)
   197  023B  343E               	retlw	(_L_H-__stringbase)& (0+255)
   198  023C  3442               	retlw	(_L_I-__stringbase)& (0+255)
   199  023D  3412               	retlw	(_L_J-__stringbase)& (0+255)
   200  023E  3417               	retlw	(_L_K-__stringbase)& (0+255)
   201  023F  3446               	retlw	(_L_L-__stringbase)& (0+255)
   202  0240  3401               	retlw	(_L_M-__stringbase)& (0+255)
   203  0241  341C               	retlw	(_L_N-__stringbase)& (0+255)
   204  0242  344A               	retlw	(_L_O-__stringbase)& (0+255)
   205  0243  344E               	retlw	(_L_P-__stringbase)& (0+255)
   206  0244  3421               	retlw	(_L_Q-__stringbase)& (0+255)
   207  0245  3452               	retlw	(_L_R-__stringbase)& (0+255)
   208  0246  3456               	retlw	(_L_S-__stringbase)& (0+255)
   209  0247  345A               	retlw	(_L_T-__stringbase)& (0+255)
   210  0248  345E               	retlw	(_L_U-__stringbase)& (0+255)
   211  0249  3462               	retlw	(_L_V-__stringbase)& (0+255)
   212  024A  3407               	retlw	(_L_W-__stringbase)& (0+255)
   213  024B  3466               	retlw	(_L_X-__stringbase)& (0+255)
   214  024C  346A               	retlw	(_L_Y-__stringbase)& (0+255)
   215  024D  346E               	retlw	(_L_Z-__stringbase)& (0+255)
   216                           
   217                           	psect	strings
   218  0032                     __pstrings:	
   219  0032                     stringtab:	
   220  0032                     __stringtab:	
   221  0032                     stringcode:	
   222                           ;	String table - string pointers are 1 byte each
   223                           
   224  0032                     stringdir:	
   225  0032  3000               	movlw	high stringdir
   226  0033  008A               	movwf	10
   227  0034  0804               	movf	4,w
   228  0035  0A84               	incf	4,f
   229  0036  0782               	addwf	2,f
   230  0037                     __stringbase:	
   231  0037  3400               	retlw	0
   232  0038                     __end_of__stringtab:	
   233  0038                     _L_M:	
   234  0038  3405               	retlw	5
   235  0039  341F               	retlw	31
   236  003A  3402               	retlw	2
   237  003B  3404               	retlw	4
   238  003C  3402               	retlw	2
   239  003D  341F               	retlw	31
   240  003E                     __end_of_L_M:	
   241  003E                     _L_W:	
   242  003E  3405               	retlw	5
   243  003F  341F               	retlw	31
   244  0040  3408               	retlw	8
   245  0041  3404               	retlw	4
   246  0042  3408               	retlw	8
   247  0043  341F               	retlw	31
   248  0044                     __end_of_L_W:	
   249  0044                     _L_G:	
   250  0044  3404               	retlw	4
   251  0045  340E               	retlw	14
   252  0046  3411               	retlw	17
   253  0047  3415               	retlw	21
   254  0048  340C               	retlw	12
   255  0049                     __end_of_L_G:	
   256  0049                     _L_J:	
   257  0049  3404               	retlw	4
   258  004A  340C               	retlw	12
   259  004B  3411               	retlw	17
   260  004C  340F               	retlw	15
   261  004D  3401               	retlw	1
   262  004E                     __end_of_L_J:	
   263  004E                     _L_K:	
   264  004E  3404               	retlw	4
   265  004F  341F               	retlw	31
   266  0050  3404               	retlw	4
   267  0051  340A               	retlw	10
   268  0052  3411               	retlw	17
   269  0053                     __end_of_L_K:	
   270  0053                     _L_N:	
   271  0053  3404               	retlw	4
   272  0054  341F               	retlw	31
   273  0055  3402               	retlw	2
   274  0056  3404               	retlw	4
   275  0057  341F               	retlw	31
   276  0058                     __end_of_L_N:	
   277  0058                     _L_Q:	
   278  0058  3404               	retlw	4
   279  0059  340E               	retlw	14
   280  005A  3411               	retlw	17
   281  005B  341E               	retlw	30
   282  005C  3410               	retlw	16
   283  005D                     __end_of_L_Q:	
   284  005D                     _L_A:	
   285  005D  3403               	retlw	3
   286  005E  341E               	retlw	30
   287  005F  3405               	retlw	5
   288  0060  341E               	retlw	30
   289  0061                     __end_of_L_A:	
   290  0061                     _L_B:	
   291  0061  3403               	retlw	3
   292  0062  341F               	retlw	31
   293  0063  3415               	retlw	21
   294  0064  340A               	retlw	10
   295  0065                     __end_of_L_B:	
   296  0065                     _L_C:	
   297  0065  3403               	retlw	3
   298  0066  340E               	retlw	14
   299  0067  3411               	retlw	17
   300  0068  3411               	retlw	17
   301  0069                     __end_of_L_C:	
   302  0069                     _L_D:	
   303  0069  3403               	retlw	3
   304  006A  341F               	retlw	31
   305  006B  3411               	retlw	17
   306  006C  340E               	retlw	14
   307  006D                     __end_of_L_D:	
   308  006D                     _L_E:	
   309  006D  3403               	retlw	3
   310  006E  341F               	retlw	31
   311  006F  3415               	retlw	21
   312  0070  3411               	retlw	17
   313  0071                     __end_of_L_E:	
   314  0071                     _L_F:	
   315  0071  3403               	retlw	3
   316  0072  341F               	retlw	31
   317  0073  3405               	retlw	5
   318  0074  3401               	retlw	1
   319  0075                     __end_of_L_F:	
   320  0075                     _L_H:	
   321  0075  3403               	retlw	3
   322  0076  341F               	retlw	31
   323  0077  3404               	retlw	4
   324  0078  341F               	retlw	31
   325  0079                     __end_of_L_H:	
   326  0079                     _L_I:	
   327  0079  3403               	retlw	3
   328  007A  3411               	retlw	17
   329  007B  341F               	retlw	31
   330  007C  3411               	retlw	17
   331  007D                     __end_of_L_I:	
   332  007D                     _L_L:	
   333  007D  3403               	retlw	3
   334  007E  341F               	retlw	31
   335  007F  3410               	retlw	16
   336  0080  3410               	retlw	16
   337  0081                     __end_of_L_L:	
   338  0081                     _L_O:	
   339  0081  3403               	retlw	3
   340  0082  340E               	retlw	14
   341  0083  3411               	retlw	17
   342  0084  340E               	retlw	14
   343  0085                     __end_of_L_O:	
   344  0085                     _L_P:	
   345  0085  3403               	retlw	3
   346  0086  341F               	retlw	31
   347  0087  3405               	retlw	5
   348  0088  3402               	retlw	2
   349  0089                     __end_of_L_P:	
   350  0089                     _L_R:	
   351  0089  3403               	retlw	3
   352  008A  341F               	retlw	31
   353  008B  3405               	retlw	5
   354  008C  341A               	retlw	26
   355  008D                     __end_of_L_R:	
   356  008D                     _L_S:	
   357  008D  3403               	retlw	3
   358  008E  3417               	retlw	23
   359  008F  3415               	retlw	21
   360  0090  341D               	retlw	29
   361  0091                     __end_of_L_S:	
   362  0091                     _L_T:	
   363  0091  3403               	retlw	3
   364  0092  3401               	retlw	1
   365  0093  341F               	retlw	31
   366  0094  3401               	retlw	1
   367  0095                     __end_of_L_T:	
   368  0095                     _L_U:	
   369  0095  3403               	retlw	3
   370  0096  341F               	retlw	31
   371  0097  3410               	retlw	16
   372  0098  341F               	retlw	31
   373  0099                     __end_of_L_U:	
   374  0099                     _L_V:	
   375  0099  3403               	retlw	3
   376  009A  340F               	retlw	15
   377  009B  3410               	retlw	16
   378  009C  340F               	retlw	15
   379  009D                     __end_of_L_V:	
   380  009D                     _L_X:	
   381  009D  3403               	retlw	3
   382  009E  341B               	retlw	27
   383  009F  3404               	retlw	4
   384  00A0  341B               	retlw	27
   385  00A1                     __end_of_L_X:	
   386  00A1                     _L_Y:	
   387  00A1  3403               	retlw	3
   388  00A2  3403               	retlw	3
   389  00A3  341C               	retlw	28
   390  00A4  3403               	retlw	3
   391  00A5                     __end_of_L_Y:	
   392  00A5                     _L_Z:	
   393  00A5  3403               	retlw	3
   394  00A6  3419               	retlw	25
   395  00A7  3415               	retlw	21
   396  00A8  3413               	retlw	19
   397  00A9                     __end_of_L_Z:	
   398  00A9                     _L_EXCL:	
   399  00A9  3401               	retlw	1
   400  00AA  3417               	retlw	23
   401  00AB                     __end_of_L_EXCL:	
   402  00AB                     _L_PERIOD:	
   403  00AB  3401               	retlw	1
   404  00AC  3410               	retlw	16
   405  00AD                     __end_of_L_PERIOD:	
   406  00AD                     _L_SPACE:	
   407  00AD  3401               	retlw	1
   408  00AE  3400               	retlw	0
   409  00AF                     __end_of_L_SPACE:	
   410  000B                     _INTCONbits	set	11
   411  0005                     _PORTA	set	5
   412  0006                     _PORTB	set	6
   413  0007                     _PORTC	set	7
   414  0081                     _OPTION_REGbits	set	129
   415  008F                     _OSCCONbits	set	143
   416  0085                     _TRISA	set	133
   417  0086                     _TRISB	set	134
   418  0087                     _TRISC	set	135
   419  0087                     _TRISCbits	set	135
   420  00AF                     __stringdata:	
   421  00AF                     STR_1:	
   422  00AF  3445               	retlw	69	;'E'
   423  00B0  3456               	retlw	86	;'V'
   424  00B1  3445               	retlw	69	;'E'
   425  00B2  3452               	retlw	82	;'R'
   426  00B3  3459               	retlw	89	;'Y'
   427  00B4  3454               	retlw	84	;'T'
   428  00B5  3448               	retlw	72	;'H'
   429  00B6  3449               	retlw	73	;'I'
   430  00B7  344E               	retlw	78	;'N'
   431  00B8  3447               	retlw	71	;'G'
   432  00B9  3420               	retlw	32	;' '
   433  00BA  3449               	retlw	73	;'I'
   434  00BB  3453               	retlw	83	;'S'
   435  00BC  3420               	retlw	32	;' '
   436  00BD  3441               	retlw	65	;'A'
   437  00BE  3457               	retlw	87	;'W'
   438  00BF  3445               	retlw	69	;'E'
   439  00C0  3453               	retlw	83	;'S'
   440  00C1  344F               	retlw	79	;'O'
   441  00C2  344D               	retlw	77	;'M'
   442  00C3  3445               	retlw	69	;'E'
   443  00C4  3421               	retlw	33	;'!'
   444  00C5  3421               	retlw	33	;'!'
   445  00C6  3420               	retlw	32	;' '
   446  00C7  3420               	retlw	32	;' '
   447  00C8  3420               	retlw	32	;' '
   448  00C9  3420               	retlw	32	;' '
   449  00CA  3420               	retlw	32	;' '
   450  00CB  3420               	retlw	32	;' '
   451  00CC  3420               	retlw	32	;' '
   452  00CD  3445               	retlw	69	;'E'
   453  00CE  3456               	retlw	86	;'V'
   454  00CF  3445               	retlw	69	;'E'
   455  00D0  3452               	retlw	82	;'R'
   456  00D1  3459               	retlw	89	;'Y'
   457  00D2  3454               	retlw	84	;'T'
   458  00D3  3448               	retlw	72	;'H'
   459  00D4  3449               	retlw	73	;'I'
   460  00D5  344E               	retlw	78	;'N'
   461  00D6  3447               	retlw	71	;'G'
   462  00D7  3420               	retlw	32	;' '
   463  00D8  3449               	retlw	73	;'I'
   464  00D9  3453               	retlw	83	;'S'
   465  00DA  3420               	retlw	32	;' '
   466  00DB  3443               	retlw	67	;'C'
   467  00DC  344F               	retlw	79	;'O'
   468  00DD  344F               	retlw	79	;'O'
   469  00DE  344C               	retlw	76	;'L'
   470  00DF  3420               	retlw	32	;' '
   471  00E0  3457               	retlw	87	;'W'
   472  00E1  3448               	retlw	72	;'H'
   473  00E2  3445               	retlw	69	;'E'
   474  00E3  344E               	retlw	78	;'N'
   475  00E4  3420               	retlw	32	;' '
   476  00E5  3459               	retlw	89	;'Y'
   477  00E6  344F               	retlw	79	;'O'
   478  00E7  3455               	retlw	85	;'U'
   479  00E8  3452               	retlw	82	;'R'
   480  00E9  3445               	retlw	69	;'E'
   481  00EA  3420               	retlw	32	;' '
   482  00EB  3450               	retlw	80	;'P'
   483  00EC  3441               	retlw	65	;'A'
   484  00ED  3452               	retlw	82	;'R'
   485  00EE  3454               	retlw	84	;'T'
   486  00EF  3420               	retlw	32	;' '
   487  00F0  344F               	retlw	79	;'O'
   488  00F1  3446               	retlw	70	;'F'
   489  00F2  3420               	retlw	32	;' '
   490  00F3  3441               	retlw	65	;'A'
   491  00F4  3420               	retlw	32	;' '
   492  00F5  3454               	retlw	84	;'T'
   493  00F6  3445               	retlw	69	;'E'
   494  00F7  3441               	retlw	65	;'A'
   495  00F8  344D               	retlw	77	;'M'
   496  00F9  3421               	retlw	33	;'!'
   497  00FA  3421               	retlw	33	;'!'
   498  00FB  3421               	retlw	33	;'!'
   499  00FC  3400               	retlw	0
   500  00FD                     __end_of__stringdata:	
   501                           
   502                           ; #config settings
   503  0000                     
   504                           	psect	cinit
   505  0013                     start_initialization:	
   506  0013                     __initialization:	
   507                           
   508                           ; Clear objects allocated to COMMON
   509  0013  01FA               	clrf	__pbssCOMMON& (0+127)
   510  0014  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
   511  0015  01FC               	clrf	(__pbssCOMMON+2)& (0+127)
   512                           
   513                           ; Clear objects allocated to BANK0
   514  0016  1383               	bcf	3,7	;select IRP bank0
   515  0017  3020               	movlw	low __pbssBANK0
   516  0018  0084               	movwf	4
   517  0019  3059               	movlw	low (__pbssBANK0+57)
   518  001A  118A  22DF  118A   	fcall	clear_ram0
   519                           
   520                           ; Initialize objects allocated to BANK1
   521  001D  30BA               	movlw	low (__pdataBANK1+26)
   522  001E  00FD               	movwf	btemp+-1
   523  001F  3002               	movlw	high __pidataBANK1
   524  0020  00FE               	movwf	btemp
   525  0021  3034               	movlw	low __pidataBANK1
   526  0022  00FF               	movwf	btemp+1
   527  0023  30A0               	movlw	low __pdataBANK1
   528  0024  0084               	movwf	4
   529  0025  118A  22B4  118A   	fcall	init_ram0
   530                           
   531                           ; Initialize objects allocated to BANK0
   532  0028  118A  22E7  118A   	fcall	__pidataBANK0	;fetch initializer
   533  002B  00E8               	movwf	__pdataBANK0& (0+127)
   534  002C  118A  22E8         	fcall	__pidataBANK0+1	;fetch initializer
   535  002E  00E9               	movwf	(__pdataBANK0+1)& (0+127)
   536  002F                     end_of_initialization:	
   537                           ;End of C runtime variable initialization code
   538                           
   539  002F                     __end_of__initialization:	
   540  002F  0183               	clrf	3
   541  0030  118A  29A8         	ljmp	_main	;jump to C main() function
   542                           
   543                           	psect	bssCOMMON
   544  007A                     __pbssCOMMON:	
   545  007A                     _PORTCGhost:	
   546  007A                     	ds	1
   547  007B                     _count:	
   548  007B                     	ds	1
   549  007C                     _ledRow:	
   550  007C                     	ds	1
   551                           
   552                           	psect	bssBANK0
   553  0020                     __pbssBANK0:	
   554  0020                     _myLedArray:	
   555  0020                     	ds	9
   556  0029                     _letterArrCount:	
   557  0029                     	ds	2
   558  002B                     _letterArrLoc:	
   559  002B                     	ds	2
   560  002D                     _letterArr:	
   561  002D                     	ds	1
   562  002E                     _startAgainFlag:	
   563  002E                     	ds	1
   564  002F                     _ledArray0:	
   565  002F                     	ds	21
   566  0044                     _ledArray1:	
   567  0044                     	ds	21
   568                           
   569                           	psect	dataBANK0
   570  0068                     __pdataBANK0:	
   571  0068                     _currentLedArray:	
   572  0068                     	ds	1
   573  0069                     _nextLedArray:	
   574  0069                     	ds	1
   575                           
   576                           	psect	dataBANK1
   577  00A0                     __pdataBANK1:	
   578  00A0                     _L_LIST:	
   579  00A0                     	ds	26
   580                           
   581                           	psect	clrtext
   582  02DF                     clear_ram0:	
   583                           ;	Called with FSR containing the base address, and
   584                           ;	W with the last address+1
   585                           
   586  02DF  0064               	clrwdt	;clear the watchdog before getting into this loop
   587  02E0                     clrloop0:	
   588  02E0  0180               	clrf	0	;clear RAM location pointed to by FSR
   589  02E1  0A84               	incf	4,f	;increment pointer
   590  02E2  0604               	xorwf	4,w	;XOR with final address
   591  02E3  1903               	btfsc	3,2	;have we reached the end yet?
   592  02E4  3400               	retlw	0	;all done for this memory range, return
   593  02E5  0604               	xorwf	4,w	;XOR again to restore value
   594  02E6  2AE0               	goto	clrloop0	;do the next byte
   595                           
   596                           	psect	inittext
   597  02B0                     init_fetch0:	
   598                           ;	Called with low address in FSR and high address in W
   599                           
   600  02B0  087E               	movf	126,w
   601  02B1  008A               	movwf	10
   602  02B2  087F               	movf	127,w
   603  02B3  0082               	movwf	2
   604  02B4                     init_ram0:	
   605                           ;Called with:
   606                           ;	high address of idata address in btemp 
   607                           ;	low address of idata address in btemp+1 
   608                           ;	low address of data in FSR
   609                           ;	high address + 1 of data in btemp-1
   610                           
   611  02B4  22B0  118A         	fcall	init_fetch0
   612  02B6  0080               	movwf	0
   613  02B7  0A84               	incf	4,f
   614  02B8  0804               	movf	4,w
   615  02B9  067D               	xorwf	125,w
   616  02BA  1903               	btfsc	3,2
   617  02BB  3400               	retlw	0
   618  02BC  0AFF               	incf	127,f
   619  02BD  1903               	btfsc	3,2
   620  02BE  0AFE               	incf	126,f
   621  02BF  2AB4               	goto	init_ram0
   622                           
   623                           	psect	cstackCOMMON
   624  0070                     __pcstackCOMMON:	
   625  0070                     ?_setup:	
   626  0070                     ?_ledDisplayString:	
   627                           ; 0 bytes @ 0x0
   628                           
   629  0070                     ?_ledScroll:	
   630                           ; 0 bytes @ 0x0
   631                           
   632  0070                     ?_ledSetupDisplay:	
   633                           ; 0 bytes @ 0x0
   634                           
   635  0070                     ?_ledIncrementRow:	
   636                           ; 0 bytes @ 0x0
   637                           
   638  0070                     ?_ledUpdateDisplay:	
   639                           ; 0 bytes @ 0x0
   640                           
   641  0070                     ?_ledUpdateArr:	
   642                           ; 0 bytes @ 0x0
   643                           
   644  0070                     ?_ledSwitchArray:	
   645                           ; 0 bytes @ 0x0
   646                           
   647  0070                     ?_ledSetData:	
   648                           ; 0 bytes @ 0x0
   649                           
   650  0070                     ??_ledSetData:	
   651                           ; 0 bytes @ 0x0
   652                           
   653  0070                     ?_isr:	
   654                           ; 0 bytes @ 0x0
   655                           
   656  0070                     ?_ledGetLetter:	
   657                           ; 0 bytes @ 0x0
   658                           
   659  0070                     ?_main:	
   660                           ; 1 bytes @ 0x0
   661                           
   662                           
   663                           ; 2 bytes @ 0x0
   664  0070                     	ds	1
   665  0071                     ledSetData@ledDisplayData:	
   666                           
   667                           ; 1 bytes @ 0x1
   668  0071                     	ds	1
   669  0072                     ??_ledUpdateDisplay:	
   670                           
   671                           ; 0 bytes @ 0x2
   672  0072                     	ds	1
   673  0073                     ledUpdateDisplay@update:	
   674                           
   675                           ; 1 bytes @ 0x3
   676  0073                     	ds	1
   677  0074                     ??_ledIncrementRow:	
   678                           
   679                           ; 0 bytes @ 0x4
   680  0074                     	ds	2
   681  0076                     ??_isr:	
   682                           
   683                           ; 0 bytes @ 0x6
   684  0076                     	ds	4
   685                           
   686                           	psect	cstackBANK0
   687  0059                     __pcstackBANK0:	
   688  0059                     ??_ledSetupDisplay:	
   689  0059                     ??_ledSwitchArray:	
   690                           ; 0 bytes @ 0x0
   691                           
   692  0059                     ??_ledGetLetter:	
   693                           ; 0 bytes @ 0x0
   694                           
   695  0059                     ledGetLetter@lett:	
   696                           ; 0 bytes @ 0x0
   697                           
   698                           
   699                           ; 1 bytes @ 0x0
   700  0059                     	ds	1
   701  005A                     ledSwitchArray@temp:	
   702  005A                     ledSetupDisplay@tmp_count:	
   703                           ; 1 bytes @ 0x1
   704                           
   705                           
   706                           ; 1 bytes @ 0x1
   707  005A                     	ds	1
   708  005B                     ??_setup:	
   709  005B                     ??_ledUpdateArr:	
   710                           ; 0 bytes @ 0x2
   711                           
   712                           
   713                           ; 0 bytes @ 0x2
   714  005B                     	ds	2
   715  005D                     ledUpdateArr@incrementLetter:	
   716                           
   717                           ; 1 bytes @ 0x4
   718  005D                     	ds	1
   719  005E                     ledUpdateArr@letterArrTmp:	
   720                           
   721                           ; 1 bytes @ 0x5
   722  005E                     	ds	1
   723  005F                     ledUpdateArr@letterTmp:	
   724                           
   725                           ; 1 bytes @ 0x6
   726  005F                     	ds	1
   727  0060                     ledUpdateArr@letterTmpLoc:	
   728                           
   729                           ; 2 bytes @ 0x7
   730  0060                     	ds	2
   731  0062                     ledUpdateArr@i:	
   732                           
   733                           ; 1 bytes @ 0x9
   734  0062                     	ds	1
   735  0063                     ??_ledDisplayString:	
   736  0063                     ??_ledScroll:	
   737                           ; 0 bytes @ 0xA
   738                           
   739                           
   740                           ; 0 bytes @ 0xA
   741  0063                     	ds	1
   742  0064                     ledDisplayString@str:	
   743                           
   744                           ; 1 bytes @ 0xB
   745  0064                     	ds	1
   746  0065                     ??_main:	
   747                           
   748                           ; 0 bytes @ 0xC
   749  0065                     	ds	1
   750  0066                     main@i:	
   751                           
   752                           ; 2 bytes @ 0xD
   753  0066                     	ds	2
   754                           
   755                           	psect	maintext
   756  01A8                     __pmaintext:	
   757 ;;
   758 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   759 ;;
   760 ;; *************** function _main *****************
   761 ;; Defined at:
   762 ;;		line 34 in file "LEDScroller.c"
   763 ;; Parameters:    Size  Location     Type
   764 ;;		None
   765 ;; Auto vars:     Size  Location     Type
   766 ;;  i               2   13[BANK0 ] unsigned int 
   767 ;; Return value:  Size  Location     Type
   768 ;;                  2  108[COMMON] int 
   769 ;; Registers used:
   770 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   771 ;; Tracked objects:
   772 ;;		On entry : 17F/0
   773 ;;		On exit  : 0/0
   774 ;;		Unchanged: 0/0
   775 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   776 ;;      Params:         0       0       0       0
   777 ;;      Locals:         0       2       0       0
   778 ;;      Temps:          0       1       0       0
   779 ;;      Totals:         0       3       0       0
   780 ;;Total ram usage:        3 bytes
   781 ;; Hardware stack levels required when called:    7
   782 ;; This function calls:
   783 ;;		_ledDisplayString
   784 ;;		_ledScroll
   785 ;;		_setup
   786 ;; This function is called by:
   787 ;;		Startup code after reset
   788 ;; This function uses a non-reentrant model
   789 ;;
   790                           
   791                           
   792                           ;psect for function _main
   793  01A8                     _main:	
   794                           
   795                           ;LEDScroller.c: 37: unsigned int i = 0;
   796                           
   797                           ;incstack = 0
   798                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   799  01A8  1283               	bcf	3,5	;RP0=0, select bank0
   800  01A9  1303               	bcf	3,6	;RP1=0, select bank0
   801  01AA  01E6               	clrf	main@i
   802  01AB  01E7               	clrf	main@i+1
   803                           
   804                           ;LEDScroller.c: 39: setup();
   805  01AC  118A  2277  118A   	fcall	_setup
   806                           
   807                           ;LEDScroller.c: 41: myLedArray[0] = 0x00;
   808  01AF  1283               	bcf	3,5	;RP0=0, select bank0
   809  01B0  1303               	bcf	3,6	;RP1=0, select bank0
   810  01B1  01A0               	clrf	_myLedArray
   811                           
   812                           ;LEDScroller.c: 42: myLedArray[1] = 0x00;
   813  01B2  01A1               	clrf	_myLedArray+1
   814                           
   815                           ;LEDScroller.c: 43: myLedArray[2] = 0x08;
   816  01B3  3008               	movlw	8
   817  01B4  00E5               	movwf	??_main
   818  01B5  0865               	movf	??_main,w
   819  01B6  00A2               	movwf	_myLedArray+2
   820                           
   821                           ;LEDScroller.c: 44: myLedArray[3] = 0x11;
   822  01B7  3011               	movlw	17
   823  01B8  00E5               	movwf	??_main
   824  01B9  0865               	movf	??_main,w
   825  01BA  00A3               	movwf	_myLedArray+3
   826                           
   827                           ;LEDScroller.c: 45: myLedArray[4] = 0x14;
   828  01BB  3014               	movlw	20
   829  01BC  00E5               	movwf	??_main
   830  01BD  0865               	movf	??_main,w
   831  01BE  00A4               	movwf	_myLedArray+4
   832                           
   833                           ;LEDScroller.c: 46: myLedArray[5] = 0x11;
   834  01BF  3011               	movlw	17
   835  01C0  00E5               	movwf	??_main
   836  01C1  0865               	movf	??_main,w
   837  01C2  00A5               	movwf	_myLedArray+5
   838                           
   839                           ;LEDScroller.c: 47: myLedArray[6] = 0x08;
   840  01C3  3008               	movlw	8
   841  01C4  00E5               	movwf	??_main
   842  01C5  0865               	movf	??_main,w
   843  01C6  00A6               	movwf	_myLedArray+6
   844                           
   845                           ;LEDScroller.c: 48: myLedArray[7] = 0x00;
   846  01C7  01A7               	clrf	_myLedArray+7
   847                           
   848                           ;LEDScroller.c: 49: myLedArray[8] = 0x00;
   849  01C8  01A8               	clrf	_myLedArray+8
   850                           
   851                           ;LEDScroller.c: 51: ledDisplayString("EVERYTHING IS AWESOME!!       EVERYTHING IS COOL W
      +                          HEN YOURE PART OF A TEAM!!!");
   852  01C9  3078               	movlw	(STR_1-__stringbase)& (0+255)
   853  01CA  118A  22C0  118A   	fcall	_ledDisplayString
   854  01CD                     l1145:	
   855                           ;LEDScroller.c: 53: while (1)
   856                           
   857                           
   858                           ;LEDScroller.c: 54: {
   859                           ;LEDScroller.c: 56: ledScroll();
   860  01CD  118A  224E  118A   	fcall	_ledScroll
   861                           
   862                           ;LEDScroller.c: 57: for (i = 0; i < 9000; i++);
   863  01D0  1283               	bcf	3,5	;RP0=0, select bank0
   864  01D1  1303               	bcf	3,6	;RP1=0, select bank0
   865  01D2  01E6               	clrf	main@i
   866  01D3  01E7               	clrf	main@i+1
   867  01D4                     L1:	
   868  01D4  3023               	movlw	35
   869  01D5  0267               	subwf	main@i+1,w
   870  01D6  3028               	movlw	40
   871  01D7  1903               	skipnz
   872  01D8  0266               	subwf	main@i,w
   873  01D9  1803               	btfsc	3,0
   874  01DA  29CD               	goto	l1145
   875  01DB  3001               	movlw	1
   876  01DC  07E6               	addwf	main@i,f
   877  01DD  1803               	skipnc
   878  01DE  0AE7               	incf	main@i+1,f
   879  01DF  3000               	movlw	0
   880  01E0  07E7               	addwf	main@i+1,f
   881  01E1  29D4               	goto	L1
   882  01E2                     __end_of_main:	
   883                           ;LEDScroller.c: 60: }
   884                           ;LEDScroller.c: 61: return 0;
   885                           ;	Return value of _main is never used
   886                           
   887                           
   888                           	psect	text1
   889  0277                     __ptext1:	
   890 ;; *************** function _setup *****************
   891 ;; Defined at:
   892 ;;		line 64 in file "LEDScroller.c"
   893 ;; Parameters:    Size  Location     Type
   894 ;;		None
   895 ;; Auto vars:     Size  Location     Type
   896 ;;		None
   897 ;; Return value:  Size  Location     Type
   898 ;;		None               void
   899 ;; Registers used:
   900 ;;		wreg, status,2, status,0, pclath, cstack
   901 ;; Tracked objects:
   902 ;;		On entry : 0/0
   903 ;;		On exit  : 0/0
   904 ;;		Unchanged: 0/0
   905 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   906 ;;      Params:         0       0       0       0
   907 ;;      Locals:         0       0       0       0
   908 ;;      Temps:          0       0       0       0
   909 ;;      Totals:         0       0       0       0
   910 ;;Total ram usage:        0 bytes
   911 ;; Hardware stack levels used:    1
   912 ;; Hardware stack levels required when called:    5
   913 ;; This function calls:
   914 ;;		_ledSetupDisplay
   915 ;; This function is called by:
   916 ;;		_main
   917 ;; This function uses a non-reentrant model
   918 ;;
   919                           
   920                           
   921                           ;psect for function _setup
   922  0277                     _setup:	
   923                           
   924                           ;LEDScroller.c: 66: OSCCONbits.IRCF = 0b111;
   925                           
   926                           ;incstack = 0
   927                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
   928  0277  3070               	movlw	112
   929  0278  1683               	bsf	3,5	;RP0=1, select bank1
   930  0279  1303               	bcf	3,6	;RP1=0, select bank1
   931  027A  048F               	iorwf	15,f	;volatile
   932                           
   933                           ;LEDScroller.c: 68: TRISA = 0x00;
   934  027B  0185               	clrf	5	;volatile
   935                           
   936                           ;LEDScroller.c: 69: TRISB = 0x00;
   937  027C  0186               	clrf	6	;volatile
   938                           
   939                           ;LEDScroller.c: 70: TRISC = 0x00;
   940  027D  0187               	clrf	7	;volatile
   941                           
   942                           ;LEDScroller.c: 72: ledSetupDisplay();
   943  027E  118A  21FE         	fcall	_ledSetupDisplay
   944                           
   945                           ;LEDScroller.c: 74: OPTION_REGbits.T0CS = 0;
   946  0280  1683               	bsf	3,5	;RP0=1, select bank1
   947  0281  1303               	bcf	3,6	;RP1=0, select bank1
   948  0282  1281               	bcf	1,5	;volatile
   949                           
   950                           ;LEDScroller.c: 75: OPTION_REGbits.PSA = 0;
   951  0283  1181               	bcf	1,3	;volatile
   952                           
   953                           ;LEDScroller.c: 76: OPTION_REGbits.PS = 0b000;
   954  0284  30F8               	movlw	-8
   955  0285  0581               	andwf	1,f	;volatile
   956                           
   957                           ;LEDScroller.c: 77: INTCONbits.T0IF = 0;
   958  0286  110B               	bcf	11,2	;volatile
   959                           
   960                           ;LEDScroller.c: 78: INTCONbits.T0IE = 1;
   961  0287  168B               	bsf	11,5	;volatile
   962                           
   963                           ;LEDScroller.c: 79: INTCONbits.GIE = 1;
   964  0288  178B               	bsf	11,7	;volatile
   965  0289  0008               	return
   966  028A                     __end_of_setup:	
   967                           
   968                           	psect	text2
   969  01FE                     __ptext2:	
   970 ;; *************** function _ledSetupDisplay *****************
   971 ;; Defined at:
   972 ;;		line 201 in file "led_array.c"
   973 ;; Parameters:    Size  Location     Type
   974 ;;		None
   975 ;; Auto vars:     Size  Location     Type
   976 ;;  tmp_count       1    1[BANK0 ] unsigned char 
   977 ;; Return value:  Size  Location     Type
   978 ;;		None               void
   979 ;; Registers used:
   980 ;;		wreg, status,2, status,0
   981 ;; Tracked objects:
   982 ;;		On entry : 0/0
   983 ;;		On exit  : 0/0
   984 ;;		Unchanged: 0/0
   985 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   986 ;;      Params:         0       0       0       0
   987 ;;      Locals:         0       1       0       0
   988 ;;      Temps:          0       1       0       0
   989 ;;      Totals:         0       2       0       0
   990 ;;Total ram usage:        2 bytes
   991 ;; Hardware stack levels used:    1
   992 ;; Hardware stack levels required when called:    4
   993 ;; This function calls:
   994 ;;		Nothing
   995 ;; This function is called by:
   996 ;;		_setup
   997 ;; This function uses a non-reentrant model
   998 ;;
   999                           
  1000                           
  1001                           ;psect for function _ledSetupDisplay
  1002  01FE                     _ledSetupDisplay:	
  1003                           
  1004                           ;led_array.c: 203: char tmp_count;
  1005                           ;led_array.c: 204: for (tmp_count = 0; tmp_count < 100; tmp_count++)
  1006                           
  1007                           ;incstack = 0
  1008                           ; Regs used in _ledSetupDisplay: [wreg+status,2+status,0]
  1009  01FE  1283               	bcf	3,5	;RP0=0, select bank0
  1010  01FF  1303               	bcf	3,6	;RP1=0, select bank0
  1011  0200  01DA               	clrf	ledSetupDisplay@tmp_count
  1012  0201  3064               	movlw	100
  1013  0202  025A               	subwf	ledSetupDisplay@tmp_count,w
  1014  0203  1803               	btfsc	3,0
  1015  0204  2A11               	goto	l993
  1016  0205                     l987:	
  1017                           
  1018                           ;led_array.c: 205: {
  1019                           ;led_array.c: 206: PORTC = 0x01;
  1020  0205  3001               	movlw	1
  1021  0206  0087               	movwf	7	;volatile
  1022                           
  1023                           ;led_array.c: 207: PORTC = 0x02;
  1024  0207  3002               	movlw	2
  1025  0208  0087               	movwf	7	;volatile
  1026  0209  3001               	movlw	1
  1027  020A  00D9               	movwf	??_ledSetupDisplay
  1028  020B  0859               	movf	??_ledSetupDisplay,w
  1029  020C  07DA               	addwf	ledSetupDisplay@tmp_count,f
  1030  020D  3064               	movlw	100
  1031  020E  025A               	subwf	ledSetupDisplay@tmp_count,w
  1032  020F  1C03               	skipc
  1033  0210  2A05               	goto	l987
  1034  0211                     l993:	
  1035                           
  1036                           ;led_array.c: 208: }
  1037                           ;led_array.c: 209: PORTC = 0x05;
  1038  0211  3005               	movlw	5
  1039  0212  0087               	movwf	7	;volatile
  1040                           
  1041                           ;led_array.c: 210: PORTC = 0x06;
  1042  0213  3006               	movlw	6
  1043  0214  0087               	movwf	7	;volatile
  1044                           
  1045                           ;led_array.c: 211: TRISCbits.TRISC2 = 1;
  1046  0215  1683               	bsf	3,5	;RP0=1, select bank1
  1047  0216  1303               	bcf	3,6	;RP1=0, select bank1
  1048  0217  1507               	bsf	7,2	;volatile
  1049  0218  0008               	return
  1050  0219                     __end_of_ledSetupDisplay:	
  1051                           
  1052                           	psect	text3
  1053  024E                     __ptext3:	
  1054 ;; *************** function _ledScroll *****************
  1055 ;; Defined at:
  1056 ;;		line 23 in file "led_array.c"
  1057 ;; Parameters:    Size  Location     Type
  1058 ;;		None
  1059 ;; Auto vars:     Size  Location     Type
  1060 ;;		None
  1061 ;; Return value:  Size  Location     Type
  1062 ;;		None               void
  1063 ;; Registers used:
  1064 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1065 ;; Tracked objects:
  1066 ;;		On entry : 0/0
  1067 ;;		On exit  : 0/0
  1068 ;;		Unchanged: 0/0
  1069 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1070 ;;      Params:         0       0       0       0
  1071 ;;      Locals:         0       0       0       0
  1072 ;;      Temps:          0       0       0       0
  1073 ;;      Totals:         0       0       0       0
  1074 ;;Total ram usage:        0 bytes
  1075 ;; Hardware stack levels used:    1
  1076 ;; Hardware stack levels required when called:    6
  1077 ;; This function calls:
  1078 ;;		_ledUpdateArr
  1079 ;; This function is called by:
  1080 ;;		_main
  1081 ;; This function uses a non-reentrant model
  1082 ;;
  1083                           
  1084                           
  1085                           ;psect for function _ledScroll
  1086  024E                     _ledScroll:	
  1087                           
  1088                           ;led_array.c: 25: letterArrLoc++;
  1089                           
  1090                           ;incstack = 0
  1091                           ; Regs used in _ledScroll: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1092  024E  3001               	movlw	1
  1093  024F  1283               	bcf	3,5	;RP0=0, select bank0
  1094  0250  1303               	bcf	3,6	;RP1=0, select bank0
  1095  0251  07AB               	addwf	_letterArrLoc,f
  1096  0252  1803               	skipnc
  1097  0253  0AAC               	incf	_letterArrLoc+1,f
  1098  0254  3000               	movlw	0
  1099  0255  07AC               	addwf	_letterArrLoc+1,f
  1100                           
  1101                           ;led_array.c: 26: if (startAgainFlag)
  1102  0256  082E               	movf	_startAgainFlag,w
  1103  0257  1903               	btfsc	3,2
  1104  0258  2A60               	goto	l1109
  1105                           
  1106                           ;led_array.c: 27: {
  1107                           ;led_array.c: 28: startAgainFlag = 0;
  1108  0259  01AE               	clrf	_startAgainFlag
  1109                           
  1110                           ;led_array.c: 29: letterArrCount = 0;
  1111  025A  01A9               	clrf	_letterArrCount
  1112  025B  01AA               	clrf	_letterArrCount+1
  1113                           
  1114                           ;led_array.c: 30: letterArrLoc = 2-21;
  1115  025C  30ED               	movlw	237
  1116  025D  00AB               	movwf	_letterArrLoc
  1117  025E  30FF               	movlw	255
  1118  025F  00AC               	movwf	_letterArrLoc+1
  1119  0260                     l1109:	
  1120                           
  1121                           ;led_array.c: 31: }
  1122                           ;led_array.c: 32: ledUpdateArr();
  1123  0260  118A  20FD         	fcall	_ledUpdateArr
  1124  0262  0008               	return
  1125  0263                     __end_of_ledScroll:	
  1126                           
  1127                           	psect	text4
  1128  02C0                     __ptext4:	
  1129 ;; *************** function _ledDisplayString *****************
  1130 ;; Defined at:
  1131 ;;		line 162 in file "led_array.c"
  1132 ;; Parameters:    Size  Location     Type
  1133 ;;  str             1    wreg     PTR const unsigned char 
  1134 ;;		 -> STR_1(78), 
  1135 ;; Auto vars:     Size  Location     Type
  1136 ;;  str             1   11[BANK0 ] PTR const unsigned char 
  1137 ;;		 -> STR_1(78), 
  1138 ;; Return value:  Size  Location     Type
  1139 ;;		None               void
  1140 ;; Registers used:
  1141 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1142 ;; Tracked objects:
  1143 ;;		On entry : 0/0
  1144 ;;		On exit  : 0/0
  1145 ;;		Unchanged: 0/0
  1146 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1147 ;;      Params:         0       0       0       0
  1148 ;;      Locals:         0       1       0       0
  1149 ;;      Temps:          0       1       0       0
  1150 ;;      Totals:         0       2       0       0
  1151 ;;Total ram usage:        2 bytes
  1152 ;; Hardware stack levels used:    1
  1153 ;; Hardware stack levels required when called:    6
  1154 ;; This function calls:
  1155 ;;		_ledUpdateArr
  1156 ;; This function is called by:
  1157 ;;		_main
  1158 ;; This function uses a non-reentrant model
  1159 ;;
  1160                           
  1161                           
  1162                           ;psect for function _ledDisplayString
  1163  02C0                     _ledDisplayString:	
  1164                           
  1165                           ;incstack = 0
  1166                           ; Regs used in _ledDisplayString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1167                           ;ledDisplayString@str stored from wreg
  1168  02C0  1283               	bcf	3,5	;RP0=0, select bank0
  1169  02C1  1303               	bcf	3,6	;RP1=0, select bank0
  1170  02C2  00E4               	movwf	ledDisplayString@str
  1171                           
  1172                           ;led_array.c: 164: letterArr = str;
  1173  02C3  0864               	movf	ledDisplayString@str,w
  1174  02C4  00E3               	movwf	??_ledDisplayString
  1175  02C5  0863               	movf	??_ledDisplayString,w
  1176  02C6  00AD               	movwf	_letterArr
  1177                           
  1178                           ;led_array.c: 165: letterArrCount = 0;
  1179  02C7  01A9               	clrf	_letterArrCount
  1180  02C8  01AA               	clrf	_letterArrCount+1
  1181                           
  1182                           ;led_array.c: 166: letterArrLoc = 1 - 21;
  1183  02C9  30EC               	movlw	236
  1184  02CA  00AB               	movwf	_letterArrLoc
  1185  02CB  30FF               	movlw	255
  1186  02CC  00AC               	movwf	_letterArrLoc+1
  1187                           
  1188                           ;led_array.c: 168: ledUpdateArr();
  1189  02CD  118A  20FD         	fcall	_ledUpdateArr
  1190  02CF  0008               	return
  1191  02D0                     __end_of_ledDisplayString:	
  1192                           
  1193                           	psect	text5
  1194  00FD                     __ptext5:	
  1195 ;; *************** function _ledUpdateArr *****************
  1196 ;; Defined at:
  1197 ;;		line 53 in file "led_array.c"
  1198 ;; Parameters:    Size  Location     Type
  1199 ;;		None
  1200 ;; Auto vars:     Size  Location     Type
  1201 ;;  letterTmpLoc    2    7[BANK0 ] int 
  1202 ;;  i               1    9[BANK0 ] char 
  1203 ;;  letterTmp       1    6[BANK0 ] PTR const unsigned char 
  1204 ;;		 -> L_EXCL(2), L_PERIOD(2), L_SPACE(2), L_Z(4), 
  1205 ;;		 -> L_Y(4), L_X(4), L_W(6), L_V(4), 
  1206 ;;		 -> L_U(4), L_T(4), L_S(4), L_R(4), 
  1207 ;;		 -> L_Q(5), L_P(4), L_O(4), L_N(5), 
  1208 ;;		 -> L_M(6), L_L(4), L_K(5), L_J(5), 
  1209 ;;		 -> L_I(4), L_H(4), L_G(5), L_F(4), 
  1210 ;;		 -> L_E(4), L_D(4), L_C(4), L_B(4), 
  1211 ;;		 -> L_A(4), 
  1212 ;;  letterArrTmp    1    5[BANK0 ] PTR const unsigned char 
  1213 ;;		 -> STR_1(78), ROM(4096), 
  1214 ;;  incrementLet    1    4[BANK0 ] unsigned char 
  1215 ;; Return value:  Size  Location     Type
  1216 ;;		None               void
  1217 ;; Registers used:
  1218 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1219 ;; Tracked objects:
  1220 ;;		On entry : 0/0
  1221 ;;		On exit  : 0/0
  1222 ;;		Unchanged: 0/0
  1223 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1224 ;;      Params:         0       0       0       0
  1225 ;;      Locals:         0       6       0       0
  1226 ;;      Temps:          0       2       0       0
  1227 ;;      Totals:         0       8       0       0
  1228 ;;Total ram usage:        8 bytes
  1229 ;; Hardware stack levels used:    1
  1230 ;; Hardware stack levels required when called:    5
  1231 ;; This function calls:
  1232 ;;		_ledGetLetter
  1233 ;;		_ledSwitchArray
  1234 ;; This function is called by:
  1235 ;;		_ledScroll
  1236 ;;		_ledDisplayString
  1237 ;; This function uses a non-reentrant model
  1238 ;;
  1239                           
  1240                           
  1241                           ;psect for function _ledUpdateArr
  1242  00FD                     _ledUpdateArr:	
  1243                           
  1244                           ;led_array.c: 55: string letterArrTmp = letterArr + letterArrCount;
  1245                           
  1246                           ;incstack = 0
  1247                           ; Regs used in _ledUpdateArr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1248  00FD  1283               	bcf	3,5	;RP0=0, select bank0
  1249  00FE  1303               	bcf	3,6	;RP1=0, select bank0
  1250  00FF  0829               	movf	_letterArrCount,w
  1251  0100  072D               	addwf	_letterArr,w
  1252  0101  00DB               	movwf	??_ledUpdateArr
  1253  0102  085B               	movf	??_ledUpdateArr,w
  1254  0103  00DE               	movwf	ledUpdateArr@letterArrTmp
  1255                           
  1256                           ;led_array.c: 56: letter letterTmp = ledGetLetter(*letterArrTmp);
  1257  0104  085E               	movf	ledUpdateArr@letterArrTmp,w
  1258  0105  0084               	movwf	4
  1259  0106  118A  2032  118A   	fcall	stringdir
  1260  0109  118A  21E2  118A   	fcall	_ledGetLetter
  1261  010C  1283               	bcf	3,5	;RP0=0, select bank0
  1262  010D  1303               	bcf	3,6	;RP1=0, select bank0
  1263  010E  00DB               	movwf	??_ledUpdateArr
  1264  010F  085B               	movf	??_ledUpdateArr,w
  1265  0110  00DF               	movwf	ledUpdateArr@letterTmp
  1266                           
  1267                           ;led_array.c: 57: int letterTmpLoc = 0;
  1268  0111  01E0               	clrf	ledUpdateArr@letterTmpLoc
  1269  0112  01E1               	clrf	ledUpdateArr@letterTmpLoc+1
  1270                           
  1271                           ;led_array.c: 58: signed char i;
  1272                           ;led_array.c: 59: unsigned char incrementLetter = 0;
  1273  0113  01DD               	clrf	ledUpdateArr@incrementLetter
  1274                           
  1275                           ;led_array.c: 61: letterTmpLoc = letterArrLoc;
  1276  0114  082C               	movf	_letterArrLoc+1,w
  1277  0115  01E1               	clrf	ledUpdateArr@letterTmpLoc+1
  1278  0116  07E1               	addwf	ledUpdateArr@letterTmpLoc+1,f
  1279  0117  082B               	movf	_letterArrLoc,w
  1280  0118  01E0               	clrf	ledUpdateArr@letterTmpLoc
  1281  0119  07E0               	addwf	ledUpdateArr@letterTmpLoc,f
  1282                           
  1283                           ;led_array.c: 106: for (i = 21-1; i >= 0; i--)
  1284  011A  3014               	movlw	20
  1285  011B  00DB               	movwf	??_ledUpdateArr
  1286  011C  085B               	movf	??_ledUpdateArr,w
  1287  011D  00E2               	movwf	ledUpdateArr@i
  1288  011E  1BE2               	btfsc	ledUpdateArr@i,7
  1289  011F  2997               	goto	l1063
  1290  0120                     l239:	
  1291                           
  1292                           ;led_array.c: 107: {
  1293                           ;led_array.c: 108: if (letterTmpLoc < 0)
  1294  0120  1BE1               	btfsc	ledUpdateArr@letterTmpLoc+1,7
  1295  0121  293C               	goto	L2
  1296                           
  1297                           ;led_array.c: 113: else
  1298                           ;led_array.c: 114: {
  1299                           ;led_array.c: 115: if (*letterArrTmp == '\0')
  1300                           
  1301                           ;led_array.c: 112: }
  1302                           
  1303                           ;led_array.c: 111: letterTmpLoc++;
  1304                           
  1305                           ;led_array.c: 109: {
  1306                           ;led_array.c: 110: nextLedArray[i] = (unsigned char) 0;
  1307  0122  085E               	movf	ledUpdateArr@letterArrTmp,w
  1308  0123  0084               	movwf	4
  1309  0124  118A  2032  118A   	fcall	stringdir
  1310  0127  3800               	iorlw	0
  1311  0128  1D03               	skipz
  1312  0129  2938               	goto	l1035
  1313                           
  1314                           ;led_array.c: 116: {
  1315                           ;led_array.c: 117: if (i == 21-1)
  1316  012A  0862               	movf	ledUpdateArr@i,w
  1317  012B  3A14               	xorlw	20
  1318  012C  1D03               	skipz
  1319  012D  2930               	goto	l1033
  1320                           
  1321                           ;led_array.c: 118: {
  1322                           ;led_array.c: 119: startAgainFlag = 1;
  1323  012E  01AE               	clrf	_startAgainFlag
  1324  012F  0AAE               	incf	_startAgainFlag,f
  1325  0130                     l1033:	
  1326                           
  1327                           ;led_array.c: 120: }
  1328                           ;led_array.c: 121: nextLedArray[i] = '\0';
  1329  0130  0862               	movf	ledUpdateArr@i,w
  1330  0131  0769               	addwf	_nextLedArray,w
  1331  0132  00DB               	movwf	??_ledUpdateArr
  1332  0133  085B               	movf	??_ledUpdateArr,w
  1333  0134  0084               	movwf	4
  1334  0135  1383               	bcf	3,7	;select IRP bank0
  1335  0136  0180               	clrf	0
  1336                           
  1337                           ;led_array.c: 122: }
  1338  0137  2991               	goto	l1059
  1339  0138                     l1035:	
  1340                           
  1341                           ;led_array.c: 123: else if (letterTmpLoc == 0)
  1342  0138  0861               	movf	ledUpdateArr@letterTmpLoc+1,w
  1343  0139  0460               	iorwf	ledUpdateArr@letterTmpLoc,w
  1344  013A  1D03               	skipz
  1345  013B  2944               	goto	l1041
  1346  013C                     L2:	
  1347                           
  1348                           ;led_array.c: 124: {
  1349                           ;led_array.c: 125: nextLedArray[i] = '\0';
  1350  013C  0862               	movf	ledUpdateArr@i,w
  1351  013D  0769               	addwf	_nextLedArray,w
  1352  013E  00DB               	movwf	??_ledUpdateArr
  1353  013F  085B               	movf	??_ledUpdateArr,w
  1354  0140  0084               	movwf	4
  1355  0141  1383               	bcf	3,7	;select IRP bank0
  1356  0142  0180               	clrf	0
  1357  0143  298B               	goto	l1057
  1358  0144                     l1041:	
  1359                           ;led_array.c: 127: }
  1360                           
  1361                           ;led_array.c: 126: letterTmpLoc++;
  1362                           
  1363                           
  1364                           ;led_array.c: 128: else if (letterTmpLoc == letterTmp[0])
  1365  0144  085F               	movf	ledUpdateArr@letterTmp,w
  1366  0145  0084               	movwf	4
  1367  0146  118A  2032  118A   	fcall	stringdir
  1368  0149  00DB               	movwf	??_ledUpdateArr
  1369  014A  01DC               	clrf	??_ledUpdateArr+1
  1370  014B  0861               	movf	ledUpdateArr@letterTmpLoc+1,w
  1371  014C  065C               	xorwf	??_ledUpdateArr+1,w
  1372  014D  1D03               	skipz
  1373  014E  2951               	goto	u345
  1374  014F  0860               	movf	ledUpdateArr@letterTmpLoc,w
  1375  0150  065B               	xorwf	??_ledUpdateArr,w
  1376  0151                     u345:	
  1377  0151  1D03               	skipz
  1378  0152  297C               	goto	l1055
  1379                           
  1380                           ;led_array.c: 129: {
  1381                           ;led_array.c: 130: nextLedArray[i] = letterTmp[letterTmpLoc];
  1382  0153  0860               	movf	ledUpdateArr@letterTmpLoc,w
  1383  0154  075F               	addwf	ledUpdateArr@letterTmp,w
  1384  0155  0084               	movwf	4
  1385  0156  118A  2032  118A   	fcall	stringdir
  1386  0159  00DB               	movwf	??_ledUpdateArr
  1387  015A  0862               	movf	ledUpdateArr@i,w
  1388  015B  0769               	addwf	_nextLedArray,w
  1389  015C  00DC               	movwf	??_ledUpdateArr+1
  1390  015D  085C               	movf	??_ledUpdateArr+1,w
  1391  015E  0084               	movwf	4
  1392  015F  085B               	movf	??_ledUpdateArr,w
  1393  0160  1383               	bcf	3,7	;select IRP bank0
  1394  0161  0080               	movwf	0
  1395                           
  1396                           ;led_array.c: 132: letterTmpLoc = 0;
  1397  0162  01E0               	clrf	ledUpdateArr@letterTmpLoc
  1398  0163  01E1               	clrf	ledUpdateArr@letterTmpLoc+1
  1399                           
  1400                           ;led_array.c: 133: letterArrTmp++;
  1401  0164  3001               	movlw	1
  1402  0165  00DB               	movwf	??_ledUpdateArr
  1403  0166  085B               	movf	??_ledUpdateArr,w
  1404  0167  07DE               	addwf	ledUpdateArr@letterArrTmp,f
  1405                           
  1406                           ;led_array.c: 134: letterTmp = ledGetLetter(*letterArrTmp);
  1407  0168  085E               	movf	ledUpdateArr@letterArrTmp,w
  1408  0169  0084               	movwf	4
  1409  016A  118A  2032  118A   	fcall	stringdir
  1410  016D  118A  21E2  118A   	fcall	_ledGetLetter
  1411  0170  1283               	bcf	3,5	;RP0=0, select bank0
  1412  0171  1303               	bcf	3,6	;RP1=0, select bank0
  1413  0172  00DB               	movwf	??_ledUpdateArr
  1414  0173  085B               	movf	??_ledUpdateArr,w
  1415  0174  00DF               	movwf	ledUpdateArr@letterTmp
  1416                           
  1417                           ;led_array.c: 135: if (i == 21-1)
  1418  0175  0862               	movf	ledUpdateArr@i,w
  1419  0176  3A14               	xorlw	20
  1420  0177  1D03               	skipz
  1421  0178  2991               	goto	l1059
  1422                           
  1423                           ;led_array.c: 136: {
  1424                           ;led_array.c: 137: incrementLetter = 1;
  1425  0179  01DD               	clrf	ledUpdateArr@incrementLetter
  1426  017A  0ADD               	incf	ledUpdateArr@incrementLetter,f
  1427                           
  1428                           ;led_array.c: 138: }
  1429                           ;led_array.c: 139: }
  1430  017B  2991               	goto	l1059
  1431  017C                     l1055:	
  1432                           
  1433                           ;led_array.c: 140: else
  1434                           ;led_array.c: 141: {
  1435                           ;led_array.c: 142: nextLedArray[i] = letterTmp[letterTmpLoc++];
  1436  017C  0860               	movf	ledUpdateArr@letterTmpLoc,w
  1437  017D  075F               	addwf	ledUpdateArr@letterTmp,w
  1438  017E  0084               	movwf	4
  1439  017F  118A  2032  118A   	fcall	stringdir
  1440  0182  00DB               	movwf	??_ledUpdateArr
  1441  0183  0862               	movf	ledUpdateArr@i,w
  1442  0184  0769               	addwf	_nextLedArray,w
  1443  0185  00DC               	movwf	??_ledUpdateArr+1
  1444  0186  085C               	movf	??_ledUpdateArr+1,w
  1445  0187  0084               	movwf	4
  1446  0188  085B               	movf	??_ledUpdateArr,w
  1447  0189  1383               	bcf	3,7	;select IRP bank0
  1448  018A  0080               	movwf	0
  1449  018B                     l1057:	
  1450  018B  3001               	movlw	1
  1451  018C  07E0               	addwf	ledUpdateArr@letterTmpLoc,f
  1452  018D  1803               	skipnc
  1453  018E  0AE1               	incf	ledUpdateArr@letterTmpLoc+1,f
  1454  018F  3000               	movlw	0
  1455  0190  07E1               	addwf	ledUpdateArr@letterTmpLoc+1,f
  1456  0191                     l1059:	
  1457  0191  30FF               	movlw	-1
  1458  0192  00DB               	movwf	??_ledUpdateArr
  1459  0193  085B               	movf	??_ledUpdateArr,w
  1460  0194  07E2               	addwf	ledUpdateArr@i,f
  1461  0195  1FE2               	btfss	ledUpdateArr@i,7
  1462  0196  2920               	goto	l239
  1463  0197                     l1063:	
  1464                           
  1465                           ;led_array.c: 143: }
  1466                           ;led_array.c: 146: }
  1467                           ;led_array.c: 147: }
  1468                           ;led_array.c: 148: if (incrementLetter)
  1469  0197  085D               	movf	ledUpdateArr@incrementLetter,w
  1470  0198  1903               	btfsc	3,2
  1471  0199  29A5               	goto	l1071
  1472                           
  1473                           ;led_array.c: 149: {
  1474                           ;led_array.c: 150: incrementLetter = 0;
  1475  019A  01DD               	clrf	ledUpdateArr@incrementLetter
  1476                           
  1477                           ;led_array.c: 151: letterArrCount++;
  1478  019B  3001               	movlw	1
  1479  019C  07A9               	addwf	_letterArrCount,f
  1480  019D  1803               	skipnc
  1481  019E  0AAA               	incf	_letterArrCount+1,f
  1482  019F  3000               	movlw	0
  1483  01A0  07AA               	addwf	_letterArrCount+1,f
  1484                           
  1485                           ;led_array.c: 152: letterArrLoc = -1;
  1486  01A1  30FF               	movlw	255
  1487  01A2  00AB               	movwf	_letterArrLoc
  1488  01A3  30FF               	movlw	255
  1489  01A4  00AC               	movwf	_letterArrLoc+1
  1490  01A5                     l1071:	
  1491                           
  1492                           ;led_array.c: 153: }
  1493                           ;led_array.c: 154: ledSwitchArray();
  1494  01A5  118A  22D0         	fcall	_ledSwitchArray
  1495  01A7  0008               	return
  1496  01A8                     __end_of_ledUpdateArr:	
  1497                           
  1498                           	psect	text6
  1499  02D0                     __ptext6:	
  1500 ;; *************** function _ledSwitchArray *****************
  1501 ;; Defined at:
  1502 ;;		line 175 in file "led_array.c"
  1503 ;; Parameters:    Size  Location     Type
  1504 ;;		None
  1505 ;; Auto vars:     Size  Location     Type
  1506 ;;  temp            1    1[BANK0 ] PTR unsigned char 
  1507 ;;		 -> ledArray1(21), ledArray0(21), 
  1508 ;; Return value:  Size  Location     Type
  1509 ;;		None               void
  1510 ;; Registers used:
  1511 ;;		wreg
  1512 ;; Tracked objects:
  1513 ;;		On entry : 0/0
  1514 ;;		On exit  : 0/0
  1515 ;;		Unchanged: 0/0
  1516 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1517 ;;      Params:         0       0       0       0
  1518 ;;      Locals:         0       1       0       0
  1519 ;;      Temps:          0       1       0       0
  1520 ;;      Totals:         0       2       0       0
  1521 ;;Total ram usage:        2 bytes
  1522 ;; Hardware stack levels used:    1
  1523 ;; Hardware stack levels required when called:    4
  1524 ;; This function calls:
  1525 ;;		Nothing
  1526 ;; This function is called by:
  1527 ;;		_ledUpdateArr
  1528 ;; This function uses a non-reentrant model
  1529 ;;
  1530                           
  1531                           
  1532                           ;psect for function _ledSwitchArray
  1533  02D0                     _ledSwitchArray:	
  1534                           
  1535                           ;led_array.c: 177: unsigned char* temp = currentLedArray;
  1536                           
  1537                           ;incstack = 0
  1538                           ; Regs used in _ledSwitchArray: [wreg]
  1539  02D0  1283               	bcf	3,5	;RP0=0, select bank0
  1540  02D1  1303               	bcf	3,6	;RP1=0, select bank0
  1541  02D2  0868               	movf	_currentLedArray,w
  1542  02D3  00D9               	movwf	??_ledSwitchArray
  1543  02D4  0859               	movf	??_ledSwitchArray,w
  1544  02D5  00DA               	movwf	ledSwitchArray@temp
  1545                           
  1546                           ;led_array.c: 178: currentLedArray = nextLedArray;
  1547  02D6  0869               	movf	_nextLedArray,w
  1548  02D7  00D9               	movwf	??_ledSwitchArray
  1549  02D8  0859               	movf	??_ledSwitchArray,w
  1550  02D9  00E8               	movwf	_currentLedArray
  1551                           
  1552                           ;led_array.c: 179: nextLedArray = temp;
  1553  02DA  085A               	movf	ledSwitchArray@temp,w
  1554  02DB  00D9               	movwf	??_ledSwitchArray
  1555  02DC  0859               	movf	??_ledSwitchArray,w
  1556  02DD  00E9               	movwf	_nextLedArray
  1557  02DE  0008               	return
  1558  02DF                     __end_of_ledSwitchArray:	
  1559                           
  1560                           	psect	text7
  1561  01E2                     __ptext7:	
  1562 ;; *************** function _ledGetLetter *****************
  1563 ;; Defined at:
  1564 ;;		line 38 in file "led_array.c"
  1565 ;; Parameters:    Size  Location     Type
  1566 ;;  lett            1    wreg     const unsigned char 
  1567 ;; Auto vars:     Size  Location     Type
  1568 ;;  lett            1    0[BANK0 ] const unsigned char 
  1569 ;; Return value:  Size  Location     Type
  1570 ;;                  1    wreg      PTR const unsigned char 
  1571 ;; Registers used:
  1572 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1573 ;; Tracked objects:
  1574 ;;		On entry : 0/0
  1575 ;;		On exit  : 0/0
  1576 ;;		Unchanged: 0/0
  1577 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1578 ;;      Params:         0       0       0       0
  1579 ;;      Locals:         0       1       0       0
  1580 ;;      Temps:          0       0       0       0
  1581 ;;      Totals:         0       1       0       0
  1582 ;;Total ram usage:        1 bytes
  1583 ;; Hardware stack levels used:    1
  1584 ;; Hardware stack levels required when called:    4
  1585 ;; This function calls:
  1586 ;;		Nothing
  1587 ;; This function is called by:
  1588 ;;		_ledUpdateArr
  1589 ;; This function uses a non-reentrant model
  1590 ;;
  1591                           
  1592                           
  1593                           ;psect for function _ledGetLetter
  1594  01E2                     _ledGetLetter:	
  1595                           
  1596                           ;incstack = 0
  1597                           ; Regs used in _ledGetLetter: [wreg-fsr0h+status,2+status,0]
  1598                           ;ledGetLetter@lett stored from wreg
  1599  01E2  1283               	bcf	3,5	;RP0=0, select bank0
  1600  01E3  1303               	bcf	3,6	;RP1=0, select bank0
  1601  01E4  00D9               	movwf	ledGetLetter@lett
  1602                           
  1603                           ;led_array.c: 40: if (lett == ' ')
  1604  01E5  0859               	movf	ledGetLetter@lett,w
  1605  01E6  3A20               	xorlw	32
  1606  01E7  1D03               	skipz
  1607  01E8  29EB               	goto	l955
  1608                           
  1609                           ;led_array.c: 41: return L_SPACE;
  1610  01E9  3076               	movlw	(_L_SPACE-__stringbase)& (0+255)
  1611  01EA  0008               	return
  1612  01EB                     l955:	
  1613                           
  1614                           ;led_array.c: 42: else if (lett == '.')
  1615  01EB  0859               	movf	ledGetLetter@lett,w
  1616  01EC  3A2E               	xorlw	46
  1617  01ED  1D03               	skipz
  1618  01EE  29F1               	goto	l963
  1619                           
  1620                           ;led_array.c: 43: return L_PERIOD;
  1621  01EF  3074               	movlw	(_L_PERIOD-__stringbase)& (0+255)
  1622  01F0  0008               	return
  1623  01F1                     l963:	
  1624                           
  1625                           ;led_array.c: 44: else if (lett == '!')
  1626  01F1  0859               	movf	ledGetLetter@lett,w
  1627  01F2  3A21               	xorlw	33
  1628  01F3  1D03               	skipz
  1629  01F4  29F7               	goto	l971
  1630                           
  1631                           ;led_array.c: 45: return L_EXCL;
  1632  01F5  3072               	movlw	(_L_EXCL-__stringbase)& (0+255)
  1633  01F6  0008               	return
  1634  01F7                     l971:	
  1635                           
  1636                           ;led_array.c: 46: else
  1637                           ;led_array.c: 47: return L_LIST[lett - (unsigned char) 65];
  1638  01F7  0859               	movf	ledGetLetter@lett,w
  1639  01F8  3EBF               	addlw	191
  1640  01F9  3EA0               	addlw	_L_LIST& (0+255)
  1641  01FA  0084               	movwf	4
  1642  01FB  1383               	bcf	3,7	;select IRP bank1
  1643  01FC  0800               	movf	0,w
  1644  01FD  0008               	return
  1645  01FE                     __end_of_ledGetLetter:	
  1646                           
  1647                           	psect	text8
  1648  028A                     __ptext8:	
  1649 ;; *************** function _isr *****************
  1650 ;; Defined at:
  1651 ;;		line 82 in file "LEDScroller.c"
  1652 ;; Parameters:    Size  Location     Type
  1653 ;;		None
  1654 ;; Auto vars:     Size  Location     Type
  1655 ;;		None
  1656 ;; Return value:  Size  Location     Type
  1657 ;;		None               void
  1658 ;; Registers used:
  1659 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1660 ;; Tracked objects:
  1661 ;;		On entry : 0/0
  1662 ;;		On exit  : 0/0
  1663 ;;		Unchanged: 0/0
  1664 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1665 ;;      Params:         0       0       0       0
  1666 ;;      Locals:         0       0       0       0
  1667 ;;      Temps:          4       0       0       0
  1668 ;;      Totals:         4       0       0       0
  1669 ;;Total ram usage:        4 bytes
  1670 ;; Hardware stack levels used:    1
  1671 ;; Hardware stack levels required when called:    3
  1672 ;; This function calls:
  1673 ;;		_ledIncrementRow
  1674 ;; This function is called by:
  1675 ;;		Interrupt level 1
  1676 ;; This function uses a non-reentrant model
  1677 ;;
  1678                           
  1679                           
  1680                           ;psect for function _isr
  1681  028A                     _isr:	
  1682                           
  1683                           ;LEDScroller.c: 84: if (INTCONbits.T0IF)
  1684  028A  1D0B               	btfss	11,2	;volatile
  1685  028B  2A90               	goto	i1l121
  1686                           
  1687                           ;LEDScroller.c: 85: {
  1688                           ;LEDScroller.c: 86: INTCONbits.T0IF = 0;
  1689  028C  110B               	bcf	11,2	;volatile
  1690                           
  1691                           ;LEDScroller.c: 88: ledIncrementRow();
  1692  028D  118A  2263  118A   	fcall	_ledIncrementRow
  1693  0290                     i1l121:	
  1694  0290  0879               	movf	??_isr+3,w
  1695  0291  1283               	bcf	3,5	;RP0=0, select bank0
  1696  0292  1303               	bcf	3,6	;RP1=0, select bank0
  1697  0293  00FF               	movwf	127
  1698  0294  0878               	movf	??_isr+2,w
  1699  0295  008A               	movwf	10
  1700  0296  0877               	movf	??_isr+1,w
  1701  0297  0084               	movwf	4
  1702  0298  0E76               	swapf	??_isr^(0+-128),w
  1703  0299  0083               	movwf	3
  1704  029A  0EFE               	swapf	126,f
  1705  029B  0E7E               	swapf	126,w
  1706  029C  0009               	retfie
  1707  029D                     __end_of_isr:	
  1708                           
  1709                           	psect	intentry
  1710  0004                     __pintentry:	
  1711                           ;incstack = 0
  1712                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1713                           
  1714  0004                     interrupt_function:	
  1715  007E                     saved_w	set	btemp
  1716  0004  00FE               	movwf	btemp
  1717  0005  0E03               	swapf	3,w
  1718  0006  00F6               	movwf	??_isr
  1719  0007  0804               	movf	4,w
  1720  0008  00F7               	movwf	??_isr+1
  1721  0009  080A               	movf	10,w
  1722  000A  00F8               	movwf	??_isr+2
  1723  000B  1283               	bcf	3,5	;RP0=0, select bank0
  1724  000C  1303               	bcf	3,6	;RP1=0, select bank0
  1725  000D  087F               	movf	btemp+1,w
  1726  000E  00F9               	movwf	??_isr+3
  1727  000F  118A  2A8A         	ljmp	_isr
  1728                           
  1729                           	psect	text9
  1730  0263                     __ptext9:	
  1731 ;; *************** function _ledIncrementRow *****************
  1732 ;; Defined at:
  1733 ;;		line 7 in file "led_array.c"
  1734 ;; Parameters:    Size  Location     Type
  1735 ;;		None
  1736 ;; Auto vars:     Size  Location     Type
  1737 ;;		None
  1738 ;; Return value:  Size  Location     Type
  1739 ;;		None               void
  1740 ;; Registers used:
  1741 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1742 ;; Tracked objects:
  1743 ;;		On entry : 0/0
  1744 ;;		On exit  : 0/0
  1745 ;;		Unchanged: 0/0
  1746 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1747 ;;      Params:         0       0       0       0
  1748 ;;      Locals:         0       0       0       0
  1749 ;;      Temps:          2       0       0       0
  1750 ;;      Totals:         2       0       0       0
  1751 ;;Total ram usage:        2 bytes
  1752 ;; Hardware stack levels used:    1
  1753 ;; Hardware stack levels required when called:    2
  1754 ;; This function calls:
  1755 ;;		_ledUpdateDisplay
  1756 ;; This function is called by:
  1757 ;;		_isr
  1758 ;; This function uses a non-reentrant model
  1759 ;;
  1760                           
  1761                           
  1762                           ;psect for function _ledIncrementRow
  1763  0263                     _ledIncrementRow:	
  1764                           
  1765                           ;led_array.c: 9: PORTCGhost++;
  1766                           
  1767                           ;incstack = 0
  1768                           ; Regs used in _ledIncrementRow: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1769  0263  3001               	movlw	1
  1770  0264  00F4               	movwf	??_ledIncrementRow
  1771  0265  0874               	movf	??_ledIncrementRow,w
  1772  0266  07FA               	addwf	_PORTCGhost,f
  1773                           
  1774                           ;led_array.c: 11: if (PORTCGhost == 21 * 2)
  1775  0267  087A               	movf	_PORTCGhost,w
  1776  0268  3A2A               	xorlw	42
  1777  0269  1903               	btfsc	3,2
  1778                           
  1779                           ;led_array.c: 12: PORTCGhost = 0;
  1780  026A  01FA               	clrf	_PORTCGhost
  1781                           
  1782                           ;led_array.c: 15: ledRow = PORTCGhost >> 1;
  1783  026B  087A               	movf	_PORTCGhost,w
  1784  026C  00F4               	movwf	??_ledIncrementRow
  1785  026D  1003               	clrc
  1786  026E  0C74               	rrf	??_ledIncrementRow,w
  1787  026F  00F5               	movwf	??_ledIncrementRow+1
  1788  0270  0875               	movf	??_ledIncrementRow+1,w
  1789  0271  00FC               	movwf	_ledRow
  1790                           
  1791                           ;led_array.c: 17: ledUpdateDisplay(PORTCGhost & 0x01);
  1792  0272  087A               	movf	_PORTCGhost,w
  1793  0273  3901               	andlw	1
  1794  0274  118A  2219         	fcall	_ledUpdateDisplay
  1795  0276  0008               	return
  1796  0277                     __end_of_ledIncrementRow:	
  1797                           
  1798                           	psect	text10
  1799  0219                     __ptext10:	
  1800 ;; *************** function _ledUpdateDisplay *****************
  1801 ;; Defined at:
  1802 ;;		line 188 in file "led_array.c"
  1803 ;; Parameters:    Size  Location     Type
  1804 ;;  update          1    wreg     unsigned char 
  1805 ;; Auto vars:     Size  Location     Type
  1806 ;;  update          1    3[COMMON] unsigned char 
  1807 ;; Return value:  Size  Location     Type
  1808 ;;		None               void
  1809 ;; Registers used:
  1810 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1811 ;; Tracked objects:
  1812 ;;		On entry : 0/0
  1813 ;;		On exit  : 0/0
  1814 ;;		Unchanged: 0/0
  1815 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1816 ;;      Params:         0       0       0       0
  1817 ;;      Locals:         1       0       0       0
  1818 ;;      Temps:          1       0       0       0
  1819 ;;      Totals:         2       0       0       0
  1820 ;;Total ram usage:        2 bytes
  1821 ;; Hardware stack levels used:    1
  1822 ;; Hardware stack levels required when called:    1
  1823 ;; This function calls:
  1824 ;;		_ledSetData
  1825 ;; This function is called by:
  1826 ;;		_ledIncrementRow
  1827 ;; This function uses a non-reentrant model
  1828 ;;
  1829                           
  1830                           
  1831                           ;psect for function _ledUpdateDisplay
  1832  0219                     _ledUpdateDisplay:	
  1833                           
  1834                           ;incstack = 0
  1835                           ; Regs used in _ledUpdateDisplay: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1836                           ;ledUpdateDisplay@update stored from wreg
  1837  0219  00F3               	movwf	ledUpdateDisplay@update
  1838                           
  1839                           ;led_array.c: 191: if (update)
  1840  021A  0873               	movf	ledUpdateDisplay@update,w
  1841  021B  1903               	btfsc	3,2
  1842  021C  2A2F               	goto	i1l1005
  1843                           
  1844                           ;led_array.c: 192: {
  1845                           ;led_array.c: 193: ledSetData(0x00);
  1846  021D  3000               	movlw	0
  1847  021E  118A  229D  118A   	fcall	_ledSetData
  1848                           
  1849                           ;led_array.c: 194: PORTC = 0x01;
  1850  0221  3001               	movlw	1
  1851  0222  1283               	bcf	3,5	;RP0=0, select bank0
  1852  0223  1303               	bcf	3,6	;RP1=0, select bank0
  1853  0224  0087               	movwf	7	;volatile
  1854                           
  1855                           ;led_array.c: 195: ledSetData(currentLedArray[ledRow]);
  1856  0225  087C               	movf	_ledRow,w
  1857  0226  0768               	addwf	_currentLedArray,w
  1858  0227  00F2               	movwf	??_ledUpdateDisplay
  1859  0228  0872               	movf	??_ledUpdateDisplay,w
  1860  0229  0084               	movwf	4
  1861  022A  1383               	bcf	3,7	;select IRP bank0
  1862  022B  0800               	movf	0,w
  1863  022C  118A  229D         	fcall	_ledSetData
  1864                           
  1865                           ;led_array.c: 196: }
  1866  022E  0008               	return
  1867  022F                     i1l1005:	
  1868                           
  1869                           ;led_array.c: 197: else
  1870                           ;led_array.c: 198: PORTC = 0x02;
  1871  022F  3002               	movlw	2
  1872  0230  1283               	bcf	3,5	;RP0=0, select bank0
  1873  0231  1303               	bcf	3,6	;RP1=0, select bank0
  1874  0232  0087               	movwf	7	;volatile
  1875  0233  0008               	return
  1876  0234                     __end_of_ledUpdateDisplay:	
  1877                           
  1878                           	psect	text11
  1879  029D                     __ptext11:	
  1880 ;; *************** function _ledSetData *****************
  1881 ;; Defined at:
  1882 ;;		line 222 in file "led_array.c"
  1883 ;; Parameters:    Size  Location     Type
  1884 ;;  ledDisplayDa    1    wreg     unsigned char 
  1885 ;; Auto vars:     Size  Location     Type
  1886 ;;  ledDisplayDa    1    1[COMMON] unsigned char 
  1887 ;; Return value:  Size  Location     Type
  1888 ;;		None               void
  1889 ;; Registers used:
  1890 ;;		wreg, status,2, status,0
  1891 ;; Tracked objects:
  1892 ;;		On entry : 0/0
  1893 ;;		On exit  : 0/0
  1894 ;;		Unchanged: 0/0
  1895 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1896 ;;      Params:         0       0       0       0
  1897 ;;      Locals:         1       0       0       0
  1898 ;;      Temps:          1       0       0       0
  1899 ;;      Totals:         2       0       0       0
  1900 ;;Total ram usage:        2 bytes
  1901 ;; Hardware stack levels used:    1
  1902 ;; This function calls:
  1903 ;;		Nothing
  1904 ;; This function is called by:
  1905 ;;		_ledUpdateDisplay
  1906 ;; This function uses a non-reentrant model
  1907 ;;
  1908                           
  1909                           
  1910                           ;psect for function _ledSetData
  1911  029D                     _ledSetData:	
  1912                           
  1913                           ;incstack = 0
  1914                           ; Regs used in _ledSetData: [wreg+status,2+status,0]
  1915                           ;ledSetData@ledDisplayData stored from wreg
  1916  029D  00F1               	movwf	ledSetData@ledDisplayData
  1917                           
  1918                           ;led_array.c: 224: PORTA = ~ledDisplayData & 0x07;
  1919  029E  0971               	comf	ledSetData@ledDisplayData,w
  1920  029F  3907               	andlw	7
  1921  02A0  1283               	bcf	3,5	;RP0=0, select bank0
  1922  02A1  1303               	bcf	3,6	;RP1=0, select bank0
  1923  02A2  0085               	movwf	5	;volatile
  1924                           
  1925                           ;led_array.c: 225: PORTB = (~ledDisplayData << 2) & 0x60;
  1926  02A3  0971               	comf	ledSetData@ledDisplayData,w
  1927  02A4  00F0               	movwf	??_ledSetData
  1928  02A5  3001               	movlw	1
  1929  02A6                     u25_25:	
  1930  02A6  1003               	clrc
  1931  02A7  0DF0               	rlf	??_ledSetData,f
  1932  02A8  3EFF               	addlw	-1
  1933  02A9  1D03               	skipz
  1934  02AA  2AA6               	goto	u25_25
  1935  02AB  1003               	clrc
  1936  02AC  0D70               	rlf	??_ledSetData,w
  1937  02AD  3960               	andlw	96
  1938  02AE  0086               	movwf	6	;volatile
  1939  02AF  0008               	return
  1940  02B0                     __end_of_ledSetData:	
  1941  007E                     btemp	set	126	;btemp
  1942  007E                     wtemp	set	126
  1943  007E                     wtemp0	set	126
  1944  0080                     wtemp1	set	128
  1945  0082                     wtemp2	set	130
  1946  0084                     wtemp3	set	132
  1947  0086                     wtemp4	set	134
  1948  0088                     wtemp5	set	136
  1949  007F                     wtemp6	set	127
  1950  007E                     ttemp	set	126
  1951  007E                     ttemp0	set	126
  1952  0081                     ttemp1	set	129
  1953  0084                     ttemp2	set	132
  1954  0087                     ttemp3	set	135
  1955  007F                     ttemp4	set	127
  1956  007E                     ltemp	set	126
  1957  007E                     ltemp0	set	126
  1958  0082                     ltemp1	set	130
  1959  0086                     ltemp2	set	134
  1960  0080                     ltemp3	set	128


Data Sizes:
    Strings     78
    Constant    119
    Data        28
    BSS         60
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      13
    BANK0            80     15      74
    BANK1            80      0      26
    BANK2            80      0       0

Pointer List with Targets:

    ledSwitchArray@temp	PTR unsigned char  size(1) Largest target is 21
		 -> ledArray1(BANK0[21]), ledArray0(BANK0[21]), 

    ledDisplayString@str	PTR const unsigned char  size(1) Largest target is 78
		 -> STR_1(CODE[78]), 

    ledUpdateArr@letterTmp	PTR const unsigned char  size(1) Largest target is 6
		 -> L_EXCL(CODE[2]), L_PERIOD(CODE[2]), L_SPACE(CODE[2]), L_Z(CODE[4]), 
		 -> L_Y(CODE[4]), L_X(CODE[4]), L_W(CODE[6]), L_V(CODE[4]), 
		 -> L_U(CODE[4]), L_T(CODE[4]), L_S(CODE[4]), L_R(CODE[4]), 
		 -> L_Q(CODE[5]), L_P(CODE[4]), L_O(CODE[4]), L_N(CODE[5]), 
		 -> L_M(CODE[6]), L_L(CODE[4]), L_K(CODE[5]), L_J(CODE[5]), 
		 -> L_I(CODE[4]), L_H(CODE[4]), L_G(CODE[5]), L_F(CODE[4]), 
		 -> L_E(CODE[4]), L_D(CODE[4]), L_C(CODE[4]), L_B(CODE[4]), 
		 -> L_A(CODE[4]), 

    letterArr	PTR const unsigned char  size(1) Largest target is 4096
		 -> STR_1(CODE[78]), ROM(CODE[4096]), 

    ledUpdateArr@letterArrTmp	PTR const unsigned char  size(1) Largest target is 4096
		 -> STR_1(CODE[78]), ROM(CODE[4096]), 

    sp__ledGetLetter	PTR const unsigned char  size(1) Largest target is 6
		 -> L_EXCL(CODE[2]), L_PERIOD(CODE[2]), L_SPACE(CODE[2]), L_Z(CODE[4]), 
		 -> L_Y(CODE[4]), L_X(CODE[4]), L_W(CODE[6]), L_V(CODE[4]), 
		 -> L_U(CODE[4]), L_T(CODE[4]), L_S(CODE[4]), L_R(CODE[4]), 
		 -> L_Q(CODE[5]), L_P(CODE[4]), L_O(CODE[4]), L_N(CODE[5]), 
		 -> L_M(CODE[6]), L_L(CODE[4]), L_K(CODE[5]), L_J(CODE[5]), 
		 -> L_I(CODE[4]), L_H(CODE[4]), L_G(CODE[5]), L_F(CODE[4]), 
		 -> L_E(CODE[4]), L_D(CODE[4]), L_C(CODE[4]), L_B(CODE[4]), 
		 -> L_A(CODE[4]), 

    nextLedArray	PTR unsigned char  size(1) Largest target is 21
		 -> ledArray1(BANK0[21]), ledArray0(BANK0[21]), 

    currentLedArray	PTR unsigned char  size(1) Largest target is 21
		 -> ledArray1(BANK0[21]), ledArray0(BANK0[21]), 

    L_LIST	PTR const unsigned char [26] size(1) Largest target is 6
		 -> L_Z(CODE[4]), L_Y(CODE[4]), L_X(CODE[4]), L_W(CODE[6]), 
		 -> L_V(CODE[4]), L_U(CODE[4]), L_T(CODE[4]), L_S(CODE[4]), 
		 -> L_R(CODE[4]), L_Q(CODE[5]), L_P(CODE[4]), L_O(CODE[4]), 
		 -> L_N(CODE[5]), L_M(CODE[6]), L_L(CODE[4]), L_K(CODE[5]), 
		 -> L_J(CODE[5]), L_I(CODE[4]), L_H(CODE[4]), L_G(CODE[5]), 
		 -> L_F(CODE[4]), L_E(CODE[4]), L_D(CODE[4]), L_C(CODE[4]), 
		 -> L_B(CODE[4]), L_A(CODE[4]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->_ledIncrementRow
    _ledIncrementRow->_ledUpdateDisplay
    _ledUpdateDisplay->_ledSetData

Critical Paths under _main in BANK0

    _main->_ledDisplayString
    _setup->_ledSetupDisplay
    _ledScroll->_ledUpdateArr
    _ledDisplayString->_ledUpdateArr
    _ledUpdateArr->_ledSwitchArray

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    1318
                                             12 BANK0      3     3      0
                   _ledDisplayString
                          _ledScroll
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0      46
                    _ledSetupDisplay
 ---------------------------------------------------------------------------------
 (2) _ledSetupDisplay                                      2     2      0      46
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _ledScroll                                            0     0      0     588
                       _ledUpdateArr
 ---------------------------------------------------------------------------------
 (1) _ledDisplayString                                     2     2      0     637
                                             10 BANK0      2     2      0
                       _ledUpdateArr
 ---------------------------------------------------------------------------------
 (2) _ledUpdateArr                                         8     8      0     588
                                              2 BANK0      8     8      0
                       _ledGetLetter
                     _ledSwitchArray
 ---------------------------------------------------------------------------------
 (3) _ledSwitchArray                                       2     2      0      23
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) _ledGetLetter                                         1     1      0      88
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _isr                                                  4     4      0      66
                                              6 COMMON     4     4      0
                    _ledIncrementRow
 ---------------------------------------------------------------------------------
 (5) _ledIncrementRow                                      2     2      0      66
                                              4 COMMON     2     2      0
                   _ledUpdateDisplay
 ---------------------------------------------------------------------------------
 (6) _ledUpdateDisplay                                     2     2      0      66
                                              2 COMMON     2     2      0
                         _ledSetData
 ---------------------------------------------------------------------------------
 (7) _ledSetData                                           2     2      0      44
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ledDisplayString
     _ledUpdateArr
       _ledGetLetter
       _ledSwitchArray
   _ledScroll
     _ledUpdateArr
       _ledGetLetter
       _ledSwitchArray
   _setup
     _ledSetupDisplay

 _isr (ROOT)
   _ledIncrementRow
     _ledUpdateDisplay
       _ledSetData

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               50      0       0       7        0.0%
BITBANK2            50      0       0       6        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0      1A       5       32.5%
BITBANK1            50      0       0       4        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      F      4A       3       92.5%
BITBANK0            50      0       0       9        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      A       D       1       92.9%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      71      10        0.0%
ABS                  0      0      71       8        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.32 build 58300 
Symbol Table                                                                                   Wed Dec 10 21:11:14 2014

                          pc 0002            ??_ledIncrementRow 0074                  __CFG_CP$OFF 0000  
            ?_ledSwitchArray 0070                           fsr 0004                          l239 0120  
                        l971 01F7                          l963 01F1                          l955 01EB  
                        l993 0211                          l987 0205                          u345 0151  
               __CFG_CPD$OFF 0000                          _L_A 005D                          _L_B 0061  
                        _L_C 0065                          _L_D 0069                          _L_E 006D  
                        _L_F 0071                          _L_G 0044                          _L_H 0075  
                        _L_I 0079                          _L_J 0049                          _L_K 004E  
                        _L_L 007D                          _L_M 0038                          _L_N 0053  
                        _L_O 0081                          _L_P 0085                          _L_Q 0058  
                        _L_R 0089                          _L_S 008D                          _L_T 0091  
                        _L_U 0095                          _L_V 0099                          _L_W 003E  
                        _L_X 009D                          _L_Y 00A1                          _L_Z 00A5  
                        _isr 028A                          fsr0 0004                          indf 0000  
                       l1041 0144                         l1033 0130                         l1035 0138  
                       l1109 0260                         l1071 01A5                         l1055 017C  
                       l1063 0197                         l1057 018B                         l1145 01CD  
                       l1059 0191                         ?_isr 0070                         STR_1 00AF  
             ??_ledUpdateArr 005B           ledSwitchArray@temp 005A                         _main 01A8  
            __end_of_L_SPACE 00AF                         btemp 007E               _startAgainFlag 002E  
              __CFG_BOREN$ON 0000                         ltemp 007E                         start 0011  
                       ttemp 007E                         wtemp 007E                __CFG_IESO$OFF 0000  
              __CFG_MCLRE$ON 0000    __size_of_ledDisplayString 0010    __size_of_ledUpdateDisplay 001B  
                      ??_isr 0076                        ?_main 0070                ledUpdateArr@i 0062  
              __CFG_WDTE$OFF 0000                        i1l121 0290                        u25_25 02A6  
                      _PORTA 0005                        _PORTB 0006                        _PORTC 0007  
                      _TRISA 0085                        _TRISB 0086                        _TRISC 0087  
             __CFG_FCMEN$OFF 0000             __end_of_L_PERIOD 00AD                        _count 007B  
                      _setup 0277                        main@i 0066                        pclath 000A  
                      ltemp0 007E                        ltemp1 0082                        ltemp2 0086  
                      ltemp3 0080                        ttemp0 007E                        ttemp1 0081  
                      ttemp2 0084                        ttemp3 0087                        ttemp4 007F  
                      status 0003                        wtemp0 007E                        wtemp1 0080  
                      wtemp2 0082                        wtemp3 0084                        wtemp4 0086  
                      wtemp5 0088                        wtemp6 007F              __initialization 0013  
               __end_of_main 01E2         __end_of_ledGetLetter 01FE                       ??_main 0065  
      ledUpdateArr@letterTmp 005F                       ?_setup 0070                       i1l1005 022F  
   __size_of_ledSetupDisplay 001B                       _L_EXCL 00A9                       _L_LIST 00A0  
             __CFG_PWRTE$OFF 0000              _currentLedArray 0068                       _ledRow 007C  
   ledUpdateArr@letterArrTmp 005E         __end_of_ledUpdateArr 01A8     ledUpdateArr@letterTmpLoc 0060  
                     saved_w 007E      __end_of__initialization 002F              _ledIncrementRow 0263  
           ??_ledSwitchArray 0059             _ledDisplayString 02C0             ledGetLetter@lett 0059  
             __pcstackCOMMON 0070             _ledUpdateDisplay 0219                 __pidataBANK0 02E7  
               __pidataBANK1 0234                __end_of_setup 028A               _OPTION_REGbits 0081  
         __size_of_ledScroll 0015                      ??_setup 005B                   __pbssBANK0 0020  
      __size_of_ledGetLetter 001C                   __pmaintext 01A8     ledSetupDisplay@tmp_count 005A  
          ??_ledSetupDisplay 0059                   __pintentry 0004                   _ledSetData 029D  
    __end_of_ledIncrementRow 0277                      _L_SPACE 00AD                   __stringtab 0032  
               _ledGetLetter 01E2            __end_of_ledScroll 0263        __size_of_ledUpdateArr 00AB  
                 _myLedArray 0020                      __ptext1 0277                      __ptext2 01FE  
                    __ptext3 024E                      __ptext4 02C0                      __ptext5 00FD  
                    __ptext6 02D0                      __ptext7 01E2                      __ptext8 028A  
                    __ptext9 0263                 __size_of_isr 0013                      clrloop0 02E0  
       end_of_initialization 002F                 _ledUpdateArr 00FD                  ?_ledSetData 0070  
                  _TRISCbits 0087     __end_of_ledDisplayString 02D0             ?_ledIncrementRow 0070  
   __end_of_ledUpdateDisplay 0234               __end_of_L_EXCL 00AB          ledDisplayString@str 0064  
        start_initialization 0013                  __end_of_L_A 0061                  __end_of_L_B 0065  
                __end_of_L_C 0069                  __end_of_L_D 006D                  __end_of_L_E 0071  
                __end_of_L_F 0075                  __end_of_L_G 0049                  __end_of_L_H 0079  
                __end_of_L_I 007D                  __end_of_L_J 004E                  __end_of_L_K 0053  
                __end_of_L_L 0081                  __end_of_L_M 003E                  __end_of_L_N 0058  
                __end_of_L_O 0085                  __end_of_L_P 0089                  __end_of_L_Q 005D  
                __end_of_L_R 008D                  __end_of_L_S 0091                  __end_of_L_T 0095  
                __end_of_L_U 0099                  __end_of_L_V 009D                  __end_of_L_W 0044  
                __end_of_L_X 00A1                  __end_of_L_Y 00A5                  __end_of_L_Z 00A9  
                __end_of_isr 029D  ledUpdateArr@incrementLetter 005D              _ledSetupDisplay 01FE  
        __size_of_ledSetData 0013                   init_fetch0 02B0                  __pdataBANK0 0068  
                __pdataBANK1 00A0                  __pbssCOMMON 007A                    ___latbits 0001  
              __pcstackBANK0 0059          __end_of__stringdata 00FD                    _ledArray0 002F  
                  _ledArray1 0044                    _ledScroll 024E                    __pstrings 0032  
    __size_of_ledSwitchArray 000F      __end_of_ledSetupDisplay 0219                 _letterArrLoc 002B  
             __size_of_setup 0013                    _letterArr 002D            interrupt_function 0004  
                  clear_ram0 02DF                 _nextLedArray 0069                     _L_PERIOD 00AB  
                 ?_ledScroll 0070                  __stringbase 0037                  __stringdata 00AF  
               ??_ledSetData 0070            ?_ledDisplayString 0070            ?_ledUpdateDisplay 0070  
         ??_ledDisplayString 0063           ??_ledUpdateDisplay 0072               _letterArrCount 0029  
         __end_of_ledSetData 02B0           __end_of__stringtab 0038             ?_ledSetupDisplay 0070  
                   __ptext10 0219                     __ptext11 029D                __size_of_main 003A  
   __size_of_ledIncrementRow 0014                  ??_ledScroll 0063     ledSetData@ledDisplayData 0071  
             _ledSwitchArray 02D0                   _INTCONbits 000B       ledUpdateDisplay@update 0073  
                   init_ram0 02B4                ?_ledGetLetter 0070                     intlevel1 0000  
                  stringcode 0032                   _OSCCONbits 008F       __end_of_ledSwitchArray 02DF  
                 _PORTCGhost 007A                     stringdir 0032                     stringtab 0032  
             ??_ledGetLetter 0059           __CFG_FOSC$INTRCCLK 0000                ?_ledUpdateArr 0070  
