

Microchip Technology PIC LITE Macro Assembler V1.41 build -162212810 
                                                                                               Sat Feb 25 18:28:47 2017

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	16F1619
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
     7                           	psect	text1,local,class=CODE,merge=1,delta=2
     8                           	psect	text2,local,class=CODE,merge=1,delta=2
     9                           	psect	text3,local,class=CODE,merge=1,delta=2
    10                           	psect	text4,local,class=CODE,merge=1,delta=2
    11                           	psect	text5,local,class=CODE,merge=1,delta=2
    12                           	psect	text6,local,class=CODE,merge=1,delta=2
    13                           	dabs	1,0x7E,2
    14  0000                     
    15                           ; Version 1.41
    16                           ; Generated 25/01/2017 GMT
    17                           ; 
    18                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC16F1619 Definitions
    47                           ; 
    48                           ; SFR Addresses
    49  0000                     	;# 
    50  0001                     	;# 
    51  0002                     	;# 
    52  0003                     	;# 
    53  0004                     	;# 
    54  0005                     	;# 
    55  0006                     	;# 
    56  0007                     	;# 
    57  0008                     	;# 
    58  0009                     	;# 
    59  000A                     	;# 
    60  000B                     	;# 
    61  000C                     	;# 
    62  000D                     	;# 
    63  000E                     	;# 
    64  0010                     	;# 
    65  0011                     	;# 
    66  0012                     	;# 
    67  0013                     	;# 
    68  0014                     	;# 
    69  0015                     	;# 
    70  0016                     	;# 
    71  0016                     	;# 
    72  0017                     	;# 
    73  0018                     	;# 
    74  0019                     	;# 
    75  001A                     	;# 
    76  001A                     	;# 
    77  001B                     	;# 
    78  001B                     	;# 
    79  001C                     	;# 
    80  001D                     	;# 
    81  001E                     	;# 
    82  001F                     	;# 
    83  008C                     	;# 
    84  008D                     	;# 
    85  008E                     	;# 
    86  0090                     	;# 
    87  0091                     	;# 
    88  0092                     	;# 
    89  0093                     	;# 
    90  0094                     	;# 
    91  0095                     	;# 
    92  0096                     	;# 
    93  0098                     	;# 
    94  0099                     	;# 
    95  009A                     	;# 
    96  009B                     	;# 
    97  009B                     	;# 
    98  009C                     	;# 
    99  009D                     	;# 
   100  009E                     	;# 
   101  009F                     	;# 
   102  010C                     	;# 
   103  010D                     	;# 
   104  010E                     	;# 
   105  0111                     	;# 
   106  0112                     	;# 
   107  0113                     	;# 
   108  0114                     	;# 
   109  0115                     	;# 
   110  0116                     	;# 
   111  0117                     	;# 
   112  0118                     	;# 
   113  0119                     	;# 
   114  011C                     	;# 
   115  018C                     	;# 
   116  018D                     	;# 
   117  018E                     	;# 
   118  0191                     	;# 
   119  0191                     	;# 
   120  0192                     	;# 
   121  0193                     	;# 
   122  0193                     	;# 
   123  0194                     	;# 
   124  0195                     	;# 
   125  0196                     	;# 
   126  0197                     	;# 
   127  0199                     	;# 
   128  0199                     	;# 
   129  0199                     	;# 
   130  019A                     	;# 
   131  019A                     	;# 
   132  019A                     	;# 
   133  019B                     	;# 
   134  019B                     	;# 
   135  019B                     	;# 
   136  019B                     	;# 
   137  019B                     	;# 
   138  019C                     	;# 
   139  019C                     	;# 
   140  019C                     	;# 
   141  019D                     	;# 
   142  019D                     	;# 
   143  019D                     	;# 
   144  019E                     	;# 
   145  019E                     	;# 
   146  019E                     	;# 
   147  019F                     	;# 
   148  019F                     	;# 
   149  019F                     	;# 
   150  019F                     	;# 
   151  019F                     	;# 
   152  020C                     	;# 
   153  020D                     	;# 
   154  020E                     	;# 
   155  0211                     	;# 
   156  0211                     	;# 
   157  0212                     	;# 
   158  0212                     	;# 
   159  0213                     	;# 
   160  0213                     	;# 
   161  0214                     	;# 
   162  0214                     	;# 
   163  0215                     	;# 
   164  0215                     	;# 
   165  0215                     	;# 
   166  0215                     	;# 
   167  0216                     	;# 
   168  0216                     	;# 
   169  0217                     	;# 
   170  0217                     	;# 
   171  028C                     	;# 
   172  028D                     	;# 
   173  028E                     	;# 
   174  0291                     	;# 
   175  0291                     	;# 
   176  0292                     	;# 
   177  0293                     	;# 
   178  0294                     	;# 
   179  0298                     	;# 
   180  0298                     	;# 
   181  0299                     	;# 
   182  029A                     	;# 
   183  029B                     	;# 
   184  029E                     	;# 
   185  030C                     	;# 
   186  030D                     	;# 
   187  030E                     	;# 
   188  038C                     	;# 
   189  038D                     	;# 
   190  038E                     	;# 
   191  0391                     	;# 
   192  0392                     	;# 
   193  0393                     	;# 
   194  0394                     	;# 
   195  0395                     	;# 
   196  0396                     	;# 
   197  0397                     	;# 
   198  0398                     	;# 
   199  0399                     	;# 
   200  040E                     	;# 
   201  0413                     	;# 
   202  0413                     	;# 
   203  0414                     	;# 
   204  0414                     	;# 
   205  0415                     	;# 
   206  0416                     	;# 
   207  0417                     	;# 
   208  0418                     	;# 
   209  041A                     	;# 
   210  041A                     	;# 
   211  041B                     	;# 
   212  041B                     	;# 
   213  041C                     	;# 
   214  041D                     	;# 
   215  041E                     	;# 
   216  041F                     	;# 
   217  0493                     	;# 
   218  0494                     	;# 
   219  0495                     	;# 
   220  0496                     	;# 
   221  049A                     	;# 
   222  049B                     	;# 
   223  049C                     	;# 
   224  049D                     	;# 
   225  058C                     	;# 
   226  058C                     	;# 
   227  058D                     	;# 
   228  058E                     	;# 
   229  058E                     	;# 
   230  058F                     	;# 
   231  0590                     	;# 
   232  0590                     	;# 
   233  0591                     	;# 
   234  0592                     	;# 
   235  0592                     	;# 
   236  0593                     	;# 
   237  0594                     	;# 
   238  0594                     	;# 
   239  0595                     	;# 
   240  0596                     	;# 
   241  0596                     	;# 
   242  0597                     	;# 
   243  0598                     	;# 
   244  0599                     	;# 
   245  059A                     	;# 
   246  059B                     	;# 
   247  059B                     	;# 
   248  059C                     	;# 
   249  059D                     	;# 
   250  060C                     	;# 
   251  060C                     	;# 
   252  060D                     	;# 
   253  060E                     	;# 
   254  060F                     	;# 
   255  060F                     	;# 
   256  0610                     	;# 
   257  0611                     	;# 
   258  0612                     	;# 
   259  0613                     	;# 
   260  0614                     	;# 
   261  0617                     	;# 
   262  0618                     	;# 
   263  0619                     	;# 
   264  061A                     	;# 
   265  061B                     	;# 
   266  061C                     	;# 
   267  0691                     	;# 
   268  0692                     	;# 
   269  0693                     	;# 
   270  0694                     	;# 
   271  0695                     	;# 
   272  0696                     	;# 
   273  0697                     	;# 
   274  0699                     	;# 
   275  069A                     	;# 
   276  0711                     	;# 
   277  0712                     	;# 
   278  0713                     	;# 
   279  0714                     	;# 
   280  0715                     	;# 
   281  0718                     	;# 
   282  0718                     	;# 
   283  0719                     	;# 
   284  071A                     	;# 
   285  071A                     	;# 
   286  071B                     	;# 
   287  071C                     	;# 
   288  071D                     	;# 
   289  0791                     	;# 
   290  0791                     	;# 
   291  0792                     	;# 
   292  0793                     	;# 
   293  0793                     	;# 
   294  0794                     	;# 
   295  0795                     	;# 
   296  0795                     	;# 
   297  0796                     	;# 
   298  0797                     	;# 
   299  0797                     	;# 
   300  0798                     	;# 
   301  0799                     	;# 
   302  079A                     	;# 
   303  080C                     	;# 
   304  080C                     	;# 
   305  080D                     	;# 
   306  080E                     	;# 
   307  080E                     	;# 
   308  080F                     	;# 
   309  0810                     	;# 
   310  0810                     	;# 
   311  0811                     	;# 
   312  0812                     	;# 
   313  0812                     	;# 
   314  0813                     	;# 
   315  0814                     	;# 
   316  0815                     	;# 
   317  0816                     	;# 
   318  0817                     	;# 
   319  0818                     	;# 
   320  0819                     	;# 
   321  081A                     	;# 
   322  081A                     	;# 
   323  081B                     	;# 
   324  081C                     	;# 
   325  081C                     	;# 
   326  081D                     	;# 
   327  088C                     	;# 
   328  088D                     	;# 
   329  088E                     	;# 
   330  088F                     	;# 
   331  088F                     	;# 
   332  0890                     	;# 
   333  0891                     	;# 
   334  0892                     	;# 
   335  0893                     	;# 
   336  0893                     	;# 
   337  0894                     	;# 
   338  0895                     	;# 
   339  0896                     	;# 
   340  0897                     	;# 
   341  0897                     	;# 
   342  0898                     	;# 
   343  0899                     	;# 
   344  0D8C                     	;# 
   345  0D8C                     	;# 
   346  0D8D                     	;# 
   347  0D8E                     	;# 
   348  0D8F                     	;# 
   349  0D8F                     	;# 
   350  0D90                     	;# 
   351  0D91                     	;# 
   352  0D92                     	;# 
   353  0D92                     	;# 
   354  0D93                     	;# 
   355  0D94                     	;# 
   356  0D95                     	;# 
   357  0D95                     	;# 
   358  0D96                     	;# 
   359  0D97                     	;# 
   360  0D98                     	;# 
   361  0D99                     	;# 
   362  0D9A                     	;# 
   363  0D9B                     	;# 
   364  0D9C                     	;# 
   365  0D9D                     	;# 
   366  0D9E                     	;# 
   367  0D9E                     	;# 
   368  0D9F                     	;# 
   369  0DA0                     	;# 
   370  0DA1                     	;# 
   371  0DA1                     	;# 
   372  0DA2                     	;# 
   373  0DA3                     	;# 
   374  0DA4                     	;# 
   375  0DA4                     	;# 
   376  0DA5                     	;# 
   377  0DA6                     	;# 
   378  0DA7                     	;# 
   379  0DA7                     	;# 
   380  0DA8                     	;# 
   381  0DA9                     	;# 
   382  0DAA                     	;# 
   383  0DAB                     	;# 
   384  0DAC                     	;# 
   385  0DAD                     	;# 
   386  0DAE                     	;# 
   387  0DAF                     	;# 
   388  0E0F                     	;# 
   389  0E10                     	;# 
   390  0E11                     	;# 
   391  0E12                     	;# 
   392  0E13                     	;# 
   393  0E14                     	;# 
   394  0E15                     	;# 
   395  0E16                     	;# 
   396  0E17                     	;# 
   397  0E18                     	;# 
   398  0E19                     	;# 
   399  0E1A                     	;# 
   400  0E1B                     	;# 
   401  0E1C                     	;# 
   402  0E1D                     	;# 
   403  0E1E                     	;# 
   404  0E1F                     	;# 
   405  0E20                     	;# 
   406  0E21                     	;# 
   407  0E22                     	;# 
   408  0E23                     	;# 
   409  0E24                     	;# 
   410  0E25                     	;# 
   411  0E26                     	;# 
   412  0E27                     	;# 
   413  0E28                     	;# 
   414  0E29                     	;# 
   415  0E2A                     	;# 
   416  0E2B                     	;# 
   417  0E2C                     	;# 
   418  0E2D                     	;# 
   419  0E2E                     	;# 
   420  0E90                     	;# 
   421  0E91                     	;# 
   422  0E92                     	;# 
   423  0E94                     	;# 
   424  0E95                     	;# 
   425  0E9C                     	;# 
   426  0E9D                     	;# 
   427  0E9E                     	;# 
   428  0E9F                     	;# 
   429  0EA0                     	;# 
   430  0EA1                     	;# 
   431  0EA2                     	;# 
   432  0EA3                     	;# 
   433  0EA4                     	;# 
   434  0EA5                     	;# 
   435  0EA6                     	;# 
   436  0EA7                     	;# 
   437  0F0F                     	;# 
   438  0F10                     	;# 
   439  0F11                     	;# 
   440  0F12                     	;# 
   441  0F13                     	;# 
   442  0F14                     	;# 
   443  0F15                     	;# 
   444  0F16                     	;# 
   445  0F17                     	;# 
   446  0F18                     	;# 
   447  0F19                     	;# 
   448  0F1A                     	;# 
   449  0F1B                     	;# 
   450  0F1C                     	;# 
   451  0F1D                     	;# 
   452  0F1E                     	;# 
   453  0F1F                     	;# 
   454  0F20                     	;# 
   455  0F21                     	;# 
   456  0F22                     	;# 
   457  0F23                     	;# 
   458  0F24                     	;# 
   459  0F25                     	;# 
   460  0F26                     	;# 
   461  0F27                     	;# 
   462  0F28                     	;# 
   463  0F29                     	;# 
   464  0F2A                     	;# 
   465  0F2B                     	;# 
   466  0F2C                     	;# 
   467  0F2D                     	;# 
   468  0F2E                     	;# 
   469  0F2F                     	;# 
   470  0F30                     	;# 
   471  0F31                     	;# 
   472  0F32                     	;# 
   473  0F33                     	;# 
   474  0F34                     	;# 
   475  0F35                     	;# 
   476  0F36                     	;# 
   477  0F37                     	;# 
   478  0FE4                     	;# 
   479  0FE5                     	;# 
   480  0FE6                     	;# 
   481  0FE7                     	;# 
   482  0FE8                     	;# 
   483  0FE9                     	;# 
   484  0FEA                     	;# 
   485  0FEB                     	;# 
   486  0FED                     	;# 
   487  0FEE                     	;# 
   488  0FEF                     	;# 
   489  0019                     _T1GCONbits	set	25
   490  0016                     _TMR1L	set	22
   491  0017                     _TMR1H	set	23
   492  0018                     _T1CONbits	set	24
   493  008C                     _TRISAbits	set	140
   494  008D                     _TRISB	set	141
   495  008E                     _TRISC	set	142
   496  010D                     _LATBbits	set	269
   497  010E                     _LATCbits	set	270
   498  010C                     _LATA	set	268
   499  010D                     _LATB	set	269
   500  010E                     _LATC	set	270
   501  010C                     _LATAbits	set	268
   502  018C                     _ANSELAbits	set	396
   503                           
   504                           ; #config settings
   505  0000                     
   506                           	psect	cinit
   507  07FD                     start_initialization:	
   508  07FD                     __initialization:	
   509  07FD                     end_of_initialization:	
   510                           ;End of C runtime variable initialization code
   511                           
   512  07FD                     __end_of__initialization:	
   513  07FD  0020               	movlb	0
   514  07FE  3187  2F9F         	ljmp	_main	;jump to C main() function
   515                           
   516                           	psect	cstackCOMMON
   517  0070                     __pcstackCOMMON:	
   518  0070                     ?_setup:	
   519  0070                     ??_setup:	
   520                           ; 1 bytes @ 0x0
   521                           
   522  0070                     ?_setup_timer1:	
   523                           ; 1 bytes @ 0x0
   524                           
   525  0070                     ??_setup_timer1:	
   526                           ; 1 bytes @ 0x0
   527                           
   528  0070                     ?_clear_leds:	
   529                           ; 1 bytes @ 0x0
   530                           
   531  0070                     ?_show_led_up_to:	
   532                           ; 1 bytes @ 0x0
   533                           
   534  0070                     ?_turn_led_on:	
   535                           ; 1 bytes @ 0x0
   536                           
   537  0070                     ??_turn_led_on:	
   538                           ; 1 bytes @ 0x0
   539                           
   540  0070                     ?_turn_led_off:	
   541                           ; 1 bytes @ 0x0
   542                           
   543  0070                     ??_turn_led_off:	
   544                           ; 1 bytes @ 0x0
   545                           
   546  0070                     ?_main:	
   547                           ; 1 bytes @ 0x0
   548                           
   549  0070                     turn_led_on@led:	
   550                           ; 1 bytes @ 0x0
   551                           
   552  0070                     turn_led_off@led:	
   553                           ; 1 bytes @ 0x0
   554                           
   555                           
   556                           ; 1 bytes @ 0x0
   557  0070                     	ds	1
   558  0071                     ??_clear_leds:	
   559                           
   560                           ; 1 bytes @ 0x1
   561  0071                     	ds	1
   562  0072                     clear_leds@count:	
   563                           
   564                           ; 1 bytes @ 0x2
   565  0072                     	ds	1
   566  0073                     ??_show_led_up_to:	
   567                           
   568                           ; 1 bytes @ 0x3
   569  0073                     	ds	1
   570  0074                     show_led_up_to@led_count:	
   571                           
   572                           ; 1 bytes @ 0x4
   573  0074                     	ds	1
   574  0075                     show_led_up_to@count:	
   575                           
   576                           ; 1 bytes @ 0x5
   577  0075                     	ds	1
   578  0076                     ??_main:	
   579                           
   580                           ; 1 bytes @ 0x6
   581  0076                     	ds	2
   582  0078                     main@led:	
   583                           
   584                           ; 1 bytes @ 0x8
   585  0078                     	ds	1
   586  0079                     main@tmr_val:	
   587                           
   588                           ; 2 bytes @ 0x9
   589  0079                     	ds	2
   590  007B                     main@i:	
   591                           
   592                           ; 1 bytes @ 0xB
   593  007B                     	ds	1
   594                           
   595                           	psect	maintext
   596  079F                     __pmaintext:	
   597 ;;
   598 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   599 ;;
   600 ;; *************** function _main *****************
   601 ;; Defined at:
   602 ;;		line 68 in file "range_sensor.c"
   603 ;; Parameters:    Size  Location     Type
   604 ;;		None
   605 ;; Auto vars:     Size  Location     Type
   606 ;;  tmr_val         2    9[COMMON] unsigned int 
   607 ;;  i               1   11[COMMON] unsigned char 
   608 ;;  led             1    8[COMMON] unsigned char 
   609 ;; Return value:  Size  Location     Type
   610 ;;                  1    wreg      void 
   611 ;; Registers used:
   612 ;;		wreg, status,2, status,0, pclath, cstack
   613 ;; Tracked objects:
   614 ;;		On entry : B1F/0
   615 ;;		On exit  : 0/0
   616 ;;		Unchanged: 0/0
   617 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   618 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   619 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   620 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   621 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   622 ;;Total ram usage:        6 bytes
   623 ;; Hardware stack levels required when called:    3
   624 ;; This function calls:
   625 ;;		_clear_leds
   626 ;;		_setup
   627 ;;		_setup_timer1
   628 ;;		_show_led_up_to
   629 ;; This function is called by:
   630 ;;		Startup code after reset
   631 ;; This function uses a non-reentrant model
   632 ;;
   633                           
   634                           
   635                           ;psect for function _main
   636  079F                     _main:	
   637                           
   638                           ;range_sensor.c: 70: uint16_t tmr_val = 0;
   639                           
   640                           ;incstack = 0
   641                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   642  079F  01F9               	clrf	main@tmr_val
   643  07A0  01FA               	clrf	main@tmr_val+1
   644                           
   645                           ;range_sensor.c: 71: uint8_t i, led = 0;
   646  07A1  01F8               	clrf	main@led
   647                           
   648                           ;range_sensor.c: 73: setup();
   649  07A2  3186  26CD  3187   	fcall	_setup
   650                           
   651                           ;range_sensor.c: 74: setup_timer1();
   652  07A5  3186  26D9  3187   	fcall	_setup_timer1
   653                           
   654                           ;range_sensor.c: 75: T1CONbits.TMR1ON = 1;
   655  07A8  0020               	movlb	0	; select bank0
   656  07A9  1418               	bsf	24,0	;volatile
   657  07AA  2FAD               	goto	l45
   658  07AB                     l645:	
   659                           
   660                           ;range_sensor.c: 94: {
   661                           ;range_sensor.c: 95: tmr_val = 0;
   662  07AB  01F9               	clrf	main@tmr_val
   663  07AC  01FA               	clrf	main@tmr_val+1
   664  07AD                     l45:	
   665                           ;range_sensor.c: 78: while (1)
   666                           
   667                           ;range_sensor.c: 96: }
   668                           
   669                           
   670                           ;range_sensor.c: 79: {
   671                           ;range_sensor.c: 80: TMR1H = 0x00;
   672  07AD  0020               	movlb	0	; select bank0
   673  07AE  0197               	clrf	23	;volatile
   674                           
   675                           ;range_sensor.c: 81: TMR1L = 0x00;
   676  07AF  0196               	clrf	22	;volatile
   677                           
   678                           ;range_sensor.c: 84: LATAbits.LATA5 = 1;
   679  07B0  0022               	movlb	2	; select bank2
   680  07B1  168C               	bsf	12,5	;volatile
   681                           
   682                           ;range_sensor.c: 85: _delay((unsigned long)((100)*(500000/4000000.0)));
   683  07B2  3004               	movlw	4
   684  07B3                     u317:	
   685  07B3  0B89               	decfsz	9,f
   686  07B4  2FB3               	goto	u317
   687                           
   688                           ;range_sensor.c: 86: LATAbits.LATA5 = 0;
   689  07B5  0022               	movlb	2	; select bank2
   690  07B6  128C               	bcf	12,5	;volatile
   691                           
   692                           ;range_sensor.c: 87: _delay((unsigned long)((100)*(500000/4000.0)));
   693  07B7  3011               	movlw	17
   694  07B8  00F6               	movwf	??_main
   695  07B9  303A               	movlw	58
   696  07BA                     u327:	
   697  07BA  0B89               	decfsz	9,f
   698  07BB  2FBA               	goto	u327
   699  07BC  0BF6               	decfsz	??_main,f
   700  07BD  2FBA               	goto	u327
   701  07BE  3200               	nop2
   702                           
   703                           ;range_sensor.c: 89: tmr_val = (TMR1H << 8) | TMR1L;
   704  07BF  0020               	movlb	0	; select bank0
   705  07C0  0817               	movf	23,w	;volatile
   706  07C1  00FA               	movwf	main@tmr_val+1
   707  07C2  0816               	movf	22,w	;volatile
   708  07C3  00F9               	movwf	main@tmr_val
   709                           
   710                           ;range_sensor.c: 93: if (tmr_val < 32)
   711  07C4  3000               	movlw	0
   712  07C5  027A               	subwf	main@tmr_val+1,w
   713  07C6  3020               	movlw	32
   714  07C7  1903               	skipnz
   715  07C8  0279               	subwf	main@tmr_val,w
   716  07C9  1C03               	btfss	3,0
   717  07CA  2FAB               	goto	l645
   718                           
   719                           ;range_sensor.c: 97: else
   720                           ;range_sensor.c: 98: {
   721                           ;range_sensor.c: 99: tmr_val = tmr_val - 32;
   722  07CB  0879               	movf	main@tmr_val,w
   723  07CC  3EE0               	addlw	224
   724  07CD  00F9               	movwf	main@tmr_val
   725  07CE  30FF               	movlw	255
   726  07CF  3D7A               	addwfc	main@tmr_val+1,w
   727  07D0  00FA               	movwf	main@tmr_val+1
   728                           
   729                           ;range_sensor.c: 102: for (i = 1; i <= 10; i++)
   730  07D1  01FB               	clrf	main@i
   731  07D2  0AFB               	incf	main@i,f
   732  07D3  300B               	movlw	11
   733  07D4  027B               	subwf	main@i,w
   734  07D5  1803               	btfsc	3,0
   735  07D6  2FF4               	goto	l663
   736  07D7                     l655:	
   737                           
   738                           ;range_sensor.c: 103: {
   739                           ;range_sensor.c: 104: if (tmr_val <= (i << 5))
   740  07D7  087B               	movf	main@i,w
   741  07D8  00F6               	movwf	??_main
   742  07D9  01F7               	clrf	??_main+1
   743  07DA  3005               	movlw	5
   744  07DB                     u275:	
   745  07DB  35F6               	lslf	??_main,f
   746  07DC  0DF7               	rlf	??_main+1,f
   747  07DD  0B89               	decfsz	9,f
   748  07DE  2FDB               	goto	u275
   749  07DF  087A               	movf	main@tmr_val+1,w
   750  07E0  0277               	subwf	??_main+1,w
   751  07E1  1D03               	skipz
   752  07E2  2FE5               	goto	u285
   753  07E3  0879               	movf	main@tmr_val,w
   754  07E4  0276               	subwf	??_main,w
   755  07E5                     u285:	
   756  07E5  1C03               	skipc
   757  07E6  2FEC               	goto	l659
   758                           
   759                           ;range_sensor.c: 105: {
   760                           ;range_sensor.c: 106: led = i;
   761  07E7  087B               	movf	main@i,w
   762  07E8  00F6               	movwf	??_main
   763  07E9  0876               	movf	??_main,w
   764  07EA  00F8               	movwf	main@led
   765                           
   766                           ;range_sensor.c: 107: break;
   767  07EB  2FF4               	goto	l663
   768  07EC                     l659:	
   769  07EC  3001               	movlw	1
   770  07ED  00F6               	movwf	??_main
   771  07EE  0876               	movf	??_main,w
   772  07EF  07FB               	addwf	main@i,f
   773  07F0  300B               	movlw	11
   774  07F1  027B               	subwf	main@i,w
   775  07F2  1C03               	skipc
   776  07F3  2FD7               	goto	l655
   777  07F4                     l663:	
   778                           
   779                           ;range_sensor.c: 108: }
   780                           ;range_sensor.c: 109: }
   781                           ;range_sensor.c: 111: clear_leds();
   782  07F4  3186  26E5  3187   	fcall	_clear_leds
   783                           
   784                           ;range_sensor.c: 112: show_led_up_to(led);
   785  07F7  0878               	movf	main@led,w
   786  07F8  3186  26F6  3187   	fcall	_show_led_up_to
   787                           
   788                           ;range_sensor.c: 113: led = 0;
   789  07FB  01F8               	clrf	main@led
   790  07FC  2FAD               	goto	l45
   791  07FD                     __end_of_main:	
   792                           ;range_sensor.c: 115: }
   793                           ;range_sensor.c: 117: }
   794                           ;range_sensor.c: 119: return;
   795                           
   796                           
   797                           	psect	text1
   798  06F6                     __ptext1:	
   799 ;; *************** function _show_led_up_to *****************
   800 ;; Defined at:
   801 ;;		line 151 in file "range_sensor.c"
   802 ;; Parameters:    Size  Location     Type
   803 ;;  led_count       1    wreg     unsigned char 
   804 ;; Auto vars:     Size  Location     Type
   805 ;;  led_count       1    4[COMMON] unsigned char 
   806 ;;  count           1    5[COMMON] unsigned char 
   807 ;; Return value:  Size  Location     Type
   808 ;;                  1    wreg      void 
   809 ;; Registers used:
   810 ;;		wreg, status,2, status,0, pclath, cstack
   811 ;; Tracked objects:
   812 ;;		On entry : 0/0
   813 ;;		On exit  : 0/0
   814 ;;		Unchanged: 0/0
   815 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   816 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   817 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   818 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   819 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   820 ;;Total ram usage:        3 bytes
   821 ;; Hardware stack levels used:    1
   822 ;; Hardware stack levels required when called:    2
   823 ;; This function calls:
   824 ;;		_clear_leds
   825 ;;		_turn_led_on
   826 ;; This function is called by:
   827 ;;		_main
   828 ;; This function uses a non-reentrant model
   829 ;;
   830                           
   831                           
   832                           ;psect for function _show_led_up_to
   833  06F6                     _show_led_up_to:	
   834                           
   835                           ;incstack = 0
   836                           ; Regs used in _show_led_up_to: [wreg+status,2+status,0+pclath+cstack]
   837                           ;show_led_up_to@led_count stored from wreg
   838  06F6  00F4               	movwf	show_led_up_to@led_count
   839                           
   840                           ;range_sensor.c: 153: uint8_t count = 1;
   841  06F7  01F5               	clrf	show_led_up_to@count
   842  06F8  0AF5               	incf	show_led_up_to@count,f
   843                           
   844                           ;range_sensor.c: 155: if (led_count > 10)
   845  06F9  300B               	movlw	11
   846  06FA  0274               	subwf	show_led_up_to@led_count,w
   847  06FB  1C03               	skipc
   848  06FC  2F01               	goto	l615
   849                           
   850                           ;range_sensor.c: 156: {
   851                           ;range_sensor.c: 157: led_count = 10;
   852  06FD  300A               	movlw	10
   853  06FE  00F3               	movwf	??_show_led_up_to
   854  06FF  0873               	movf	??_show_led_up_to,w
   855  0700  00F4               	movwf	show_led_up_to@led_count
   856  0701                     l615:	
   857                           
   858                           ;range_sensor.c: 158: }
   859                           ;range_sensor.c: 160: clear_leds();
   860  0701  3186  26E5  3186   	fcall	_clear_leds
   861                           
   862                           ;range_sensor.c: 161: for (count = 1; count <= led_count; count++)
   863  0704  01F5               	clrf	show_led_up_to@count
   864  0705  0AF5               	incf	show_led_up_to@count,f
   865  0706                     l623:	
   866  0706  0875               	movf	show_led_up_to@count,w
   867  0707  0274               	subwf	show_led_up_to@led_count,w
   868  0708  1C03               	btfss	3,0
   869  0709  0008               	return
   870                           
   871                           ;range_sensor.c: 162: {
   872                           ;range_sensor.c: 163: turn_led_on(count);
   873  070A  0875               	movf	show_led_up_to@count,w
   874  070B  3187  2759  3186   	fcall	_turn_led_on
   875  070E  3001               	movlw	1
   876  070F  00F3               	movwf	??_show_led_up_to
   877  0710  0873               	movf	??_show_led_up_to,w
   878  0711  07F5               	addwf	show_led_up_to@count,f
   879  0712  2F06               	goto	l623
   880  0713                     __end_of_show_led_up_to:	
   881                           
   882                           	psect	text2
   883  0759                     __ptext2:	
   884 ;; *************** function _turn_led_on *****************
   885 ;; Defined at:
   886 ;;		line 185 in file "range_sensor.c"
   887 ;; Parameters:    Size  Location     Type
   888 ;;  led             1    wreg     unsigned char 
   889 ;; Auto vars:     Size  Location     Type
   890 ;;  led             1    0[COMMON] unsigned char 
   891 ;; Return value:  Size  Location     Type
   892 ;;                  1    wreg      void 
   893 ;; Registers used:
   894 ;;		wreg, status,2, status,0
   895 ;; Tracked objects:
   896 ;;		On entry : 0/0
   897 ;;		On exit  : 0/0
   898 ;;		Unchanged: 0/0
   899 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   900 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   901 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   902 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   903 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   904 ;;Total ram usage:        1 bytes
   905 ;; Hardware stack levels used:    1
   906 ;; This function calls:
   907 ;;		Nothing
   908 ;; This function is called by:
   909 ;;		_show_led_up_to
   910 ;; This function uses a non-reentrant model
   911 ;;
   912                           
   913                           
   914                           ;psect for function _turn_led_on
   915  0759                     _turn_led_on:	
   916                           
   917                           ;incstack = 0
   918                           ; Regs used in _turn_led_on: [wreg+status,2+status,0]
   919                           ;turn_led_on@led stored from wreg
   920  0759  00F0               	movwf	turn_led_on@led
   921                           
   922                           ;range_sensor.c: 187: if (led == 1)
   923  075A  0370               	decf	turn_led_on@led,w
   924  075B  1D03               	btfss	3,2
   925  075C  2F60               	goto	l553
   926                           
   927                           ;range_sensor.c: 188: {
   928                           ;range_sensor.c: 189: LATCbits.LATC0 = 1;
   929  075D  0022               	movlb	2	; select bank2
   930  075E  140E               	bsf	14,0	;volatile
   931                           
   932                           ;range_sensor.c: 190: }
   933  075F  0008               	return
   934  0760                     l553:	
   935                           
   936                           ;range_sensor.c: 191: else if (led == 2)
   937  0760  3002               	movlw	2
   938  0761  0670               	xorwf	turn_led_on@led,w
   939  0762  1D03               	btfss	3,2
   940  0763  2F67               	goto	l557
   941                           
   942                           ;range_sensor.c: 192: {
   943                           ;range_sensor.c: 193: LATCbits.LATC1 = 1;
   944  0764  0022               	movlb	2	; select bank2
   945  0765  148E               	bsf	14,1	;volatile
   946                           
   947                           ;range_sensor.c: 194: }
   948  0766  0008               	return
   949  0767                     l557:	
   950                           
   951                           ;range_sensor.c: 195: else if (led == 3)
   952  0767  3003               	movlw	3
   953  0768  0670               	xorwf	turn_led_on@led,w
   954  0769  1D03               	btfss	3,2
   955  076A  2F6E               	goto	l561
   956                           
   957                           ;range_sensor.c: 196: {
   958                           ;range_sensor.c: 197: LATCbits.LATC2 = 1;
   959  076B  0022               	movlb	2	; select bank2
   960  076C  150E               	bsf	14,2	;volatile
   961                           
   962                           ;range_sensor.c: 198: }
   963  076D  0008               	return
   964  076E                     l561:	
   965                           
   966                           ;range_sensor.c: 199: else if (led == 4)
   967  076E  3004               	movlw	4
   968  076F  0670               	xorwf	turn_led_on@led,w
   969  0770  1D03               	btfss	3,2
   970  0771  2F75               	goto	l565
   971                           
   972                           ;range_sensor.c: 200: {
   973                           ;range_sensor.c: 201: LATCbits.LATC3 = 1;
   974  0772  0022               	movlb	2	; select bank2
   975  0773  158E               	bsf	14,3	;volatile
   976                           
   977                           ;range_sensor.c: 202: }
   978  0774  0008               	return
   979  0775                     l565:	
   980                           
   981                           ;range_sensor.c: 203: else if (led == 5)
   982  0775  3005               	movlw	5
   983  0776  0670               	xorwf	turn_led_on@led,w
   984  0777  1D03               	btfss	3,2
   985  0778  2F7C               	goto	l569
   986                           
   987                           ;range_sensor.c: 204: {
   988                           ;range_sensor.c: 205: LATCbits.LATC4 = 1;
   989  0779  0022               	movlb	2	; select bank2
   990  077A  160E               	bsf	14,4	;volatile
   991                           
   992                           ;range_sensor.c: 206: }
   993  077B  0008               	return
   994  077C                     l569:	
   995                           
   996                           ;range_sensor.c: 207: else if (led == 6)
   997  077C  3006               	movlw	6
   998  077D  0670               	xorwf	turn_led_on@led,w
   999  077E  1D03               	btfss	3,2
  1000  077F  2F83               	goto	l573
  1001                           
  1002                           ;range_sensor.c: 208: {
  1003                           ;range_sensor.c: 209: LATCbits.LATC5 = 1;
  1004  0780  0022               	movlb	2	; select bank2
  1005  0781  168E               	bsf	14,5	;volatile
  1006                           
  1007                           ;range_sensor.c: 210: }
  1008  0782  0008               	return
  1009  0783                     l573:	
  1010                           
  1011                           ;range_sensor.c: 211: else if (led == 7)
  1012  0783  3007               	movlw	7
  1013  0784  0670               	xorwf	turn_led_on@led,w
  1014  0785  1D03               	btfss	3,2
  1015  0786  2F8A               	goto	l577
  1016                           
  1017                           ;range_sensor.c: 212: {
  1018                           ;range_sensor.c: 213: LATCbits.LATC6 = 1;
  1019  0787  0022               	movlb	2	; select bank2
  1020  0788  170E               	bsf	14,6	;volatile
  1021                           
  1022                           ;range_sensor.c: 214: }
  1023  0789  0008               	return
  1024  078A                     l577:	
  1025                           
  1026                           ;range_sensor.c: 215: else if (led == 8)
  1027  078A  3008               	movlw	8
  1028  078B  0670               	xorwf	turn_led_on@led,w
  1029  078C  1D03               	btfss	3,2
  1030  078D  2F91               	goto	l581
  1031                           
  1032                           ;range_sensor.c: 216: {
  1033                           ;range_sensor.c: 217: LATCbits.LATC7 = 1;
  1034  078E  0022               	movlb	2	; select bank2
  1035  078F  178E               	bsf	14,7	;volatile
  1036                           
  1037                           ;range_sensor.c: 218: }
  1038  0790  0008               	return
  1039  0791                     l581:	
  1040                           
  1041                           ;range_sensor.c: 219: else if (led == 9)
  1042  0791  3009               	movlw	9
  1043  0792  0670               	xorwf	turn_led_on@led,w
  1044  0793  1D03               	btfss	3,2
  1045  0794  2F98               	goto	l585
  1046                           
  1047                           ;range_sensor.c: 220: {
  1048                           ;range_sensor.c: 221: LATBbits.LATB7 = 1;
  1049  0795  0022               	movlb	2	; select bank2
  1050  0796  178D               	bsf	13,7	;volatile
  1051                           
  1052                           ;range_sensor.c: 222: }
  1053  0797  0008               	return
  1054  0798                     l585:	
  1055                           
  1056                           ;range_sensor.c: 223: else if (led == 10)
  1057  0798  300A               	movlw	10
  1058  0799  0670               	xorwf	turn_led_on@led,w
  1059  079A  1D03               	btfss	3,2
  1060  079B  0008               	return
  1061                           
  1062                           ;range_sensor.c: 224: {
  1063                           ;range_sensor.c: 225: LATBbits.LATB6 = 1;
  1064  079C  0022               	movlb	2	; select bank2
  1065  079D  170D               	bsf	13,6	;volatile
  1066  079E  0008               	return
  1067  079F                     __end_of_turn_led_on:	
  1068                           
  1069                           	psect	text3
  1070  06E5                     __ptext3:	
  1071 ;; *************** function _clear_leds *****************
  1072 ;; Defined at:
  1073 ;;		line 176 in file "range_sensor.c"
  1074 ;; Parameters:    Size  Location     Type
  1075 ;;		None
  1076 ;; Auto vars:     Size  Location     Type
  1077 ;;  count           1    2[COMMON] unsigned char 
  1078 ;; Return value:  Size  Location     Type
  1079 ;;                  1    wreg      void 
  1080 ;; Registers used:
  1081 ;;		wreg, status,2, status,0, pclath, cstack
  1082 ;; Tracked objects:
  1083 ;;		On entry : 0/0
  1084 ;;		On exit  : 0/0
  1085 ;;		Unchanged: 0/0
  1086 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1087 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1088 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1089 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1090 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1091 ;;Total ram usage:        2 bytes
  1092 ;; Hardware stack levels used:    1
  1093 ;; Hardware stack levels required when called:    1
  1094 ;; This function calls:
  1095 ;;		_turn_led_off
  1096 ;; This function is called by:
  1097 ;;		_main
  1098 ;;		_show_led_up_to
  1099 ;; This function uses a non-reentrant model
  1100 ;;
  1101                           
  1102                           
  1103                           ;psect for function _clear_leds
  1104  06E5                     _clear_leds:	
  1105                           
  1106                           ;range_sensor.c: 178: uint8_t count = 1;
  1107                           
  1108                           ;incstack = 0
  1109                           ; Regs used in _clear_leds: [wreg+status,2+status,0+pclath+cstack]
  1110  06E5  01F2               	clrf	clear_leds@count
  1111  06E6  0AF2               	incf	clear_leds@count,f
  1112                           
  1113                           ;range_sensor.c: 179: for (count = 1; count <= 10; count++)
  1114  06E7  01F2               	clrf	clear_leds@count
  1115  06E8  0AF2               	incf	clear_leds@count,f
  1116  06E9                     L1:	
  1117  06E9  300B               	movlw	11
  1118  06EA  0272               	subwf	clear_leds@count,w
  1119  06EB  1803               	btfsc	3,0
  1120  06EC  0008               	return
  1121                           
  1122                           ;range_sensor.c: 180: {
  1123                           ;range_sensor.c: 181: turn_led_off(count);
  1124  06ED  0872               	movf	clear_leds@count,w
  1125  06EE  3187  2713  3186   	fcall	_turn_led_off
  1126  06F1  3001               	movlw	1
  1127  06F2  00F1               	movwf	??_clear_leds
  1128  06F3  0871               	movf	??_clear_leds,w
  1129  06F4  07F2               	addwf	clear_leds@count,f
  1130  06F5  2EE9               	goto	L1
  1131  06F6                     __end_of_clear_leds:	
  1132                           
  1133                           	psect	text4
  1134  0713                     __ptext4:	
  1135 ;; *************** function _turn_led_off *****************
  1136 ;; Defined at:
  1137 ;;		line 230 in file "range_sensor.c"
  1138 ;; Parameters:    Size  Location     Type
  1139 ;;  led             1    wreg     unsigned char 
  1140 ;; Auto vars:     Size  Location     Type
  1141 ;;  led             1    0[COMMON] unsigned char 
  1142 ;; Return value:  Size  Location     Type
  1143 ;;                  1    wreg      void 
  1144 ;; Registers used:
  1145 ;;		wreg, status,2, status,0
  1146 ;; Tracked objects:
  1147 ;;		On entry : 0/0
  1148 ;;		On exit  : 0/0
  1149 ;;		Unchanged: 0/0
  1150 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1151 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1152 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1153 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1154 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1155 ;;Total ram usage:        1 bytes
  1156 ;; Hardware stack levels used:    1
  1157 ;; This function calls:
  1158 ;;		Nothing
  1159 ;; This function is called by:
  1160 ;;		_clear_leds
  1161 ;; This function uses a non-reentrant model
  1162 ;;
  1163                           
  1164                           
  1165                           ;psect for function _turn_led_off
  1166  0713                     _turn_led_off:	
  1167                           
  1168                           ;incstack = 0
  1169                           ; Regs used in _turn_led_off: [wreg+status,2+status,0]
  1170                           ;turn_led_off@led stored from wreg
  1171  0713  00F0               	movwf	turn_led_off@led
  1172                           
  1173                           ;range_sensor.c: 232: if (led == 1)
  1174  0714  0370               	decf	turn_led_off@led,w
  1175  0715  1D03               	btfss	3,2
  1176  0716  2F1A               	goto	l501
  1177                           
  1178                           ;range_sensor.c: 233: {
  1179                           ;range_sensor.c: 234: LATCbits.LATC0 = 0;
  1180  0717  0022               	movlb	2	; select bank2
  1181  0718  100E               	bcf	14,0	;volatile
  1182                           
  1183                           ;range_sensor.c: 235: }
  1184  0719  0008               	return
  1185  071A                     l501:	
  1186                           
  1187                           ;range_sensor.c: 236: else if (led == 2)
  1188  071A  3002               	movlw	2
  1189  071B  0670               	xorwf	turn_led_off@led,w
  1190  071C  1D03               	btfss	3,2
  1191  071D  2F21               	goto	l505
  1192                           
  1193                           ;range_sensor.c: 237: {
  1194                           ;range_sensor.c: 238: LATCbits.LATC1 = 0;
  1195  071E  0022               	movlb	2	; select bank2
  1196  071F  108E               	bcf	14,1	;volatile
  1197                           
  1198                           ;range_sensor.c: 239: }
  1199  0720  0008               	return
  1200  0721                     l505:	
  1201                           
  1202                           ;range_sensor.c: 240: else if (led == 3)
  1203  0721  3003               	movlw	3
  1204  0722  0670               	xorwf	turn_led_off@led,w
  1205  0723  1D03               	btfss	3,2
  1206  0724  2F28               	goto	l509
  1207                           
  1208                           ;range_sensor.c: 241: {
  1209                           ;range_sensor.c: 242: LATCbits.LATC2 = 0;
  1210  0725  0022               	movlb	2	; select bank2
  1211  0726  110E               	bcf	14,2	;volatile
  1212                           
  1213                           ;range_sensor.c: 243: }
  1214  0727  0008               	return
  1215  0728                     l509:	
  1216                           
  1217                           ;range_sensor.c: 244: else if (led == 4)
  1218  0728  3004               	movlw	4
  1219  0729  0670               	xorwf	turn_led_off@led,w
  1220  072A  1D03               	btfss	3,2
  1221  072B  2F2F               	goto	l513
  1222                           
  1223                           ;range_sensor.c: 245: {
  1224                           ;range_sensor.c: 246: LATCbits.LATC3 = 0;
  1225  072C  0022               	movlb	2	; select bank2
  1226  072D  118E               	bcf	14,3	;volatile
  1227                           
  1228                           ;range_sensor.c: 247: }
  1229  072E  0008               	return
  1230  072F                     l513:	
  1231                           
  1232                           ;range_sensor.c: 248: else if (led == 5)
  1233  072F  3005               	movlw	5
  1234  0730  0670               	xorwf	turn_led_off@led,w
  1235  0731  1D03               	btfss	3,2
  1236  0732  2F36               	goto	l517
  1237                           
  1238                           ;range_sensor.c: 249: {
  1239                           ;range_sensor.c: 250: LATCbits.LATC4 = 0;
  1240  0733  0022               	movlb	2	; select bank2
  1241  0734  120E               	bcf	14,4	;volatile
  1242                           
  1243                           ;range_sensor.c: 251: }
  1244  0735  0008               	return
  1245  0736                     l517:	
  1246                           
  1247                           ;range_sensor.c: 252: else if (led == 6)
  1248  0736  3006               	movlw	6
  1249  0737  0670               	xorwf	turn_led_off@led,w
  1250  0738  1D03               	btfss	3,2
  1251  0739  2F3D               	goto	l521
  1252                           
  1253                           ;range_sensor.c: 253: {
  1254                           ;range_sensor.c: 254: LATCbits.LATC5 = 0;
  1255  073A  0022               	movlb	2	; select bank2
  1256  073B  128E               	bcf	14,5	;volatile
  1257                           
  1258                           ;range_sensor.c: 255: }
  1259  073C  0008               	return
  1260  073D                     l521:	
  1261                           
  1262                           ;range_sensor.c: 256: else if (led == 7)
  1263  073D  3007               	movlw	7
  1264  073E  0670               	xorwf	turn_led_off@led,w
  1265  073F  1D03               	btfss	3,2
  1266  0740  2F44               	goto	l525
  1267                           
  1268                           ;range_sensor.c: 257: {
  1269                           ;range_sensor.c: 258: LATCbits.LATC6 = 0;
  1270  0741  0022               	movlb	2	; select bank2
  1271  0742  130E               	bcf	14,6	;volatile
  1272                           
  1273                           ;range_sensor.c: 259: }
  1274  0743  0008               	return
  1275  0744                     l525:	
  1276                           
  1277                           ;range_sensor.c: 260: else if (led == 8)
  1278  0744  3008               	movlw	8
  1279  0745  0670               	xorwf	turn_led_off@led,w
  1280  0746  1D03               	btfss	3,2
  1281  0747  2F4B               	goto	l529
  1282                           
  1283                           ;range_sensor.c: 261: {
  1284                           ;range_sensor.c: 262: LATCbits.LATC7 = 0;
  1285  0748  0022               	movlb	2	; select bank2
  1286  0749  138E               	bcf	14,7	;volatile
  1287                           
  1288                           ;range_sensor.c: 263: }
  1289  074A  0008               	return
  1290  074B                     l529:	
  1291                           
  1292                           ;range_sensor.c: 264: else if (led == 9)
  1293  074B  3009               	movlw	9
  1294  074C  0670               	xorwf	turn_led_off@led,w
  1295  074D  1D03               	btfss	3,2
  1296  074E  2F52               	goto	l533
  1297                           
  1298                           ;range_sensor.c: 265: {
  1299                           ;range_sensor.c: 266: LATBbits.LATB7 = 0;
  1300  074F  0022               	movlb	2	; select bank2
  1301  0750  138D               	bcf	13,7	;volatile
  1302                           
  1303                           ;range_sensor.c: 267: }
  1304  0751  0008               	return
  1305  0752                     l533:	
  1306                           
  1307                           ;range_sensor.c: 268: else if (led == 10)
  1308  0752  300A               	movlw	10
  1309  0753  0670               	xorwf	turn_led_off@led,w
  1310  0754  1D03               	btfss	3,2
  1311  0755  0008               	return
  1312                           
  1313                           ;range_sensor.c: 269: {
  1314                           ;range_sensor.c: 270: LATBbits.LATB6 = 0;
  1315  0756  0022               	movlb	2	; select bank2
  1316  0757  130D               	bcf	13,6	;volatile
  1317  0758  0008               	return
  1318  0759                     __end_of_turn_led_off:	
  1319                           
  1320                           	psect	text5
  1321  06D9                     __ptext5:	
  1322 ;; *************** function _setup_timer1 *****************
  1323 ;; Defined at:
  1324 ;;		line 135 in file "range_sensor.c"
  1325 ;; Parameters:    Size  Location     Type
  1326 ;;		None
  1327 ;; Auto vars:     Size  Location     Type
  1328 ;;		None
  1329 ;; Return value:  Size  Location     Type
  1330 ;;                  1    wreg      void 
  1331 ;; Registers used:
  1332 ;;		wreg, status,2, status,0
  1333 ;; Tracked objects:
  1334 ;;		On entry : 0/0
  1335 ;;		On exit  : 0/0
  1336 ;;		Unchanged: 0/0
  1337 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1338 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1339 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1340 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1341 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1342 ;;Total ram usage:        0 bytes
  1343 ;; Hardware stack levels used:    1
  1344 ;; This function calls:
  1345 ;;		Nothing
  1346 ;; This function is called by:
  1347 ;;		_main
  1348 ;; This function uses a non-reentrant model
  1349 ;;
  1350                           
  1351                           
  1352                           ;psect for function _setup_timer1
  1353  06D9                     _setup_timer1:	
  1354                           
  1355                           ;range_sensor.c: 137: T1CONbits.TMR1CS = 0b00;
  1356                           
  1357                           ;incstack = 0
  1358                           ; Regs used in _setup_timer1: [wreg+status,2+status,0]
  1359  06D9  303F               	movlw	-193
  1360  06DA  0020               	movlb	0	; select bank0
  1361  06DB  0598               	andwf	24,f	;volatile
  1362                           
  1363                           ;range_sensor.c: 138: T1CONbits.T1CKPS = 0b10;
  1364  06DC  0818               	movf	24,w	;volatile
  1365  06DD  39CF               	andlw	-49
  1366  06DE  3820               	iorlw	32
  1367  06DF  0098               	movwf	24	;volatile
  1368                           
  1369                           ;range_sensor.c: 140: T1GCONbits.TMR1GE = 0b1;
  1370  06E0  1799               	bsf	25,7	;volatile
  1371                           
  1372                           ;range_sensor.c: 141: T1GCONbits.T1GPOL = 0b1;
  1373  06E1  1719               	bsf	25,6	;volatile
  1374                           
  1375                           ;range_sensor.c: 142: T1GCONbits.T1GSS = 0b00;
  1376  06E2  30FC               	movlw	-4
  1377  06E3  0599               	andwf	25,f	;volatile
  1378  06E4  0008               	return
  1379  06E5                     __end_of_setup_timer1:	
  1380                           
  1381                           	psect	text6
  1382  06CD                     __ptext6:	
  1383 ;; *************** function _setup *****************
  1384 ;; Defined at:
  1385 ;;		line 122 in file "range_sensor.c"
  1386 ;; Parameters:    Size  Location     Type
  1387 ;;		None
  1388 ;; Auto vars:     Size  Location     Type
  1389 ;;		None
  1390 ;; Return value:  Size  Location     Type
  1391 ;;                  1    wreg      void 
  1392 ;; Registers used:
  1393 ;;		wreg, status,2
  1394 ;; Tracked objects:
  1395 ;;		On entry : 0/0
  1396 ;;		On exit  : 0/0
  1397 ;;		Unchanged: 0/0
  1398 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1399 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1400 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1401 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1402 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1403 ;;Total ram usage:        0 bytes
  1404 ;; Hardware stack levels used:    1
  1405 ;; This function calls:
  1406 ;;		Nothing
  1407 ;; This function is called by:
  1408 ;;		_main
  1409 ;; This function uses a non-reentrant model
  1410 ;;
  1411                           
  1412                           
  1413                           ;psect for function _setup
  1414  06CD                     _setup:	
  1415                           
  1416                           ;range_sensor.c: 124: TRISC = 0;
  1417                           
  1418                           ;incstack = 0
  1419                           ; Regs used in _setup: [wreg+status,2]
  1420  06CD  0021               	movlb	1	; select bank1
  1421  06CE  018E               	clrf	14	;volatile
  1422                           
  1423                           ;range_sensor.c: 125: TRISB = 0x3F;
  1424  06CF  303F               	movlw	63
  1425  06D0  008D               	movwf	13	;volatile
  1426                           
  1427                           ;range_sensor.c: 126: TRISAbits.TRISA5 = 0;
  1428  06D1  128C               	bcf	12,5	;volatile
  1429                           
  1430                           ;range_sensor.c: 128: ANSELAbits.ANSA4 = 0;
  1431  06D2  0023               	movlb	3	; select bank3
  1432  06D3  120C               	bcf	12,4	;volatile
  1433                           
  1434                           ;range_sensor.c: 130: LATC = 0x00;
  1435  06D4  0022               	movlb	2	; select bank2
  1436  06D5  018E               	clrf	14	;volatile
  1437                           
  1438                           ;range_sensor.c: 131: LATB = 0x00;
  1439  06D6  018D               	clrf	13	;volatile
  1440                           
  1441                           ;range_sensor.c: 132: LATA = 0x00;
  1442  06D7  018C               	clrf	12	;volatile
  1443  06D8  0008               	return
  1444  06D9                     __end_of_setup:	
  1445  007E                     btemp	set	126	;btemp
  1446  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      12
    BANK0            80      0       0
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_show_led_up_to
    _show_led_up_to->_clear_leds
    _clear_leds->_turn_led_off

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0     720
                                              6 COMMON     6     6      0
                         _clear_leds
                              _setup
                       _setup_timer1
                     _show_led_up_to
 ---------------------------------------------------------------------------------
 (1) _show_led_up_to                                       3     3      0     405
                                              3 COMMON     3     3      0
                         _clear_leds
                        _turn_led_on
 ---------------------------------------------------------------------------------
 (2) _turn_led_on                                          1     1      0     150
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _clear_leds                                           2     2      0     195
                                              1 COMMON     2     2      0
                       _turn_led_off
 ---------------------------------------------------------------------------------
 (3) _turn_led_off                                         1     1      0     150
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _setup_timer1                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _clear_leds
     _turn_led_off
   _setup
   _setup_timer1
   _show_led_up_to
     _clear_leds
       _turn_led_off
     _turn_led_on

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      C       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Sat Feb 25 18:28:47 2017

            __CFG_CP$OFF 0000                       l45 07AD              __CFG_LVP$ON 0000  
                    l501 071A                      l521 073D                      l513 072F  
                    l505 0721                      l533 0752                      l525 0744  
                    l517 0736                      l509 0728                      l623 0706  
                    l615 0701                      l529 074B                      l561 076E  
                    l553 0760                      l581 0791                      l573 0783  
                    l565 0775                      l557 0767                      l645 07AB  
                    l663 07F4                      l655 07D7                      l585 0798  
                    l577 078A                      l569 077C                      l659 07EC  
                    u317 07B3                      u327 07BA                      u275 07DB  
                    u285 07E5             __CFG_BORV$LO 0000                      wreg 0009  
           __CFG_IESO$ON 0000                     _LATA 010C                     _LATB 010D  
                   _LATC 010E             __CFG_WRT$OFF 0000            __CFG_FCMEN$ON 0000  
                   _main 079F                     btemp 007E            __CFG_BOREN$ON 0000  
            main@tmr_val 0079                     start 0002            __CFG_MCLRE$ON 0000  
         turn_led_on@led 0070            __CFG_PLLEN$ON 0000                    ?_main 0070  
          __CFG_WDTE$OFF 0000                    _TMR1H 0017                    _TMR1L 0016  
                  _TRISB 008D                    _TRISC 008E              _turn_led_on 0759  
                  _setup 06CD                    main@i 007B                    status 0003  
                  wtemp0 007E          __initialization 07FD             __end_of_main 07FD  
  __size_of_turn_led_off 0046           __CFG_LPBOR$OFF 0000                   ??_main 0076  
        turn_led_off@led 0070                   ?_setup 0070         ??_show_led_up_to 0073  
           _turn_led_off 0713           __CFG_PWRTE$OFF 0000           __CFG_STVREN$ON 0000  
__end_of__initialization 07FD           __pcstackCOMMON 0070            __end_of_setup 06D9  
                ??_setup 0070               _clear_leds 06E5               __pmaintext 079F  
        __CFG_PPS1WAY$ON 0000          clear_leds@count 0072          __CFG_WDTCCS$SWC 0000  
           ?_turn_led_on 0070  show_led_up_to@led_count 0074                  __ptext1 06F6  
                __ptext2 0759                  __ptext3 06E5                  __ptext4 0713  
                __ptext5 06D9                  __ptext6 06CD                _T1CONbits 0018  
                main@led 0078     end_of_initialization 07FD              ?_clear_leds 0070  
       __CFG_FOSC$INTOSC 0000            ?_setup_timer1 0070                _TRISAbits 008C  
         ??_setup_timer1 0070      start_initialization 07FD      __size_of_clear_leds 0011  
   __size_of_turn_led_on 0046  __size_of_show_led_up_to 001D                ___latbits 0002  
         __size_of_setup 000C                 _LATAbits 010C                 _LATBbits 010D  
               _LATCbits 010E            ?_turn_led_off 0070     __end_of_setup_timer1 06E5  
           ??_clear_leds 0071     __CFG_WDTCPS$WDTCPS1F 0000       __end_of_clear_leds 06F6  
         ??_turn_led_off 0070           _show_led_up_to 06F6               _ANSELAbits 018C  
             _T1GCONbits 0019            __size_of_main 005E     __CFG_WDTCWS$WDTCWSSW 0000  
 __end_of_show_led_up_to 0713            ??_turn_led_on 0070    __size_of_setup_timer1 000C  
      __CFG_CLKOUTEN$OFF 0000          ?_show_led_up_to 0070     __end_of_turn_led_off 0759  
    show_led_up_to@count 0075             _setup_timer1 06D9      __end_of_turn_led_on 079F  
