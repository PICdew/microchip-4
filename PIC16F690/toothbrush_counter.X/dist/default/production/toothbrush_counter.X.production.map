Microchip MPLAB XC8 Compiler V1.32 ()

Linker command line:

--edf=C:\Program Files (x86)\Microchip\xc8\v1.32\dat\en_msgs.txt -cs \
  -h+dist/default/production\toothbrush_counter.X.production.sym \
  --cmf=dist/default/production\toothbrush_counter.X.production.cmf -z \
  -Q16F690 -oC:\Users\erik\AppData\Local\Temp\s1ko.6 \
  -Mdist/default/production/toothbrush_counter.X.production.map -E1 \
  -ver=XC8 -ASTACK=0A0h-0efh -pstack=STACK -ACONST=00h-0FFhx16 \
  -ACODE=00h-07FFhx2 -ASTRCODE=00h-0FFFh -AENTRY=00h-0FFhx16 \
  -ASTRING=00h-0FFhx16 -ACOMMON=070h-07Fh -ABANK0=020h-06Fh \
  -ABANK1=0A0h-0EFh -ABANK2=0120h-016Fh \
  -ARAM=020h-06Fh,0A0h-0EFh,0120h-016Fh \
  -AABS1=020h-07Fh,0A0h-0EFh,0120h-016Fh -ASFR0=00h-01Fh -ASFR1=080h-09Fh \
  -ASFR2=0100h-011Fh -ASFR3=0180h-01EFh \
  -preset_vec=00h,intentry=04h,init,end_init -ppowerup=CODE -pcinit=CODE \
  -pfunctab=CODE -ACONFIG=02007h-02007h -pconfig=CONFIG -DCONFIG=2 \
  -AIDLOC=02000h-02003h -pidloc=IDLOC -DIDLOC=2 -AEEDATA=00h-0FFh/02100h \
  -peeprom_data=EEDATA -DEEDATA=2 -DCODE=2 -DSTRCODE=2 -DSTRING=2 -DCONST=2 \
  -DENTRY=2 -k C:\Users\erik\AppData\Local\Temp\s1ko.obj \
  dist/default/production\toothbrush_counter.X.production.obj 

Object code version is 3.11

Machine type is 16F690



                Name                               Link     Load   Length Selector   Space Scale
C:\Users\erik\AppData\Local\Temp\s1ko.obj
                end_init                             11       11        2        8       0
                reset_vec                             0        0        2        0       0
                config                             2007     2007        1     400E       0
dist/default/production\toothbrush_counter.X.production.obj
                cinit                                13       13       1B        8       0
                intentry                              4        4        D        8       0
                text12                              166      166       4E        8       0
                text11                              21A      21A       20        8       0
                text10                              10D      10D       59        8       0
                text9                               257      257       18        8       0
                text8                               1B4      1B4       41        8       0
                text7                               286      286       16        8       0
                text6                               2AF      2AF       11        8       0
                text5                               26F      26F       17        8       0
                text4                               23A      23A       1D        8       0
                text3                               29C      29C       13        8       0
                text2                               1F5      1F5       25        8       0
                text1                                B1       B1       5C        8       0
                maintext                             2E       2E       83        8       0
                cstackBANK0                          52       52        F       20       1
                cstackCOMMON                         70       70        5       70       1
                clrtext                             2C0      2C0        8        8       0
                dataBANK0                            61       61        1       20       1
                bssBANK0                             20       20       32       20       1
                dataCOMMON                           75       75        3       70       1
                bssCOMMON                            78       78        2       70       1
                idataBANK0                          2CB      2CB        1        8       0
                idataCOMMON                         2C8      2C8        3        8       0

TOTAL           Name                               Link     Load   Length     Space
        CLASS   STACK          

        CLASS   CONST          

        CLASS   CODE           
                end_init                             11       11        2         0
                cinit                                13       13       1B         0
                intentry                              4        4        D         0
                reset_vec                             0        0        2         0
                text12                              166      166       4E         0
                text11                              21A      21A       20         0
                text10                              10D      10D       59         0
                text9                               257      257       18         0
                text8                               1B4      1B4       41         0
                text7                               286      286       16         0
                text6                               2AF      2AF       11         0
                text5                               26F      26F       17         0
                text4                               23A      23A       1D         0
                text3                               29C      29C       13         0
                text2                               1F5      1F5       25         0
                text1                                B1       B1       5C         0
                maintext                             2E       2E       83         0
                clrtext                             2C0      2C0        8         0
                idataBANK0                          2CB      2CB        1         0
                idataCOMMON                         2C8      2C8        3         0

        CLASS   STRCODE        

        CLASS   ENTRY          

        CLASS   STRING         

        CLASS   COMMON         
                cstackCOMMON                         70       70        5         1
                dataCOMMON                           75       75        3         1
                bssCOMMON                            78       78        2         1

        CLASS   BANK0          
                cstackBANK0                          52       52        F         1
                dataBANK0                            61       61        1         1
                bssBANK0                             20       20       32         1

        CLASS   BANK1          

        CLASS   BANK2          

        CLASS   RAM            

        CLASS   ABS1           
                abs_s1                               7E       7E        2         1

        CLASS   SFR0           

        CLASS   SFR1           

        CLASS   SFR2           

        CLASS   SFR3           

        CLASS   CONFIG         
                config                             2007     2007        1         0

        CLASS   IDLOC          

        CLASS   EEDATA         

        CLASS   BANK3          



SEGMENTS        Name                           Load    Length   Top    Selector   Space  Class     Delta

                reset_vec                      000000  000002  000002         0       0  CODE        2
                intentry                       000004  0002C8  0002CC         8       0  CODE        2
                bssBANK0                       000020  000042  000062        20       1  BANK0       1
                cstackCOMMON                   000070  00000A  00007A        70       1  COMMON      1
                config                         002007  000001  002008      400E       0  CONFIG      2


UNUSED ADDRESS RANGES

        Name                Unused          Largest block    Delta
        BANK0            0062-006F              E           1
        BANK1            00A0-00EF             50           1
        BANK2            0120-016F             50           1
        CODE             0002-0003              2           2
                         02CC-0FFF            534
        COMMON           007A-007D              4           1
        CONST            0002-0003              2           2
                         02CC-0FFF            100
        EEDATA           2100-21FF            100           2
        ENTRY            0002-0003              2           2
                         02CC-0FFF            100
        IDLOC            2000-2003              4           2
        RAM              0062-006F              E           1
                         00A0-00EF             50
                         0120-016F             50
        SFR0             0000-001F             20           1
        SFR1             0080-009F             20           1
        SFR2             0100-011F             20           1
        SFR3             0180-01EF             70           1
        STACK            00A0-00EF             50           1
        STRCODE          0002-0003              2           2
                         02CC-0FFF            D34
        STRING           0002-0003              2           2
                         02CC-0FFF            100

                                  Symbol Table

LEDSetup@initialPhase          cstackBANK0  005A
_ANSEL                         (abs)        011E
_ANSELH                        (abs)        011F
_CCP1CONbits                   (abs)        0017
_INTCONbits                    (abs)        000B
_ISR                           text12       0166
_LED0Count                     bssBANK0     0020
_LED1Count                     bssBANK0     0021
_LED2Count                     bssBANK0     0022
_LED3Count                     bssBANK0     0023
_LEDOnMask                     bssCOMMON    0078
_LEDOnMaskNext                 bssBANK0     0024
_LEDSetup                      text10       010D
_OPTION_REGbits                (abs)        0081
_OSCCONbits                    (abs)        008F
_PIE1bits                      (abs)        008C
_PIR1bits                      (abs)        000C
_PORTAbits                     (abs)        0005
_PORTC                         (abs)        0007
_PR2                           (abs)        0092
_T1CONbits                     (abs)        0010
_T2CONbits                     (abs)        0012
_TMR1H                         (abs)        000F
_TMR1L                         (abs)        000E
_TMR2                          (abs)        0011
_TRISA                         (abs)        0085
_TRISC                         (abs)        0087
_WPUA                          (abs)        0095
__CFG_BOREN$ON                 (abs)        0000
__CFG_CP$OFF                   (abs)        0000
__CFG_CPD$OFF                  (abs)        0000
__CFG_FCMEN$OFF                (abs)        0000
__CFG_FOSC$INTRCIO             (abs)        0000
__CFG_IESO$OFF                 (abs)        0000
__CFG_MCLRE$ON                 (abs)        0000
__CFG_PWRTE$OFF                (abs)        0000
__CFG_WDTE$OFF                 (abs)        0000
__Habs1                        abs1         0000
__Hbank0                       bank0        0000
__Hbank1                       bank1        0000
__Hbank2                       bank2        0000
__Hbank3                       bank3        0000
__HbssBANK0                    bssBANK0     0000
__HbssCOMMON                   bssCOMMON    0000
__Hcinit                       cinit        002E
__Hclrtext                     clrtext      0000
__Hcode                        code         0000
__Hcommon                      common       0000
__Hconfig                      config       2008
__HcstackBANK0                 cstackBANK0  0000
__HcstackCOMMON                cstackCOMMON 0000
__HdataBANK0                   dataBANK0    0000
__HdataCOMMON                  dataCOMMON   0000
__Heeprom_data                 eeprom_data  0000
__Hend_init                    end_init     0013
__Hfunctab                     functab      0000
__HidataBANK0                  idataBANK0   0000
__HidataCOMMON                 idataCOMMON  0000
__Hidloc                       idloc        0000
__Hinit                        init         0011
__Hintentry                    intentry     0011
__Hmaintext                    maintext     0000
__Hpowerup                     powerup      0000
__Hram                         ram          0000
__Hreset_vec                   reset_vec    0002
__Hsfr0                        sfr0         0000
__Hsfr1                        sfr1         0000
__Hsfr2                        sfr2         0000
__Hsfr3                        sfr3         0000
__Hspace_0                     (abs)        2008
__Hspace_1                     (abs)        007A
__Hspace_2                     (abs)        0000
__Hspace_3                     (abs)        0000
__Hstack                       stack        0000
__Hstrings                     strings      0000
__Htext                        text         0000
__Labs1                        abs1         0000
__Lbank0                       bank0        0000
__Lbank1                       bank1        0000
__Lbank2                       bank2        0000
__Lbank3                       bank3        0000
__LbssBANK0                    bssBANK0     0000
__LbssCOMMON                   bssCOMMON    0000
__Lcinit                       cinit        0013
__Lclrtext                     clrtext      0000
__Lcode                        code         0000
__Lcommon                      common       0000
__Lconfig                      config       2007
__LcstackBANK0                 cstackBANK0  0000
__LcstackCOMMON                cstackCOMMON 0000
__LdataBANK0                   dataBANK0    0000
__LdataCOMMON                  dataCOMMON   0000
__Leeprom_data                 eeprom_data  0000
__Lend_init                    end_init     0011
__Lfunctab                     functab      0000
__LidataBANK0                  idataBANK0   0000
__LidataCOMMON                 idataCOMMON  0000
__Lidloc                       idloc        0000
__Linit                        init         0011
__Lintentry                    intentry     0004
__Lmaintext                    maintext     0000
__Lpowerup                     powerup      0000
__Lram                         ram          0000
__Lreset_vec                   reset_vec    0000
__Lsfr0                        sfr0         0000
__Lsfr1                        sfr1         0000
__Lsfr2                        sfr2         0000
__Lsfr3                        sfr3         0000
__Lspace_0                     (abs)        0000
__Lspace_1                     (abs)        0000
__Lspace_2                     (abs)        0000
__Lspace_3                     (abs)        0000
__Lstack                       stack        0000
__Lstrings                     strings      0000
__Ltext                        text         0000
__S0                           (abs)        2008
__S1                           (abs)        007A
__S2                           (abs)        0000
__S3                           (abs)        0000
___bmul                        text3        029C
___bmul@multiplicand           cstackBANK0  0052
___bmul@multiplier             cstackBANK0  0055
___bmul@product                cstackBANK0  0054
___int_sp                      stack        0000
___latbits                     (abs)        0001
___lbmod                       text2        01F5
___lbmod@counter               cstackBANK0  0057
___lbmod@dividend              cstackBANK0  0056
___lbmod@divisor               cstackBANK0  0052
___lbmod@rem                   cstackBANK0  0058
___sp                          stack        0000
__end_of_ISR                   text12       01B4
__end_of_LEDSetup              text10       0166
__end_of___bmul                text3        02AF
__end_of___lbmod               text2        021A
__end_of__initialization       cinit        002B
__end_of_main                  maintext     00B1
__end_of_phaseSetup            text8        01F5
__end_of_setup                 text7        029C
__end_of_setupLED              text11       023A
__end_of_setupPhase            text9        026F
__end_of_t1setup               text6        02C0
__end_of_t2setup               text5        0286
__end_of_turnOnLED             text4        0257
__end_of_updateLED             text1        010D
__initialization               cinit        0013
__pbssBANK0                    bssBANK0     0020
__pbssCOMMON                   bssCOMMON    0078
__pcstackBANK0                 cstackBANK0  0052
__pcstackCOMMON                cstackCOMMON 0070
__pdataBANK0                   dataBANK0    0061
__pdataCOMMON                  dataCOMMON   0075
__pidataBANK0                  idataBANK0   02CB
__pidataCOMMON                 idataCOMMON  02C8
__pintentry                    intentry     0004
__pmaintext                    maintext     002E
__ptext1                       text1        00B1
__ptext10                      text10       010D
__ptext11                      text11       021A
__ptext12                      text12       0166
__ptext2                       text2        01F5
__ptext3                       text3        029C
__ptext4                       text4        023A
__ptext5                       text5        026F
__ptext6                       text6        02AF
__ptext7                       text7        0286
__ptext8                       text8        01B4
__ptext9                       text9        0257
__size_of_ISR                  (abs)        0000
__size_of_LEDSetup             (abs)        0000
__size_of___bmul               (abs)        0000
__size_of___lbmod              (abs)        0000
__size_of_main                 (abs)        0000
__size_of_phaseSetup           (abs)        0000
__size_of_setup                (abs)        0000
__size_of_setupLED             (abs)        0000
__size_of_setupPhase           (abs)        0000
__size_of_t1setup              (abs)        0000
__size_of_t2setup              (abs)        0000
__size_of_turnOnLED            (abs)        0000
__size_of_updateLED            (abs)        0000
_cycle_state                   dataBANK0    0061
_doof                          bssBANK0     0025
_led0                          bssBANK0     0028
_led1                          bssBANK0     002E
_led2                          bssBANK0     0034
_led3                          bssBANK0     003A
_led4                          bssBANK0     0040
_main                          maintext     002E
_offtime                       dataCOMMON   0075
_onoff                         bssCOMMON    0079
_ontime                        dataCOMMON   0076
_phase0                        bssBANK0     0046
_phase1                        bssBANK0     0049
_phase2                        bssBANK0     004C
_phase3                        bssBANK0     004F
_phaseSetup                    text8        01B4
_setup                         text7        0286
_setupLED                      text11       021A
_setupPhase                    text9        0257
_t1IntCount                    bssBANK0     0026
_t1setup                       text6        02AF
_t2setup                       text5        026F
_turnOnLED                     text4        023A
_updateLED                     text1        00B1
_updateLEDs                    bssBANK0     0027
_updown                        dataCOMMON   0077
btemp                          (abs)        007E
clear_ram0                     clrtext      02C0
end_of_initialization          cinit        002B
interrupt_function             intentry     0004
intlevel0                      functab      0000
intlevel1                      functab      0000
intlevel2                      functab      0000
intlevel3                      functab      0000
intlevel4                      functab      0000
intlevel5                      functab      0000
ltemp                          (abs)        007E
ltemp0                         (abs)        007E
ltemp1                         (abs)        0082
ltemp2                         (abs)        0086
ltemp3                         (abs)        0080
main@i                         cstackBANK0  005E
main@initialPhase              cstackBANK0  0060
reset_vec                      reset_vec    0000
saved_w                        (abs)        007E
setupLED@LEDMask               cstackBANK0  0052
setupLED@initialCount          cstackBANK0  0053
setupLED@initialPhase          cstackBANK0  0054
setupLED@led                   cstackBANK0  0056
setupPhase@blinkCountThreshold cstackBANK0  0053
setupPhase@blinkDivisor        cstackBANK0  0052
setupPhase@nextPhase           cstackBANK0  0054
setupPhase@phase               cstackBANK0  0056
stackhi                        (abs)        0000
stacklo                        (abs)        0000
start                          init         0011
start_initialization           cinit        0013
ttemp                          (abs)        007E
ttemp0                         (abs)        007E
ttemp1                         (abs)        0081
ttemp2                         (abs)        0084
ttemp3                         (abs)        0087
ttemp4                         (abs)        007F
turnOnLED@led                  cstackBANK0  0053
updateLED@led                  cstackBANK0  005C
updateLED@retval               cstackBANK0  005B
wtemp                          (abs)        007E
wtemp0                         (abs)        007E
wtemp1                         (abs)        0080
wtemp2                         (abs)        0082
wtemp3                         (abs)        0084
wtemp4                         (abs)        0086
wtemp5                         (abs)        0088
wtemp6                         (abs)        007F


FUNCTION INFORMATION:

 *************** function _main *****************
 Defined at:
		line 34 in file "toothbrush_counter.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  i               2   12[BANK0 ] unsigned int 
  initialPhase    1   14[BANK0 ] PTR struct Phase
		 -> phase3(3), 
 Return value:  Size  Location     Type
                  2  104[COMMON] int 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       3       0       0
      Temps:          0       1       0       0
      Totals:         0       4       0       0
Total ram usage:        4 bytes
 Hardware stack levels required when called:    3
 This function calls:
		_LEDSetup
		_phaseSetup
		_setup
		_t1setup
		_t2setup
		_turnOnLED
		_updateLED
 This function is called by:
		Startup code after reset
 This function uses a non-reentrant model


 *************** function _updateLED *****************
 Defined at:
		line 41 in file "led.c"
 Parameters:    Size  Location     Type
  led             1    wreg     PTR struct LED
		 -> led0(6), led1(6), led2(6), led3(6), 
		 -> led4(6), 
 Auto vars:     Size  Location     Type
  led             1   10[BANK0 ] PTR struct LED
		 -> led0(6), led1(6), led2(6), led3(6), 
		 -> led4(6), 
  retval          1    9[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       2       0       0
      Temps:          0       2       0       0
      Totals:         0       4       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		___bmul
		___lbmod
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function ___lbmod *****************
 Defined at:
		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\lbmod.c"
 Parameters:    Size  Location     Type
  dividend        1    wreg     unsigned char 
  divisor         1    0[BANK0 ] unsigned char 
 Auto vars:     Size  Location     Type
  dividend        1    4[BANK0 ] unsigned char 
  rem             1    6[BANK0 ] unsigned char 
  counter         1    5[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       1       0       0
      Locals:         0       3       0       0
      Temps:          0       3       0       0
      Totals:         0       7       0       0
Total ram usage:        7 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_updateLED
 This function uses a non-reentrant model


 *************** function ___bmul *****************
 Defined at:
		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\Umul8.c"
 Parameters:    Size  Location     Type
  multiplier      1    wreg     unsigned char 
  multiplicand    1    0[BANK0 ] unsigned char 
 Auto vars:     Size  Location     Type
  multiplier      1    3[BANK0 ] unsigned char 
  product         1    2[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       1       0       0
      Locals:         0       2       0       0
      Temps:          0       1       0       0
      Totals:         0       4       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_updateLED
 This function uses a non-reentrant model


 *************** function _turnOnLED *****************
 Defined at:
		line 34 in file "led.c"
 Parameters:    Size  Location     Type
  led             1    wreg     PTR struct LED
		 -> led0(6), led1(6), led2(6), led3(6), 
		 -> led4(6), 
 Auto vars:     Size  Location     Type
  led             1    1[BANK0 ] PTR struct LED
		 -> led0(6), led1(6), led2(6), led3(6), 
		 -> led4(6), 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, fsr0l, fsr0h
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       1       0       0
      Temps:          0       1       0       0
      Totals:         0       2       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _t2setup *****************
 Defined at:
		line 128 in file "toothbrush_counter.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _t1setup *****************
 Defined at:
		line 112 in file "toothbrush_counter.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _setup *****************
 Defined at:
		line 97 in file "toothbrush_counter.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _phaseSetup *****************
 Defined at:
		line 191 in file "toothbrush_counter.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      PTR struct Phase
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       3       0       0
      Totals:         0       3       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_setupPhase
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _setupPhase *****************
 Defined at:
		line 23 in file "led.c"
 Parameters:    Size  Location     Type
  phase           1    wreg     PTR struct Phase
		 -> phase0(3), phase1(3), phase2(3), phase3(3), 
  blinkDivisor    1    0[BANK0 ] unsigned char 
  blinkCountTh    1    1[BANK0 ] unsigned char 
  nextPhase       1    2[BANK0 ] PTR struct Phase
		 -> NULL(0), phase0(3), phase1(3), phase2(3), 
 Auto vars:     Size  Location     Type
  phase           1    4[BANK0 ] PTR struct Phase
		 -> phase0(3), phase1(3), phase2(3), phase3(3), 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, fsr0l, fsr0h
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       3       0       0
      Locals:         0       1       0       0
      Temps:          0       1       0       0
      Totals:         0       5       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_phaseSetup
 This function uses a non-reentrant model


 *************** function _LEDSetup *****************
 Defined at:
		line 201 in file "toothbrush_counter.c"
 Parameters:    Size  Location     Type
  initialPhase    1    wreg     PTR struct Phase
		 -> phase3(3), 
 Auto vars:     Size  Location     Type
  initialPhase    1    8[BANK0 ] PTR struct Phase
		 -> phase3(3), 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       1       0       0
      Temps:          0       3       0       0
      Totals:         0       4       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_setupLED
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _setupLED *****************
 Defined at:
		line 10 in file "led.c"
 Parameters:    Size  Location     Type
  led             1    wreg     PTR struct LED
		 -> led0(6), led1(6), led2(6), led3(6), 
		 -> led4(6), 
  LEDMask         1    0[BANK0 ] unsigned char 
  initialCount    1    1[BANK0 ] unsigned char 
  initialPhase    1    2[BANK0 ] PTR struct Phase
		 -> phase3(3), 
 Auto vars:     Size  Location     Type
  led             1    4[BANK0 ] PTR struct LED
		 -> led0(6), led1(6), led2(6), led3(6), 
		 -> led4(6), 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, fsr0l, fsr0h, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       3       0       0
      Locals:         0       1       0       0
      Temps:          0       1       0       0
      Totals:         0       5       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_LEDSetup
 This function uses a non-reentrant model


 *************** function _ISR *****************
 Defined at:
		line 142 in file "toothbrush_counter.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          5       0       0       0
      Totals:         5       0       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		Interrupt level 1
 This function uses a non-reentrant model



MODULE INFORMATION

Module		Function		Class		Link	Load	Size
C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\lbmod.c
		___lbmod       		CODE           	01F5	0000	37

C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\lbmod.c estimated size: 37

toothbrush_counter.c
		_ISR           		CODE           	0166	0000	78
		_LEDSetup      		CODE           	010D	0000	89
		_t1setup       		CODE           	02AF	0000	17
		_t2setup       		CODE           	026F	0000	23
		_main          		CODE           	002E	0000	131
		_setup         		CODE           	0286	0000	22
		_phaseSetup    		CODE           	01B4	0000	65

toothbrush_counter.c estimated size: 425

C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\Umul8.c
		___bmul        		CODE           	029C	0000	19

C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\Umul8.c estimated size: 19

shared
		__initializatio		CODE           	0013	0000	24

shared estimated size: 24

led.c
		_updateLED     		CODE           	00B1	0000	92
		_setupLED      		CODE           	021A	0000	32
		_setupPhase    		CODE           	0257	0000	24
		_turnOnLED     		CODE           	023A	0000	29

led.c estimated size: 177

